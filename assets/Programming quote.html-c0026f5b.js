import{_ as l}from"./循环模型-ff88f5b7.js";import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as o,e as r}from"./app-82a511c8.js";const a={},s=r('<ul><li><ol><li>while 和 if这些条件判断就是条件判断，没有知行的功效，要记得执行，移动。</li></ol></li><li><ol start="2"><li>根据本来的顺序来判断大小，可能会没有这么绕弯。</li></ol></li><li><ol start="3"><li>大减小才是你想要的，R-L才是你的数组长度。</li></ol></li><li><ol start="4"><li>三目运算符判断是可以添加很多的&amp;&amp;来限制条件，判断后只能够运算一次，并且不能够上函数，使用的时候注意是否判断之后还需要进行下一步分别的操作。 用好这个东西代码的简洁度蹭蹭上涨。</li></ol></li><li><ol start="5"><li>if()为空才执行是需要写的。空写。</li></ol></li><li><ol start="6"><li>快排中的标准值也可能会在原位的。</li></ol></li><li><ol start="7"><li>特别是递归的边界条件需要重视。所有的进入条件都需要验证一下。</li></ol></li><li><ol start="8"><li>用for还是while要先问一下自己。</li></ol></li><li><ol start="9"><li>在数组操作中，Index是个非常的东西，可以找到位置，又可以取得内容。</li></ol></li><li><ol start="10"><li>桶的大小是最大值+1。所以创建的时候，是max+1.倒回去的时候也是max+1。</li></ol></li><li><ol start="11"><li>使用的数组，循环回来查看是否需要清空。</li></ol></li><li><ol start="12"><li>在条件判断中先做的事情，可能会因为后做的事情，变成，先做的事情多做一次，后做的事情少做最后一次。 有一个这样的模型帮助你判断循环：</li></ol></li></ul><div style="text-align:center;"><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><ul><li><ol start="13"><li>递归是需要占用内存的。</li></ol></li><li><ol start="14"><li>数组嵌套数组很复杂，就直接把数先弄出来（参考next数组大牛的写法。） -- 要对比的东西还是自己和自己对比还是先把index都定义出来，逻辑没有这么乱。</li></ol></li></ul><p><strong>C语言的毛病</strong></p><ul><li><ol><li>arr只能在创建的域内计算长度。</li></ol></li><li><ol start="2"><li>char*不能创建数组。</li></ol></li><li><ol start="3"><li>用C语言的字符串简直就是噩梦。</li></ol></li></ul><p><strong>C++和C的比对-C++优势篇</strong> 两者最大的区别就在于思想上，c语言编程单位是函数，语句是程序的基本单元。</p><p>而C++语言的编程单位是类。从c到c++的设计有过程设计为中心向以数据组织为中心转移。</p><ul><li><p>字符串的处理</p></li><li><p>数组等创建的时候可以不需要提前知道大小，慢慢扩展(这是非常重要的)</p></li><li><p>引用比指针好，可以解决指针只是一个复制品，不能够读取一些信息的缺点。</p></li><li><p>malloc和free，new和delete</p></li></ul><p>前者的使用需要调用库，并且可以扩展</p><p>后者的使用更安全，是关键字。</p><ul><li>C++通过class的封装，把C中自己创作的结构类型相关的东西都整合在一起，</li></ul><p>在复杂代码上整理了C语言，所以叫做C Plus。</p><ul><li>struct和class的区别</li></ul><p>class的默认访问权是private，而struct的默认访问权是public。</p><ul><li>数组嵌套数组的能力更强。</li></ul>',15),e=[s];function p(c,n){return t(),o("div",null,e)}const f=i(a,[["render",p],["__file","Programming quote.html.vue"]]);export{f as default};
