import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-e4bb05b4.js";const p={},o=t(`<p>���ֵ����⣺</p><ul><li><ol><li>tableView�������ú��к��л�ȽϺá�</li></ol></li><li><ol start="2"><li>��ʼ����ʱ���һ��nullptr</li></ol></li><li><ol start="3"><li>��ʾ���ʹ��볣�����Ǹ����µĲ���</li></ol></li><li><ol start="4"><li>������ģʽд�뵽ʱ���ַ����Ĵ�����Ҫ���ַ������飬���ַ���������Щ������</li></ol></li></ul><h2 id="txt�l�" tabindex="-1"><a class="header-anchor" href="#txt�l�" aria-hidden="true">#</a> TXT�ļ�</h2><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;mainwindow.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QTextCodec&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QApplication&gt;</span></span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>

    QTextCodec<span class="token operator">*</span> code <span class="token operator">=</span> QTextCodec<span class="token operator">::</span><span class="token function">codecForName</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token comment">//�������·��������</span>
    QTextCodec<span class="token operator">::</span><span class="token function">setCodecForLocale</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>                
    QApplication <span class="token function">a</span><span class="token punctuation">(</span>argc<span class="token punctuation">,</span> argv<span class="token punctuation">)</span><span class="token punctuation">;</span>
    MainWindow w<span class="token punctuation">;</span>
    w<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> a<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="h" tabindex="-1"><a class="header-anchor" href="#h" aria-hidden="true">#</a> .h</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">MAINWINDOW_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAINWINDOW_H</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QMainWindow&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QDir&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QFileDialog&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QDebug&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QTextStream&gt;</span></span>

QT_BEGIN_NAMESPACE
namespace Ui <span class="token punctuation">{</span> class MainWindow<span class="token punctuation">;</span> <span class="token punctuation">}</span>
QT_END_NAMESPACE

class MainWindow <span class="token operator">:</span> public QMainWindow
<span class="token punctuation">{</span>
    Q_OBJECT

public<span class="token operator">:</span>
    <span class="token function">MainWindow</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent <span class="token operator">=</span> nullptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">~</span><span class="token function">MainWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

private slots<span class="token operator">:</span>
    <span class="token keyword">void</span> <span class="token function">on_actOpen_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">on_actQfile_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">on_actQTextStream_Open_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">on_actionQTextStrramSave_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

private<span class="token operator">:</span>
    Ui<span class="token operator">::</span>MainWindow <span class="token operator">*</span>ui<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">// MAINWINDOW_H</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>TextStream �ڶ�ȡ��ʱ�����readline TextStream ��д���ʱ����Բ���Ҫת����QByteArray���ַ�������ֽ����顣��д��</p><p>������˵�� TextStream���ӵı�ݡ�</p><h3 id="cpp" tabindex="-1"><a class="header-anchor" href="#cpp" aria-hidden="true">#</a> .cpp</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;mainwindow.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;ui_mainwindow.h&quot;</span></span>

MainWindow<span class="token operator">::</span><span class="token function">MainWindow</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent<span class="token punctuation">)</span>
    <span class="token operator">:</span> <span class="token function">QMainWindow</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
    <span class="token punctuation">,</span> <span class="token function">ui</span><span class="token punctuation">(</span>new Ui<span class="token operator">::</span>MainWindow<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ui<span class="token operator">-&gt;</span><span class="token function">setupUi</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

MainWindow<span class="token operator">::</span><span class="token operator">~</span><span class="token function">MainWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    delete ui<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_actOpen_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//���ļ�</span>
    QString aFilename <span class="token operator">=</span> QFileDialog<span class="token operator">::</span><span class="token function">getOpenFileName</span><span class="token punctuation">(</span>this<span class="token punctuation">,</span><span class="token string">&quot;��һ���ļ�&quot;</span><span class="token punctuation">,</span>QDir<span class="token operator">::</span><span class="token function">currentPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;�����ļ�(*.*)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>aFilename<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token comment">// �����ļ�</span>
    QFile <span class="token function">me</span><span class="token punctuation">(</span>aFilename<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>me<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token comment">//���ļ�</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>me<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>QIODevice<span class="token operator">::</span>ReadOnly <span class="token operator">|</span> QIODevice<span class="token operator">::</span>Text<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
       ui<span class="token operator">-&gt;</span>plainTextEdit<span class="token operator">-&gt;</span><span class="token function">setPlainText</span><span class="token punctuation">(</span>me<span class="token punctuation">.</span><span class="token function">readAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//��ȡ�ļ�</span>
    ui<span class="token operator">-&gt;</span>tabWidget<span class="token operator">-&gt;</span><span class="token function">setCurrentIndex</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_actQfile_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">// ���ļ��Ի���</span>
    QString file <span class="token operator">=</span> QFileDialog<span class="token operator">::</span><span class="token function">getSaveFileName</span><span class="token punctuation">(</span>this<span class="token punctuation">,</span><span class="token string">&quot;ѡ�񱣴��ļ�&quot;</span><span class="token punctuation">,</span>QDir<span class="token operator">::</span><span class="token function">currentPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;ȫ���ļ�(*.*)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token comment">// �ļ���</span>
    QFile <span class="token function">afile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>afile<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token comment">// ���ļ�</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>afile<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>QIODevice<span class="token operator">::</span>WriteOnly<span class="token operator">|</span>QIODevice<span class="token operator">::</span>Text<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
      <span class="token comment">//����</span>
        QString str <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>plainTextEdit<span class="token operator">-&gt;</span><span class="token function">toPlainText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        QByteArray strBytes <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">toUtf8</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                             <span class="token comment">//ת�����ֽ�����</span>
        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>strBytes<span class="token punctuation">;</span>
        afile<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>strBytes<span class="token punctuation">,</span>strBytes<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        afile<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    ui<span class="token operator">-&gt;</span>tabWidget<span class="token operator">-&gt;</span><span class="token function">setCurrentIndex</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_actQTextStream_Open_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QString str <span class="token operator">=</span> QFileDialog<span class="token operator">::</span><span class="token function">getOpenFileName</span><span class="token punctuation">(</span>this<span class="token punctuation">,</span><span class="token string">&quot;�򿪵��ļ�&quot;</span><span class="token punctuation">,</span>QDir<span class="token operator">::</span><span class="token function">currentPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;ȫ���ļ�(*.*)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    QFile <span class="token function">file</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>QIODevice<span class="token operator">::</span>ReadOnly<span class="token operator">|</span>QIODevice<span class="token operator">::</span>Text<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

    QTextStream <span class="token function">iss</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>

    ui<span class="token operator">-&gt;</span>plainTextEdit_2<span class="token operator">-&gt;</span><span class="token function">setPlainText</span><span class="token punctuation">(</span>iss<span class="token punctuation">.</span><span class="token function">readAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    file<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>tabWidget<span class="token operator">-&gt;</span><span class="token function">setCurrentIndex</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_actionQTextStrramSave_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QString str <span class="token operator">=</span> QFileDialog<span class="token operator">::</span><span class="token function">getSaveFileName</span><span class="token punctuation">(</span>this<span class="token punctuation">,</span><span class="token string">&quot;ѡ�񱣴��ļ�&quot;</span><span class="token punctuation">,</span>QDir<span class="token operator">::</span><span class="token function">currentPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;ȫ���ļ�(*.*)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    QFile <span class="token function">file</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>QIODevice<span class="token operator">::</span>WriteOnly<span class="token operator">|</span>QIODevice<span class="token operator">::</span>Text<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

    QTextStream <span class="token function">iss</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    iss<span class="token punctuation">.</span><span class="token function">setAutoDetectUnicode</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token comment">// �Զ����Unicode</span>

    QString Text <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>plainTextEdit_2<span class="token operator">-&gt;</span><span class="token function">toPlainText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    iss<span class="token operator">&lt;&lt;</span>Text<span class="token punctuation">;</span>
    file<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="stm�l�" tabindex="-1"><a class="header-anchor" href="#stm�l�" aria-hidden="true">#</a> stm�ļ�</h2><p>QT��Ԥ��������ļ�����Ҫ�������汾�š�</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">on_action_Openstm_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QString aFileName <span class="token operator">=</span> QFileDialog<span class="token operator">::</span><span class="token function">getOpenFileName</span><span class="token punctuation">(</span>this<span class="token punctuation">,</span><span class="token string">&quot;ѡ���ļ�&quot;</span><span class="token punctuation">,</span>QDir<span class="token operator">::</span><span class="token function">currentPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;QTԤ������������ļ�(*.stm)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    QFile <span class="token function">File</span><span class="token punctuation">(</span>aFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>File<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>QIODevice<span class="token operator">::</span>ReadOnly<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    QDataStream <span class="token function">aStream</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>File<span class="token punctuation">)</span><span class="token punctuation">;</span>
    aStream<span class="token punctuation">.</span><span class="token function">setVersion</span><span class="token punctuation">(</span>QDataStream<span class="token operator">::</span>Qt_5_9<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment">//���汾�ţ�д��Ͷ�ȡҪ����</span>

    qint16 rowCount<span class="token punctuation">;</span>
    qint16 colCount<span class="token punctuation">;</span>

    aStream<span class="token operator">&gt;&gt;</span>rowCount<span class="token punctuation">;</span>aStream<span class="token operator">&gt;&gt;</span>colCount<span class="token punctuation">;</span>

    theModel<span class="token operator">-&gt;</span><span class="token function">setRowCount</span><span class="token punctuation">(</span>rowCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    theModel<span class="token operator">-&gt;</span><span class="token function">setColumnCount</span><span class="token punctuation">(</span>colCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//��ȡ��ͷ����</span>
    QString str<span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>theModel<span class="token operator">-&gt;</span><span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        aStream<span class="token operator">&gt;&gt;</span>str<span class="token punctuation">;</span>
        QStandardItem<span class="token operator">*</span> head <span class="token operator">=</span> new <span class="token function">QStandardItem</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        theModel<span class="token operator">-&gt;</span><span class="token function">setHorizontalHeaderItem</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token comment">// ��ȡ������������</span>
    qint16 ceShen<span class="token punctuation">;</span>
    qreal chuiShen<span class="token punctuation">,</span>fangWei<span class="token punctuation">,</span>weiYi<span class="token punctuation">;</span>
    QString zhiLiang<span class="token punctuation">;</span>
    bool quYang<span class="token punctuation">;</span>
    QStandardItem<span class="token operator">*</span> aItem<span class="token punctuation">;</span>
    QModelIndex index<span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>theModel<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        aStream<span class="token operator">&gt;&gt;</span>ceShen<span class="token punctuation">;</span>
        index <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">index</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">itemFromIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem<span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span>ceShen<span class="token punctuation">,</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">;</span>

        aStream<span class="token operator">&gt;&gt;</span>chuiShen<span class="token punctuation">;</span>
        index <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">index</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">itemFromIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem<span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span>chuiShen<span class="token punctuation">,</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">;</span>

        aStream<span class="token operator">&gt;&gt;</span>fangWei<span class="token punctuation">;</span>
        index <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">index</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">itemFromIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem<span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span>fangWei<span class="token punctuation">,</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">;</span>

        aStream<span class="token operator">&gt;&gt;</span>weiYi<span class="token punctuation">;</span>
        index <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">index</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">itemFromIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem<span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span>weiYi<span class="token punctuation">,</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">;</span>

        aStream<span class="token operator">&gt;&gt;</span>zhiLiang<span class="token punctuation">;</span>
        index <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">index</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">itemFromIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem<span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span>zhiLiang<span class="token punctuation">,</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">;</span>

        aStream<span class="token operator">&gt;&gt;</span>quYang<span class="token punctuation">;</span>
        index <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">index</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">itemFromIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>quYang<span class="token punctuation">)</span> aItem<span class="token operator">-&gt;</span><span class="token function">setCheckState</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>Checked<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> aItem<span class="token operator">-&gt;</span><span class="token function">setCheckState</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>Unchecked<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    File<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">on_actSaveStm_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QString aFileName <span class="token operator">=</span> QFileDialog<span class="token operator">::</span><span class="token function">getSaveFileName</span><span class="token punctuation">(</span>this<span class="token punctuation">,</span><span class="token string">&quot;ѡ���ļ�&quot;</span><span class="token punctuation">,</span>QDir<span class="token operator">::</span><span class="token function">currentPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;QTԤ������������ļ�(*.stm)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>aFileName<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    QFile <span class="token function">File</span><span class="token punctuation">(</span>aFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>File<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>File<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>QIODevice<span class="token operator">::</span>WriteOnly <span class="token operator">|</span> QIODevice<span class="token operator">::</span>Truncate<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span><span class="token punctuation">;</span>

    QDataStream <span class="token function">aStream</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>File<span class="token punctuation">)</span><span class="token punctuation">;</span>
    aStream<span class="token punctuation">.</span><span class="token function">setVersion</span><span class="token punctuation">(</span>QDataStream<span class="token operator">::</span>Qt_5_9<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment">//���汾�ţ�д��Ͷ�ȡҪ����</span>

    qint16 rowCount <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    qint16 colCount <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    aStream<span class="token operator">&lt;&lt;</span>rowCount<span class="token punctuation">;</span>aStream<span class="token operator">&lt;&lt;</span>colCount<span class="token punctuation">;</span>

    <span class="token comment">//��ȡ��ͷ����</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>theModel<span class="token operator">-&gt;</span><span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        QString str <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">horizontalHeaderItem</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aStream<span class="token operator">&lt;&lt;</span>str<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ��ȡ������������</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>theModel<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        QStandardItem<span class="token operator">*</span> Item <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">//����</span>
        qint16 ceShen <span class="token operator">=</span> Item<span class="token operator">-&gt;</span><span class="token function">data</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aStream<span class="token operator">&lt;&lt;</span>ceShen<span class="token punctuation">;</span>

        Item <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        qreal chuiShen <span class="token operator">=</span> Item<span class="token operator">-&gt;</span><span class="token function">data</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aStream<span class="token operator">&lt;&lt;</span> chuiShen<span class="token punctuation">;</span>

        Item <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        qreal fangWei <span class="token operator">=</span> Item<span class="token operator">-&gt;</span><span class="token function">data</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aStream<span class="token operator">&lt;&lt;</span>fangWei<span class="token punctuation">;</span>

        Item <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        qreal weiYi <span class="token operator">=</span> Item<span class="token operator">-&gt;</span><span class="token function">data</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFloat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aStream<span class="token operator">&lt;&lt;</span>weiYi<span class="token punctuation">;</span>

        Item <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        QString zhiLiang <span class="token operator">=</span> Item<span class="token operator">-&gt;</span><span class="token function">data</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aStream<span class="token operator">&lt;&lt;</span>zhiLiang<span class="token punctuation">;</span>

        Item <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aStream <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>Item<span class="token operator">-&gt;</span><span class="token function">checkState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> Qt<span class="token operator">::</span>Checked<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    File<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dat�l�" tabindex="-1"><a class="header-anchor" href="#dat�l�" aria-hidden="true">#</a> dat�ļ�</h2><h3 id="���a" tabindex="-1"><a class="header-anchor" href="#���a" aria-hidden="true">#</a> ���a</h3><p>dat�ļ���Ҫ���úô���ֽ��򣬵ȵȡ� ����QDateStraem����д�Ͷ�����QString����ͨ����������Ҫ����</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>

<span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">on_acOpendat_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QString aFileName <span class="token operator">=</span> QFileDialog<span class="token operator">::</span><span class="token function">getOpenFileName</span><span class="token punctuation">(</span>this<span class="token punctuation">,</span><span class="token string">&quot;ѡ�񱣴��ļ�&quot;</span><span class="token punctuation">,</span>QDir<span class="token operator">::</span><span class="token function">currentPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;��׼���������ļ�(*.dat)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>aFileName<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

    QFile <span class="token function">file</span><span class="token punctuation">(</span>aFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>QIODevice<span class="token operator">::</span>ReadOnly<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    QDataStream <span class="token function">aStream</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    aStream<span class="token punctuation">.</span><span class="token function">setByteOrder</span><span class="token punctuation">(</span>QDataStream<span class="token operator">::</span>BigEndian<span class="token punctuation">)</span><span class="token punctuation">;</span>                                         <span class="token comment">//С���ֽ��򣬴���ֽ���X86��С���ֽ���Ƕ��ʽƽ̨�Ǵ���ֽ���</span>

    qint16 rowCount<span class="token punctuation">;</span>
    qint16 colCount<span class="token punctuation">;</span>
    aStream<span class="token punctuation">.</span><span class="token function">readRawData</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>rowCount<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>qint16<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    aStream<span class="token punctuation">.</span><span class="token function">readRawData</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>colCount<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>qint16<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ���ñ����Է�����</span>
    theModel<span class="token operator">-&gt;</span><span class="token function">setRowCount</span><span class="token punctuation">(</span>rowCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    theModel<span class="token operator">-&gt;</span><span class="token function">setColumnCount</span><span class="token punctuation">(</span>colCount<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//��ȡ��ͷ����</span>
    <span class="token keyword">char</span><span class="token operator">*</span> buf<span class="token punctuation">;</span>
    uint strlen<span class="token punctuation">;</span>
    QStandardItem<span class="token operator">*</span> aItem<span class="token punctuation">;</span>

    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>colCount<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        aStream<span class="token punctuation">.</span><span class="token function">readBytes</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span>strlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
        QString str <span class="token operator">=</span> QString<span class="token operator">::</span><span class="token function">fromLocal8Bit</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span>strlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem <span class="token operator">=</span> new <span class="token function">QStandardItem</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        theModel<span class="token operator">-&gt;</span><span class="token function">setHorizontalHeaderItem</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>aItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//��ȡ����</span>
    qint16 ceShen<span class="token punctuation">;</span>
    qreal chuiShen<span class="token punctuation">,</span>fangWei<span class="token punctuation">,</span>weiYi<span class="token punctuation">;</span>
    QString zhiLiang<span class="token punctuation">;</span>
    bool quYang<span class="token punctuation">;</span>
    QModelIndex index<span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>rowCount<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        index <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">index</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">itemFromIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        aStream<span class="token punctuation">.</span><span class="token function">readRawData</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>ceShen<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>qint16<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem<span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span>ceShen<span class="token punctuation">,</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">;</span>

        index <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">index</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">itemFromIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                      <span class="token comment">// ����</span>
        aStream<span class="token punctuation">.</span><span class="token function">readRawData</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>chuiShen<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>qreal<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem<span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span>chuiShen<span class="token punctuation">,</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">;</span>

        index <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">index</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">itemFromIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                        <span class="token comment">// ����</span>
        aStream<span class="token punctuation">.</span><span class="token function">readRawData</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>fangWei<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>qreal<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem<span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span>fangWei<span class="token punctuation">,</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">;</span>

        index <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">index</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">itemFromIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                       <span class="token comment">// ����</span>
        aStream<span class="token punctuation">.</span><span class="token function">readRawData</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>weiYi<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>qreal<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem<span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span>weiYi<span class="token punctuation">,</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">;</span>

        index <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">index</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">itemFromIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                        <span class="token comment">// ����</span>
        aStream<span class="token punctuation">.</span><span class="token function">readBytes</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span>strlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
        zhiLiang <span class="token operator">=</span> QString<span class="token operator">::</span><span class="token function">fromLocal8Bit</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span>strlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>zhiLiang<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem<span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span>zhiLiang<span class="token punctuation">,</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">;</span>

        index <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">index</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">itemFromIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                      <span class="token comment">// ����</span>
        aStream<span class="token punctuation">.</span><span class="token function">readRawData</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>quYang<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>qint8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>quYang <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> aItem<span class="token operator">-&gt;</span><span class="token function">setCheckState</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>Checked<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> aItem<span class="token operator">-&gt;</span><span class="token function">setCheckState</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>Unchecked<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    file<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token punctuation">}</span>


<span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">on_actSaveDat_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QString aFileName <span class="token operator">=</span> QFileDialog<span class="token operator">::</span><span class="token function">getSaveFileName</span><span class="token punctuation">(</span>this<span class="token punctuation">,</span><span class="token string">&quot;ѡ�񱣴��ļ�&quot;</span><span class="token punctuation">,</span>QDir<span class="token operator">::</span><span class="token function">currentPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;��׼���������ļ�(*.dat)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>aFileName<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

    QFile <span class="token function">file</span><span class="token punctuation">(</span>aFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>file<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>QIODevice<span class="token operator">::</span>WriteOnly<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    QDataStream <span class="token function">aStream</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
    aStream<span class="token punctuation">.</span><span class="token function">setByteOrder</span><span class="token punctuation">(</span>QDataStream<span class="token operator">::</span>BigEndian<span class="token punctuation">)</span><span class="token punctuation">;</span>                                         <span class="token comment">//С���ֽ��򣬴���ֽ���X86��С���ֽ���Ƕ��ʽƽ̨�Ǵ���ֽ���</span>

    qint16 rowCount <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    qint16 colCount <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    aStream<span class="token punctuation">.</span><span class="token function">writeRawData</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>rowCount<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>qint16<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                  <span class="token comment">// д���ļ���</span>
    aStream<span class="token punctuation">.</span><span class="token function">writeRawData</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>colCount<span class="token punctuation">,</span><span class="token keyword">sizeof</span> <span class="token punctuation">(</span>qint16<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                 <span class="token comment">// д���ļ���</span>



    <span class="token comment">//��ȡ��ͷ����</span>
    QByteArray btArray<span class="token punctuation">;</span>
    QStandardItem<span class="token operator">*</span> aItem<span class="token punctuation">;</span>

    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>theModel<span class="token operator">-&gt;</span><span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">horizontalHeaderItem</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        QString str <span class="token operator">=</span> aItem<span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        btArray <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">toUtf8</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aStream<span class="token punctuation">.</span><span class="token function">writeBytes</span><span class="token punctuation">(</span>btArray<span class="token punctuation">,</span>btArray<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    qint8 yes<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>no<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>                                                                       <span class="token comment">// �ֱ�����߼�ֵture��false</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>theModel<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                        <span class="token comment">// ����</span>
        qint16 ceshen <span class="token operator">=</span> aItem<span class="token operator">-&gt;</span><span class="token function">data</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aStream<span class="token punctuation">.</span><span class="token function">writeRawData</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>ceshen<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>qint16<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                        <span class="token comment">// ����</span>
        qreal chuishen <span class="token operator">=</span> aItem<span class="token operator">-&gt;</span><span class="token function">data</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aStream<span class="token punctuation">.</span><span class="token function">writeRawData</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>chuishen<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>qreal<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                        <span class="token comment">// ����</span>
        qreal fangwei <span class="token operator">=</span> aItem<span class="token operator">-&gt;</span><span class="token function">data</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aStream<span class="token punctuation">.</span><span class="token function">writeRawData</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>fangwei<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>qreal<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                        <span class="token comment">// ����</span>
        qreal weiyi <span class="token operator">=</span> aItem<span class="token operator">-&gt;</span><span class="token function">data</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toDouble</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aStream<span class="token punctuation">.</span><span class="token function">writeRawData</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>weiyi<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>qreal<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                        <span class="token comment">// ����</span>
        QString zhiliang <span class="token operator">=</span> aItem<span class="token operator">-&gt;</span><span class="token function">data</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        btArray <span class="token operator">=</span> zhiliang<span class="token punctuation">.</span><span class="token function">toUtf8</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token string">&quot;�����ַ����ĳ���&quot;</span><span class="token operator">&lt;&lt;</span>zhiliang<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        aStream<span class="token punctuation">.</span><span class="token function">writeBytes</span><span class="token punctuation">(</span>btArray<span class="token punctuation">,</span>btArray<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                        <span class="token comment">// ����</span>
        bool quYang <span class="token operator">=</span> <span class="token punctuation">(</span>aItem<span class="token operator">-&gt;</span><span class="token function">checkState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> Qt<span class="token operator">::</span>Checked<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>quYang<span class="token punctuation">)</span> aStream<span class="token punctuation">.</span><span class="token function">writeRawData</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>yes<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>qint8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> aStream<span class="token punctuation">.</span><span class="token function">writeRawData</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>no<span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>qint8<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    file<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17),e=[o];function c(i,l){return s(),a("div",null,e)}const r=n(p,[["render",c],["__file","readText.html.vue"]]);export{r as default};
