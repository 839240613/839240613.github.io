import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as l,c as u,a as n,d as s,w as a,e as p,b as t}from"./app-e4bb05b4.js";const r={},d={class:"table-of-contents"},k=p(`<h2 id="qfilesystemmodel" tabindex="-1"><a class="header-anchor" href="#qfilesystemmodel" aria-hidden="true">#</a> QFileSystemModel</h2><h3 id="头文件" tabindex="-1"><a class="header-anchor" href="#头文件" aria-hidden="true">#</a> 头文件</h3><div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">MAINWINDOW_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAINWINDOW_H</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QMainWindow&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QStringListModel&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QFileSystemModel&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QDir&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QLabel&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QCheckBox&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QModelIndex&gt;</span></span>

QT_BEGIN_NAMESPACE
<span class="token keyword">namespace</span> Ui <span class="token punctuation">{</span> <span class="token keyword">class</span> <span class="token class-name">MainWindow</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
QT_END_NAMESPACE

<span class="token keyword">class</span> <span class="token class-name">MainWindow</span> <span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">QMainWindow</span></span>
<span class="token punctuation">{</span>
    Q_OBJECT

<span class="token keyword">public</span><span class="token operator">:</span>
    <span class="token function">MainWindow</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent <span class="token operator">=</span> <span class="token keyword">nullptr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">~</span><span class="token function">MainWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">private</span> slots<span class="token operator">:</span>
    <span class="token keyword">void</span> <span class="token function">on_treeView_clicked</span><span class="token punctuation">(</span><span class="token keyword">const</span> QModelIndex <span class="token operator">&amp;</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">private</span><span class="token operator">:</span>
    Ui<span class="token double-colon punctuation">::</span>MainWindow <span class="token operator">*</span>ui<span class="token punctuation">;</span>

    QFileSystemModel<span class="token operator">*</span> theModel<span class="token punctuation">;</span>                         <span class="token comment">//QFileSystemModel对象</span>

    <span class="token comment">//状态栏</span>
    QCheckBox<span class="token operator">*</span> chkIsDir<span class="token punctuation">;</span>                                <span class="token comment">// 可选框，判断文件选择的文件是否为文件夹</span>
    QLabel<span class="token operator">*</span> LabPath<span class="token punctuation">;</span>                                    <span class="token comment">// 显示文件路径</span>
    QLabel<span class="token operator">*</span> LabType<span class="token punctuation">;</span>                                    <span class="token comment">// 显示文件类型</span>
    QLabel<span class="token operator">*</span> LabFileName<span class="token punctuation">;</span>                                <span class="token comment">// 显示文件名称</span>
    QLabel<span class="token operator">*</span> LabFileSize<span class="token punctuation">;</span>                                <span class="token comment">// 显示文件大小</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">// MAINWINDOW_H</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="构造函数" tabindex="-1"><a class="header-anchor" href="#构造函数" aria-hidden="true">#</a> 构造函数</h3><p>关于statusbar的设置，创建了，必须放进状态栏里面，不然它就会自动的重叠显示在this上</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>MainWindow<span class="token operator">::</span><span class="token function">MainWindow</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent<span class="token punctuation">)</span>
    <span class="token operator">:</span> <span class="token function">QMainWindow</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span>
    <span class="token punctuation">,</span> <span class="token function">ui</span><span class="token punctuation">(</span>new Ui<span class="token operator">::</span>MainWindow<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ui<span class="token operator">-&gt;</span><span class="token function">setupUi</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//视图设置</span>
    theModel<span class="token operator">=</span> new <span class="token function">QFileSystemModel</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>
    theModel<span class="token operator">-&gt;</span><span class="token function">setRootPath</span><span class="token punctuation">(</span>QDir<span class="token operator">::</span><span class="token function">currentPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                              <span class="token comment">// 设置根目录</span>
    ui<span class="token operator">-&gt;</span>listView<span class="token operator">-&gt;</span><span class="token function">setModel</span><span class="token punctuation">(</span>theModel<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                        <span class="token comment">// 设置数据模型</span>
    ui<span class="token operator">-&gt;</span>tableView<span class="token operator">-&gt;</span><span class="token function">setModel</span><span class="token punctuation">(</span>theModel<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                        <span class="token comment">// 设置数据模型</span>
    ui<span class="token operator">-&gt;</span>treeView<span class="token operator">-&gt;</span><span class="token function">setModel</span><span class="token punctuation">(</span>theModel<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                        <span class="token comment">// 设置数据模型</span>
    <span class="token comment">//信号与槽关联，treeview单击时，其目录设置为listView和tableView的根节点</span>
    <span class="token function">connect</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>treeView<span class="token punctuation">,</span><span class="token function">SIGNAL</span><span class="token punctuation">(</span><span class="token function">clicked</span><span class="token punctuation">(</span>QModelIndex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ui<span class="token operator">-&gt;</span>listView<span class="token punctuation">,</span><span class="token function">SLOT</span><span class="token punctuation">(</span><span class="token function">setRootIndex</span><span class="token punctuation">(</span>QModelIndex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// </span>
    <span class="token function">connect</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>treeView<span class="token punctuation">,</span><span class="token function">SIGNAL</span><span class="token punctuation">(</span><span class="token function">clicked</span><span class="token punctuation">(</span>QModelIndex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ui<span class="token operator">-&gt;</span>tableView<span class="token punctuation">,</span><span class="token function">SLOT</span><span class="token punctuation">(</span><span class="token function">setRootIndex</span><span class="token punctuation">(</span>QModelIndex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   

    <span class="token comment">//状态栏</span>
    chkIsDir <span class="token operator">=</span> new <span class="token function">QCheckBox</span><span class="token punctuation">(</span><span class="token string">&quot;界面是否是目录&quot;</span><span class="token punctuation">,</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>
    chkIsDir <span class="token operator">-&gt;</span> <span class="token function">setMinimumWidth</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    LabPath <span class="token operator">=</span> new <span class="token function">QLabel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    LabPath<span class="token operator">-&gt;</span><span class="token function">setMinimumWidth</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    LabType <span class="token operator">=</span> new <span class="token function">QLabel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    LabType<span class="token operator">-&gt;</span><span class="token function">setMinimumWidth</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    LabFileName <span class="token operator">=</span> new <span class="token function">QLabel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    LabFileName<span class="token operator">-&gt;</span><span class="token function">setMinimumWidth</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    LabFileSize <span class="token operator">=</span> new <span class="token function">QLabel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    LabFileSize<span class="token operator">-&gt;</span><span class="token function">setMinimumWidth</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    ui<span class="token operator">-&gt;</span>statusbar<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span>chkIsDir<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>statusbar<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span>LabPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>statusbar<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span>LabType<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>statusbar<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span>LabFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>statusbar<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span>LabFileSize<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treeview项目信息显示" tabindex="-1"><a class="header-anchor" href="#treeview项目信息显示" aria-hidden="true">#</a> treeView项目信息显示</h3><p>QFileSystemModel和QTableView的配合非常绝美</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>
关于QFileSystemModel提供的接口信息
<span class="token operator">-</span> <span class="token number">1.</span> 是否为文件夹
<span class="token operator">-</span> <span class="token number">2.</span> 文件路径
<span class="token operator">-</span> <span class="token number">3.</span> 文件类型
<span class="token operator">-</span> <span class="token number">4.</span> 文件名


<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_treeView_clicked</span><span class="token punctuation">(</span><span class="token keyword">const</span> QModelIndex <span class="token operator">&amp;</span>index<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//装载状态栏</span>
    chkIsDir<span class="token operator">-&gt;</span><span class="token function">setChecked</span><span class="token punctuation">(</span>theModel<span class="token operator">-&gt;</span><span class="token function">isDir</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    LabPath<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span>theModel<span class="token operator">-&gt;</span><span class="token function">filePath</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    LabType<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span>theModel<span class="token operator">-&gt;</span><span class="token function">type</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    LabFileName<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span>theModel<span class="token operator">-&gt;</span><span class="token function">fileName</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> sz <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">size</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">1024</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>sz<span class="token operator">&lt;</span><span class="token number">1024</span><span class="token punctuation">)</span> LabFileSize<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token function">QString</span><span class="token punctuation">(</span><span class="token string">&quot;%1 KB&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">arg</span><span class="token punctuation">(</span>sz<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment">//第一种方式</span>
    <span class="token keyword">else</span> LabFileSize<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span>QString<span class="token operator">::</span><span class="token function">asprintf</span><span class="token punctuation">(</span><span class="token string">&quot;%.1f MB&quot;</span><span class="token punctuation">,</span>sz<span class="token operator">/</span><span class="token number">1024.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//第二种方式</span>

    ui<span class="token operator">-&gt;</span>statusbar<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span>chkIsDir<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>statusbar<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span>LabPath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>statusbar<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span>LabType<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>statusbar<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span>LabFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>statusbar<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span>LabFileSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关于QString的两种常用用法。</p><h2 id="qstringlistmodel" tabindex="-1"><a class="header-anchor" href="#qstringlistmodel" aria-hidden="true">#</a> QStringListmodel</h2><h3 id="头文件-1" tabindex="-1"><a class="header-anchor" href="#头文件-1" aria-hidden="true">#</a> 头文件</h3><p>没有特别的东西。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">STRINGMODELWINDOW_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">STRINGMODELWINDOW_H</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QMainWindow&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QStringList&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QStringListModel&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QModelIndex&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;Qt&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QDebug&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QLabel&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QUndoStack&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QUndoCommand&gt;</span></span>

namespace Ui <span class="token punctuation">{</span>
class StringModelWindow<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

class StringModelWindow <span class="token operator">:</span> public QMainWindow
<span class="token punctuation">{</span>
    Q_OBJECT

public<span class="token operator">:</span>
    explicit <span class="token function">StringModelWindow</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent <span class="token operator">=</span> nullptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">~</span><span class="token function">StringModelWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

private slots<span class="token operator">:</span>
    <span class="token keyword">void</span> <span class="token function">on_pushButton_addItem_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">on_pushButton_RecoverList_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">on_pushButton_InsertItem_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">on_pushButton_DelCurItem_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">on_pushButton_DelList_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">on_pushButton_ShowMode_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">on_pushButton_ClearText_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">on_listView_clicked</span><span class="token punctuation">(</span><span class="token keyword">const</span> QModelIndex <span class="token operator">&amp;</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>

private<span class="token operator">:</span>
    Ui<span class="token operator">::</span>StringModelWindow <span class="token operator">*</span>ui<span class="token punctuation">;</span>

    QStringListModel <span class="token operator">*</span>Themode<span class="token punctuation">;</span>

    QLabel<span class="token operator">*</span> LabInfo<span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">// STRINGMODELWINDOW_H</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="构造函数-1" tabindex="-1"><a class="header-anchor" href="#构造函数-1" aria-hidden="true">#</a> 构造函数</h3><p>通过StringLIst初始化QStringLIstmodel</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>StringModelWindow<span class="token operator">::</span><span class="token function">StringModelWindow</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent<span class="token punctuation">)</span> <span class="token operator">:</span>
    <span class="token function">QMainWindow</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">ui</span><span class="token punctuation">(</span>new Ui<span class="token operator">::</span>StringModelWindow<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ui<span class="token operator">-&gt;</span><span class="token function">setupUi</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>

    QStringList TheStrList<span class="token punctuation">;</span>
    TheStrList<span class="token operator">&lt;&lt;</span><span class="token string">&quot;北京&quot;</span><span class="token operator">&lt;&lt;</span><span class="token string">&quot;上海&quot;</span><span class="token operator">&lt;&lt;</span><span class="token string">&quot;天津&quot;</span><span class="token operator">&lt;&lt;</span><span class="token string">&quot;河北&quot;</span><span class="token operator">&lt;&lt;</span><span class="token string">&quot;山东&quot;</span><span class="token operator">&lt;&lt;</span><span class="token string">&quot;四川&quot;</span><span class="token operator">&lt;&lt;</span><span class="token string">&quot;重庆&quot;</span><span class="token punctuation">;</span>
    Themode <span class="token operator">=</span> new <span class="token function">QStringListModel</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>                                         <span class="token comment">// 初始化一个实体。</span>
    Themode<span class="token operator">-&gt;</span><span class="token function">setStringList</span><span class="token punctuation">(</span>TheStrList<span class="token punctuation">)</span><span class="token punctuation">;</span>                                           <span class="token comment">// mode导入TheStrList的内容。</span>
    ui<span class="token operator">-&gt;</span>listView<span class="token operator">-&gt;</span><span class="token function">setModel</span><span class="token punctuation">(</span>Themode<span class="token punctuation">)</span><span class="token punctuation">;</span>                                              <span class="token comment">// 设置数据模型</span>
    ui<span class="token operator">-&gt;</span>listView<span class="token operator">-&gt;</span><span class="token function">setEditTriggers</span><span class="token punctuation">(</span>QAbstractItemView<span class="token operator">::</span>DoubleClicked<span class="token operator">|</span>QAbstractItemView<span class="token operator">::</span>SelectedClicked<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//状态栏</span>
    LabInfo <span class="token operator">=</span> new <span class="token function">QLabel</span><span class="token punctuation">(</span><span class="token string">&quot;row:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    LabInfo<span class="token operator">-&gt;</span><span class="token function">setMinimumWidth</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>statusbar<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span>LabInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="添加一行" tabindex="-1"><a class="header-anchor" href="#添加一行" aria-hidden="true">#</a> 添加一行</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> StringModelWindow<span class="token operator">::</span><span class="token function">on_pushButton_addItem_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>

    Themode<span class="token operator">-&gt;</span><span class="token function">insertRow</span><span class="token punctuation">(</span>Themode<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                     <span class="token comment">// 在尾部加一行</span>
    QModelIndex index <span class="token operator">=</span> Themode<span class="token operator">-&gt;</span><span class="token function">index</span><span class="token punctuation">(</span>Themode<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment">// 为了选择新加的一行做准备</span>
    Themode<span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span><span class="token string">&quot;new item&quot;</span><span class="token punctuation">,</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">;</span>                          <span class="token comment">// 设置显示的数据。</span>
    ui<span class="token operator">-&gt;</span>listView<span class="token operator">-&gt;</span><span class="token function">setCurrentIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>                                        <span class="token comment">// 设置选中的行</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="插入一行" tabindex="-1"><a class="header-anchor" href="#插入一行" aria-hidden="true">#</a> 插入一行</h3><p>模型内的数据都是通过索引定位的，就像所有的数据结构都由迭代器寻找。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> StringModelWindow<span class="token operator">::</span><span class="token function">on_pushButton_InsertItem_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QModelIndex index <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>listView<span class="token operator">-&gt;</span><span class="token function">currentIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Themode<span class="token operator">-&gt;</span><span class="token function">insertRow</span><span class="token punctuation">(</span>index<span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                        <span class="token comment">//索引寻找，这个东西的信息包含行数，列数，父类</span>
    <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>index<span class="token punctuation">;</span>
    Themode<span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span><span class="token string">&quot;inserted item&quot;</span><span class="token punctuation">,</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>listView<span class="token operator">-&gt;</span><span class="token function">setCurrentIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除当前行" tabindex="-1"><a class="header-anchor" href="#删除当前行" aria-hidden="true">#</a> 删除当前行</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> StringModelWindow<span class="token operator">::</span><span class="token function">on_pushButton_DelCurItem_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>

    <span class="token comment">//删除当前项</span>
    QModelIndex index <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>listView<span class="token operator">-&gt;</span><span class="token function">currentIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    Themode<span class="token operator">-&gt;</span><span class="token function">removeRow</span><span class="token punctuation">(</span>index<span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                        <span class="token comment">//所有的控制，都需要控制model，都是model来进行数据的本质处理</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除所有行" tabindex="-1"><a class="header-anchor" href="#删除所有行" aria-hidden="true">#</a> 删除所有行</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> StringModelWindow<span class="token operator">::</span><span class="token function">on_pushButton_DelList_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>

    Themode<span class="token operator">-&gt;</span><span class="token function">removeRows</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>Themode<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="显示在富文本框上" tabindex="-1"><a class="header-anchor" href="#显示在富文本框上" aria-hidden="true">#</a> 显示在富文本框上</h3><p>通过QStringList作为model和QPlainTextEdit中间件，实现数据的传递。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> StringModelWindow<span class="token operator">::</span><span class="token function">on_pushButton_ShowMode_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QStringList tmpList <span class="token operator">=</span> Themode<span class="token operator">-&gt;</span><span class="token function">stringList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>plainTextEdit<span class="token operator">-&gt;</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>tmpList<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        ui<span class="token operator">-&gt;</span>plainTextEdit<span class="token operator">-&gt;</span><span class="token function">appendPlainText</span><span class="token punctuation">(</span>tmpList<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                  <span class="token comment">//takeAt和at的区别</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="清空富文本框" tabindex="-1"><a class="header-anchor" href="#清空富文本框" aria-hidden="true">#</a> 清空富文本框</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> StringModelWindow<span class="token operator">::</span><span class="token function">on_pushButton_ClearText_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ui<span class="token operator">-&gt;</span>plainTextEdit<span class="token operator">-&gt;</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="显示当前行信息" tabindex="-1"><a class="header-anchor" href="#显示当前行信息" aria-hidden="true">#</a> 显示当前行信息</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> StringModelWindow<span class="token operator">::</span><span class="token function">on_listView_clicked</span><span class="token punctuation">(</span><span class="token keyword">const</span> QModelIndex <span class="token operator">&amp;</span>index<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//显示QModelIndex的行、列号</span>
    LabInfo<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span>QString<span class="token operator">::</span><span class="token function">asprintf</span><span class="token punctuation">(</span><span class="token string">&quot;当前条目: row=%d&quot;</span><span class="token punctuation">,</span>index<span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="qstandarditemmodel" tabindex="-1"><a class="header-anchor" href="#qstandarditemmodel" aria-hidden="true">#</a> QStandardItemModel</h2><h3 id="头文件-2" tabindex="-1"><a class="header-anchor" href="#头文件-2" aria-hidden="true">#</a> 头文件</h3><p>自定义槽：on_currentChanged(const QModelIndex &amp;current,const QModelIndex &amp;previous);</p><div class="language-C line-numbers-mode" data-ext="C"><pre class="language-C"><code>#ifndef QSTANDITEMMODELEXAMPLE_H
#define QSTANDITEMMODELEXAMPLE_H

#include &lt;QMainWindow&gt;
#include&lt;QLabel&gt;
#include&lt;QStandardItemModel&gt;
#include&lt;QItemSelectionModel&gt;
#include&lt;QStringList&gt;
#include&lt;QFont&gt;
#include&lt;QFileDialog&gt;
#include&lt;QTextStream&gt;
#include&lt;QDebug&gt;
#include&lt;qwintspindelegate.h&gt;

#define FixedColumnCount 6


namespace Ui {
class QStandItemModelExample;
}

class QStandItemModelExample : public QMainWindow
{
    Q_OBJECT

public:
    explicit QStandItemModelExample(QWidget *parent = nullptr);
    ~QStandItemModelExample();

private:
    Ui::QStandItemModelExample *ui;

    QLabel* LabCurFile;                                        // 当前文件
    QLabel* LabCellPos;                                        // 当前单元格行列号
    QLabel* LabCellText;                                       // 当前单元格内容
    QStandardItemModel* theModel;                              // 数据模型
    QItemSelectionModel* theSelection;                         // 选择模型

    void iniModelFromStringList(QStringList&amp; aFileContent);                 // 从stringList初始化数据模型。

private slots:
    void  on_currentChanged(const QModelIndex &amp;current,const QModelIndex &amp;previous);

    void on_actOpen_triggered();
    void on_actSave_triggered();
    void on_actAppend_triggered();
    void on_actInsert_triggered();
    void on_actDelete_triggered();
    void on_actModelDeta_triggered();
    void on_actAlignLeft_triggered();
    void on_actAlignCenter_triggered();
    void on_actAlignRight_triggered();
    void on_actFontBold_triggered(bool checked);

    //自定义代理
private:
    QWIntSpinDelegate intSpinDelegate; //整型数
};

#endif // QSTANDITEMMODELEXAMPLE_H
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="构建函数" tabindex="-1"><a class="header-anchor" href="#构建函数" aria-hidden="true">#</a> 构建函数</h3><p>设定好QItemSelectionModel和QStandardItemModel，并设定好LabCurFile、LabCellPos、LabCellText。</p><div class="language-c++ line-numbers-mode" data-ext="c++"><pre class="language-c++"><code>QStandItemModelExample::QStandItemModelExample(QWidget *parent) :
    QMainWindow(parent),
    ui(new Ui::QStandItemModelExample)
{
    ui-&gt;setupUi(this);

    theModel = new QStandardItemModel(this);                  // 设置数据模型
    theSelection = new QItemSelectionModel(theModel);         // 设置选择模型
    connect(theSelection,SIGNAL(currentChanged(QModelIndex,QModelIndex)),this,SLOT(on_currentChanged(QModelIndex,QModelIndex)));

    ui-&gt;tableView-&gt;setModel(theModel);                        //设置好tablView视图。
    ui-&gt;tableView-&gt;setSelectionModel(theSelection);
    ui-&gt;tableView-&gt;setSelectionMode(QAbstractItemView::ExtendedSelection);
    ui-&gt;tableView-&gt;setSelectionBehavior(QAbstractItemView::SelectItems);

    ui-&gt;tableView-&gt;setItemDelegateForColumn(0,&amp;intSpinDelegate);

    //状态栏设置
    LabCellPos = new QLabel();
    LabCurFile = new QLabel();
    LabCellText = new QLabel();
    ui-&gt;statusbar-&gt;addWidget(LabCellPos);
    ui-&gt;statusbar-&gt;addWidget(LabCurFile);
    ui-&gt;statusbar-&gt;addWidget(LabCellText);

}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自定义槽函数" tabindex="-1"><a class="header-anchor" href="#自定义槽函数" aria-hidden="true">#</a> 自定义槽函数</h3><p>主要是用来显示当前单元格的信息。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">// 自定义槽函数，选择单元格变化的时候的相应。</span>
 <span class="token keyword">void</span>  QStandItemModelExample<span class="token operator">::</span><span class="token function">on_currentChanged</span><span class="token punctuation">(</span><span class="token keyword">const</span> QModelIndex <span class="token operator">&amp;</span>current<span class="token punctuation">,</span><span class="token keyword">const</span> QModelIndex <span class="token operator">&amp;</span>previous<span class="token punctuation">)</span>
 <span class="token punctuation">{</span>
     <span class="token keyword">if</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span><span class="token function">isValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                                                                                  <span class="token comment">// 判断边界</span>
     <span class="token punctuation">{</span>
        LabCellPos<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token function">QString</span><span class="token punctuation">(</span><span class="token string">&quot;当前单元格: %1 行，%2 列&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">arg</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">arg</span><span class="token punctuation">(</span>current<span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 获取当前单元格行和列</span>
        QStandardItem<span class="token operator">*</span> aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">itemFromIndex</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>                                            <span class="token comment">// 获取单元格单元</span>
        LabCurFile<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;单元格内容：&quot;</span> <span class="token operator">+</span>aItem<span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                  <span class="token comment">// 获取单元格内容</span>
        QFont font <span class="token operator">=</span> aItem<span class="token operator">-&gt;</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                         <span class="token comment">// 获取单元格格式</span>
        ui<span class="token operator">-&gt;</span>actFontBold<span class="token operator">-&gt;</span><span class="token function">setChecked</span><span class="token punctuation">(</span>font<span class="token punctuation">.</span><span class="token function">bold</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                           <span class="token comment">// 设置粗体Action的状态</span>
     <span class="token punctuation">}</span>

     <span class="token keyword">return</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="打开文件" tabindex="-1"><a class="header-anchor" href="#打开文件" aria-hidden="true">#</a> 打开文件</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * * 函数名称: 打开文件获取相关信息
 *   类名： QString，QFIleDialog，QstringList，QFile，QTextStream,
 *   变量名：
 *   curPath: 获取当前应用的运行路径
 *   aFileName: 获取QFileDialog用户获取的文件
 *   aFile: 文件类
 *   aTextStream: 文件流
 *   aFileNameList: 用StringList传递的东西
 *
*/</span>
<span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">on_actOpen_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QString curPath <span class="token operator">=</span> QCoreApplication<span class="token operator">::</span><span class="token function">applicationDirPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                   <span class="token comment">// 和QDir::homePath一样的作用</span>
    QString aFileName <span class="token operator">=</span> QFileDialog<span class="token operator">::</span><span class="token function">getOpenFileName</span><span class="token punctuation">(</span>this<span class="token punctuation">,</span><span class="token string">&quot;打开一个文件&quot;</span><span class="token punctuation">,</span>curPath<span class="token punctuation">,</span><span class="token string">&quot;数据文件(*.txt);;所有文件(*.*)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用FileDialog获取文件，并记录文件名字</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>aFileName<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>                                                                             <span class="token comment">// 制作一个边界</span>

    QStringList fFileContent<span class="token punctuation">;</span>                                                                                   <span class="token comment">// 初始化StringList传入制作单元格函数</span>
    QFile <span class="token function">aFile</span><span class="token punctuation">(</span>aFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                                     <span class="token comment">// 初始化文件类，为打开文件做准备</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>aFile<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>QIODevice<span class="token operator">::</span>ReadOnly<span class="token operator">|</span>QIODevice<span class="token operator">::</span>Text<span class="token punctuation">)</span><span class="token punctuation">)</span>                                                         <span class="token comment">// 打开文件，需要QIODevice类</span>
    <span class="token punctuation">{</span>
        QTextStream <span class="token function">aStream</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>aFile<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                            <span class="token comment">// 使打开文件后使用文字流读取数据，进行了换行符的自动处理</span>
        ui<span class="token operator">-&gt;</span>plainTextEdit<span class="token operator">-&gt;</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                             <span class="token comment">// 清除富文本状态</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>aStream<span class="token punctuation">.</span><span class="token function">atEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                                                                                 <span class="token comment">// 查看文字流是否为空。</span>
        <span class="token punctuation">{</span>
            QString str <span class="token operator">=</span> aStream<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                   <span class="token comment">// 一行一行的读</span>
            ui<span class="token operator">-&gt;</span>plainTextEdit<span class="token operator">-&gt;</span><span class="token function">appendPlainText</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                            <span class="token comment">// 一行一行的谢进富文本</span>
            fFileContent<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                           <span class="token comment">// 一行一行的写进StringLIst</span>
        <span class="token punctuation">}</span>
        aFile<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                                          <span class="token comment">// 文件类关闭</span>
        this<span class="token operator">-&gt;</span>LabCurFile<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;当前文件:&quot;</span> <span class="token operator">+</span> aFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                      <span class="token comment">// 状态栏信息</span>
        <span class="token function">iniModelFromStringList</span><span class="token punctuation">(</span>fFileContent<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                   <span class="token comment">// 制作单元格函数</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="初始化单元格" tabindex="-1"><a class="header-anchor" href="#初始化单元格" aria-hidden="true">#</a> 初始化单元格</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：把获取的信息放入QStandardItemmodel上
 * 大概行径：1.设置文本行数，2.获取并控制表头。3.设置好表格数据
 */</span>

<span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">iniModelFromStringList</span><span class="token punctuation">(</span>QStringList <span class="token operator">&amp;</span> aFileContent<span class="token punctuation">)</span>
<span class="token punctuation">{</span>   <span class="token comment">//从一个StringList获取数据，初始化数据模型</span>
    <span class="token keyword">int</span> rowCnt <span class="token operator">=</span> aFileContent<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                          <span class="token comment">// 获取文本行数，第一行是标题。</span>
    theModel<span class="token operator">-&gt;</span><span class="token function">setRowCount</span><span class="token punctuation">(</span>rowCnt<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                            <span class="token comment">// 设置文本行数。</span>

    <span class="token comment">//设置表头</span>
    QString header <span class="token operator">=</span> aFileContent<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                        <span class="token comment">// 获取第一行表头。</span>
    QStringList headerList <span class="token operator">=</span> header<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token function">QRegExp</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>QString<span class="token operator">::</span>SkipEmptyParts<span class="token punctuation">)</span><span class="token punctuation">;</span>                             <span class="token comment">// 分开header的Tab和末尾的空格都舍去。</span>
    theModel<span class="token operator">-&gt;</span><span class="token function">setHorizontalHeaderLabels</span><span class="token punctuation">(</span>headerList<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                            <span class="token comment">// 设置theModel的表头。</span>
    <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>headerList<span class="token punctuation">;</span>
    <span class="token comment">//设置表格数据</span>
    QStandardItem<span class="token operator">*</span> aItem<span class="token punctuation">;</span>                                                                                       <span class="token comment">// 初始化TableWIdget单个单元格</span>
    QStringList tmpList<span class="token punctuation">;</span>                                                                                        <span class="token comment">// 获取每行的数据</span>
    <span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>                                                                                                      <span class="token comment">// 列循环的参数</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>rowCnt<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>                                                                                   <span class="token comment">// 行循环的开始</span>
    <span class="token punctuation">{</span>
        QString aLineText <span class="token operator">=</span> aFileContent<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                 <span class="token comment">// 消除所有的tab放入QStringList中</span>
        tmpList <span class="token operator">=</span> aLineText<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token function">QRegExp</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>QString<span class="token operator">::</span>SkipEmptyParts<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>FixedColumnCount<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>                                                                           <span class="token comment">// 列循环的开始</span>
        <span class="token punctuation">{</span>
            aItem <span class="token operator">=</span> new <span class="token function">QStandardItem</span><span class="token punctuation">(</span>tmpList<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                           <span class="token comment">// 取第一个单元</span>
            theModel<span class="token operator">-&gt;</span><span class="token function">setItem</span><span class="token punctuation">(</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>j<span class="token punctuation">,</span>aItem<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                       <span class="token comment">// 设置第一个单元</span>
        <span class="token punctuation">}</span>

        aItem <span class="token operator">=</span> new <span class="token function">QStandardItem</span><span class="token punctuation">(</span>headerList<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                            <span class="token comment">// 最后一列</span>
        aItem<span class="token operator">-&gt;</span><span class="token function">setCheckable</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                              <span class="token comment">// 设置为Checkable</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>tmpList<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">==</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span> aItem<span class="token operator">-&gt;</span><span class="token function">setCheckState</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>Unchecked<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> aItem<span class="token operator">-&gt;</span><span class="token function">setCheckState</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>Checked<span class="token punctuation">)</span><span class="token punctuation">;</span>

        theModel<span class="token operator">-&gt;</span><span class="token function">setItem</span><span class="token punctuation">(</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>j<span class="token punctuation">,</span>aItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="保存文件" tabindex="-1"><a class="header-anchor" href="#保存文件" aria-hidden="true">#</a> 保存文件</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">on_actSave_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QString curPath <span class="token operator">=</span> QCoreApplication<span class="token operator">::</span><span class="token function">applicationDirPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                   <span class="token comment">// 和QDir::homePath一样的作用</span>
    QString aFileName <span class="token operator">=</span> QFileDialog<span class="token operator">::</span><span class="token function">getOpenFileName</span><span class="token punctuation">(</span>this<span class="token punctuation">,</span><span class="token string">&quot;打开一个文件&quot;</span><span class="token punctuation">,</span>curPath<span class="token punctuation">,</span><span class="token string">&quot;数据文件(*.txt);;所有文件(*.*)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 使用FileDialog获取文件，并记录文件名字</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>aFileName<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>                                                                             <span class="token comment">// 制作一个边界</span>

    QFile <span class="token function">aFile</span><span class="token punctuation">(</span>aFileName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>aFile<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span> QIODevice<span class="token operator">::</span>ReadWrite <span class="token operator">|</span> QIODevice<span class="token operator">::</span>Text <span class="token operator">|</span> QIODevice<span class="token operator">::</span>Truncate<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>                    <span class="token comment">// 以读写的方式打开文件</span>

    QTextStream <span class="token function">aStream</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>aFile<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                                <span class="token comment">// 使打开文件后使用文字流读取数据，进行了换行符的自动处理</span>
    ui<span class="token operator">-&gt;</span>plainTextEdit<span class="token operator">-&gt;</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                                 <span class="token comment">// 清除富文本状态</span>
    QStandardItem<span class="token operator">*</span> aItem<span class="token punctuation">;</span>
    <span class="token keyword">int</span> i<span class="token punctuation">,</span>j<span class="token punctuation">;</span>
    QString str<span class="token punctuation">;</span>
    <span class="token comment">//获取表头数据</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>theModel<span class="token operator">-&gt;</span><span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">horizontalHeaderItem</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        str <span class="token operator">=</span> str<span class="token operator">+</span>aItem<span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>QString<span class="token operator">::</span><span class="token function">asprintf</span><span class="token punctuation">(</span><span class="token string">&quot;\\t\\t&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    aStream<span class="token operator">&lt;&lt;</span>str<span class="token operator">&lt;&lt;</span><span class="token string">&quot;/n&quot;</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>plainTextEdit<span class="token operator">-&gt;</span><span class="token function">appendPlainText</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//获取数据</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>theModel<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        str <span class="token operator">=</span><span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>FixedColumnCount<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>
            str <span class="token operator">=</span> str <span class="token operator">+</span> aItem<span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t\\t&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                            <span class="token comment">// 最后一列</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>aItem<span class="token operator">-&gt;</span><span class="token function">checkState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>Qt<span class="token operator">::</span>Checked<span class="token punctuation">)</span> str<span class="token operator">+=</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> str<span class="token operator">+=</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">;</span>

        <span class="token comment">// 2. 循环装进数据  //自动换行</span>
        ui<span class="token operator">-&gt;</span>plainTextEdit<span class="token operator">-&gt;</span><span class="token function">appendPlainText</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        aStream<span class="token operator">&lt;&lt;</span>str<span class="token operator">&lt;&lt;</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    aFile<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//关闭文件。</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="单元格控制" tabindex="-1"><a class="header-anchor" href="#单元格控制" aria-hidden="true">#</a> 单元格控制</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：把获取的信息放入QStandardItemmodel上
 * 大概行为：获取行数，设置表头数据，设置表格数据
 */</span>

<span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">iniModelFromStringList</span><span class="token punctuation">(</span>QStringList <span class="token operator">&amp;</span> aFileContent<span class="token punctuation">)</span>
<span class="token punctuation">{</span>   <span class="token comment">//从一个StringList获取数据，初始化数据模型</span>
    <span class="token keyword">int</span> rowCnt <span class="token operator">=</span> aFileContent<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                          <span class="token comment">// 获取文本行数，第一行是标题。</span>
    theModel<span class="token operator">-&gt;</span><span class="token function">setRowCount</span><span class="token punctuation">(</span>rowCnt<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                            <span class="token comment">// 设置文本行数。</span>

    <span class="token comment">//设置表头</span>
    QString header <span class="token operator">=</span> aFileContent<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                        <span class="token comment">// 获取第一行表头。</span>
    <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>header<span class="token punctuation">;</span>
    QStringList headerList <span class="token operator">=</span> header<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token function">QRegExp</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>QString<span class="token operator">::</span>SkipEmptyParts<span class="token punctuation">)</span><span class="token punctuation">;</span>                             <span class="token comment">// 分开header的Tab和末尾的空格都舍去。</span>
    theModel<span class="token operator">-&gt;</span><span class="token function">setHorizontalHeaderLabels</span><span class="token punctuation">(</span>headerList<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                            <span class="token comment">// 设置theModel的表头。</span>
    <span class="token function">qDebug</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span>headerList<span class="token punctuation">;</span>
    <span class="token comment">//设置表格数据</span>
    QStandardItem<span class="token operator">*</span> aItem<span class="token punctuation">;</span>                                                                                       <span class="token comment">// 初始化TableWIdget单个单元格</span>
    QStringList tmpList<span class="token punctuation">;</span>                                                                                        <span class="token comment">// 获取每行的数据</span>
    <span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>                                                                                                      <span class="token comment">// 列循环的参数</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>rowCnt<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>                                                                                   <span class="token comment">// 行循环的开始</span>
    <span class="token punctuation">{</span>
        QString aLineText <span class="token operator">=</span> aFileContent<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                 <span class="token comment">// 消除所有的tab放入QStringList中</span>
        tmpList <span class="token operator">=</span> aLineText<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token function">QRegExp</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\s+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>QString<span class="token operator">::</span>SkipEmptyParts<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>FixedColumnCount<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>                                                                           <span class="token comment">// 列循环的开始</span>
        <span class="token punctuation">{</span>
            aItem <span class="token operator">=</span> new <span class="token function">QStandardItem</span><span class="token punctuation">(</span>tmpList<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                           <span class="token comment">// 取第一个单元</span>
            theModel<span class="token operator">-&gt;</span><span class="token function">setItem</span><span class="token punctuation">(</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>j<span class="token punctuation">,</span>aItem<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                       <span class="token comment">// 设置第一个单元</span>
        <span class="token punctuation">}</span>

        aItem <span class="token operator">=</span> new <span class="token function">QStandardItem</span><span class="token punctuation">(</span>headerList<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                            <span class="token comment">// 最后一列</span>
        aItem<span class="token operator">-&gt;</span><span class="token function">setCheckable</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                              <span class="token comment">// 设置为Checkable</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>tmpList<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">==</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span> aItem<span class="token operator">-&gt;</span><span class="token function">setCheckState</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>Unchecked<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> aItem<span class="token operator">-&gt;</span><span class="token function">setCheckState</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>Checked<span class="token punctuation">)</span><span class="token punctuation">;</span>

        theModel<span class="token operator">-&gt;</span><span class="token function">setItem</span><span class="token punctuation">(</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>j<span class="token punctuation">,</span>aItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="末尾添加行" tabindex="-1"><a class="header-anchor" href="#末尾添加行" aria-hidden="true">#</a> 末尾添加行</h3><p>insertRow是根据List添加的</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">on_actAppend_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QList<span class="token operator">&lt;</span>QStandardItem<span class="token operator">*</span><span class="token operator">&gt;</span> aItemList<span class="token punctuation">;</span>                                                                            <span class="token comment">// 列表类</span>
    QStandardItem<span class="token operator">*</span> aItem<span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>FixedColumnCount<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>                                                                       <span class="token comment">// 不包含最后一列</span>
    <span class="token punctuation">{</span>
        aItem <span class="token operator">=</span> new <span class="token function">QStandardItem</span><span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                         <span class="token comment">// 创建Item</span>
        aItemList<span class="token operator">&lt;&lt;</span>aItem<span class="token punctuation">;</span>                                                                                       <span class="token comment">// 添加到列表</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//获取最后一列的表头文字</span>
    QString str<span class="token operator">=</span>theModel<span class="token operator">-&gt;</span><span class="token function">headerData</span><span class="token punctuation">(</span>theModel<span class="token operator">-&gt;</span><span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>Qt<span class="token operator">::</span>Horizontal<span class="token punctuation">,</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    aItem <span class="token operator">=</span> new <span class="token function">QStandardItem</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                             <span class="token comment">// 创建&quot;测井取样&quot;Item</span>
    aItemList<span class="token operator">&lt;&lt;</span>aItem<span class="token punctuation">;</span>                                                                                           <span class="token comment">// 添加到列表</span>
    aItem<span class="token operator">-&gt;</span><span class="token function">setCheckable</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                                     <span class="token comment">// 设置好Checkable</span>

    theModel<span class="token operator">-&gt;</span><span class="token function">insertRow</span><span class="token punctuation">(</span>theModel<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>aItemList<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                        <span class="token comment">// 插入一行</span>


    QModelIndex curIndex <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">index</span><span class="token punctuation">(</span>theModel<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                           <span class="token comment">// 选择插入的一项</span>
    theSelection<span class="token operator">-&gt;</span><span class="token function">clearSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    theSelection<span class="token operator">-&gt;</span><span class="token function">setCurrentIndex</span><span class="token punctuation">(</span>curIndex<span class="token punctuation">,</span>QItemSelectionModel<span class="token operator">::</span>Select<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="插入行" tabindex="-1"><a class="header-anchor" href="#插入行" aria-hidden="true">#</a> 插入行</h3><p>通过索引模型获取当前行即可。 使用QModeIndex比较好。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">on_actInsert_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QList<span class="token operator">&lt;</span>QStandardItem<span class="token operator">*</span><span class="token operator">&gt;</span> aItemList<span class="token punctuation">;</span>                                                                            <span class="token comment">// 列表类</span>
    QStandardItem<span class="token operator">*</span> aItem<span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>FixedColumnCount<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>                                                                       <span class="token comment">// 不包含最后一列</span>
    <span class="token punctuation">{</span>
        aItem <span class="token operator">=</span> new <span class="token function">QStandardItem</span><span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                         <span class="token comment">// 创建Item</span>
        aItemList<span class="token operator">&lt;&lt;</span>aItem<span class="token punctuation">;</span>                                                                                       <span class="token comment">// 添加到列表</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//获取最后一列的表头文字</span>
    QString str<span class="token operator">=</span>theModel<span class="token operator">-&gt;</span><span class="token function">headerData</span><span class="token punctuation">(</span>theModel<span class="token operator">-&gt;</span><span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>Qt<span class="token operator">::</span>Horizontal<span class="token punctuation">,</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    aItem <span class="token operator">=</span> new <span class="token function">QStandardItem</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                             <span class="token comment">// 创建&quot;测井取样&quot;Item</span>
    aItemList<span class="token operator">&lt;&lt;</span>aItem<span class="token punctuation">;</span>                                                                                           <span class="token comment">// 添加到列表</span>
    aItem<span class="token operator">-&gt;</span><span class="token function">setCheckable</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                                     <span class="token comment">// 设置好Checkable</span>

    <span class="token keyword">int</span> row <span class="token operator">=</span> theSelection<span class="token operator">-&gt;</span><span class="token function">currentIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    theModel<span class="token operator">-&gt;</span><span class="token function">insertRow</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span>aItemList<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                         <span class="token comment">// 插入一行</span>


    QModelIndex curIndex <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">index</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                              <span class="token comment">// 选择插入的一项</span>
    theSelection<span class="token operator">-&gt;</span><span class="token function">clearSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    theSelection<span class="token operator">-&gt;</span><span class="token function">setCurrentIndex</span><span class="token punctuation">(</span>curIndex<span class="token punctuation">,</span>QItemSelectionModel<span class="token operator">::</span>Select<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除列" tabindex="-1"><a class="header-anchor" href="#删除列" aria-hidden="true">#</a> 删除列</h3><p>获取当前列。删除当前列。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">on_actDelete_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QModelIndex curIndex <span class="token operator">=</span> theSelection<span class="token operator">-&gt;</span><span class="token function">currentIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                  <span class="token comment">// 获取模型索引</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>curIndex<span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> theModel<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> theModel<span class="token operator">-&gt;</span><span class="token function">removeRow</span><span class="token punctuation">(</span>curIndex<span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// 删除最后一行</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        theModel<span class="token operator">-&gt;</span><span class="token function">removeRow</span><span class="token punctuation">(</span>curIndex<span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                              <span class="token comment">// 移除行。</span>
        theSelection<span class="token operator">-&gt;</span><span class="token function">setCurrentIndex</span><span class="token punctuation">(</span>curIndex<span class="token punctuation">,</span>QItemSelectionModel<span class="token operator">::</span>Select<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment">// 设定select的选择项。</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="插入列" tabindex="-1"><a class="header-anchor" href="#插入列" aria-hidden="true">#</a> 插入列</h3><p>在富文本显示数据</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">on_actModelDeta_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ui<span class="token operator">-&gt;</span>plainTextEdit<span class="token operator">-&gt;</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    QString str<span class="token punctuation">;</span>
    QStandardItem<span class="token operator">*</span> aItem<span class="token punctuation">;</span>
    <span class="token keyword">int</span> i<span class="token punctuation">,</span>j<span class="token punctuation">;</span>
    <span class="token comment">// 获取表头数据</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>theModel<span class="token operator">-&gt;</span><span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">horizontalHeaderItem</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        str <span class="token operator">=</span> str<span class="token operator">+</span>aItem<span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>QString<span class="token operator">::</span><span class="token function">asprintf</span><span class="token punctuation">(</span><span class="token string">&quot;\\t\\t&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    ui<span class="token operator">-&gt;</span>plainTextEdit<span class="token operator">-&gt;</span><span class="token function">appendPlainText</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 1. 循环获取数据</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>theModel<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        str <span class="token operator">=</span><span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>FixedColumnCount<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>
            str <span class="token operator">=</span> str <span class="token operator">+</span> aItem<span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;\\t\\t&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                            <span class="token comment">// 最后一列</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>aItem<span class="token operator">-&gt;</span><span class="token function">checkState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>Qt<span class="token operator">::</span>Checked<span class="token punctuation">)</span> str<span class="token operator">+=</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> str<span class="token operator">+=</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">;</span>

        <span class="token comment">// 2. 循环装进数据  //自动换行</span>
        ui<span class="token operator">-&gt;</span>plainTextEdit<span class="token operator">-&gt;</span><span class="token function">appendPlainText</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>}</p><h3 id="居左" tabindex="-1"><a class="header-anchor" href="#居左" aria-hidden="true">#</a> 居左</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">// 居左</span>
<span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">on_actAlignLeft_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>theSelection<span class="token operator">-&gt;</span><span class="token function">hasSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>                                           <span class="token comment">// 設置邊界</span>

    <span class="token comment">// 获取选择的单元格的模型索引列表，</span>
    QModelIndexList selectedIndex <span class="token operator">=</span> theSelection<span class="token operator">-&gt;</span><span class="token function">selectedIndexes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>selectedIndex<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        QModelIndex aIndex <span class="token operator">=</span> selectedIndex<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                                       <span class="token comment">// 获取一个模型索引</span>
        QStandardItem<span class="token operator">*</span> aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">itemFromIndex</span><span class="token punctuation">(</span>aIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem <span class="token operator">-&gt;</span> <span class="token function">setTextAlignment</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>AlignLeft<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="居中" tabindex="-1"><a class="header-anchor" href="#居中" aria-hidden="true">#</a> 居中</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">on_actAlignCenter_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>theSelection<span class="token operator">-&gt;</span><span class="token function">hasSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>                                           <span class="token comment">// 設置邊界</span>

    <span class="token comment">// 获取选择的单元格的模型索引列表，</span>
    QModelIndexList selectedIndex <span class="token operator">=</span> theSelection<span class="token operator">-&gt;</span><span class="token function">selectedIndexes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>selectedIndex<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        QModelIndex aIndex <span class="token operator">=</span> selectedIndex<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                                       <span class="token comment">// 获取一个模型索引</span>
        QStandardItem<span class="token operator">*</span> aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">itemFromIndex</span><span class="token punctuation">(</span>aIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem <span class="token operator">-&gt;</span> <span class="token function">setTextAlignment</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>AlignCenter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="居右" tabindex="-1"><a class="header-anchor" href="#居右" aria-hidden="true">#</a> 居右</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">on_actAlignRight_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>theSelection<span class="token operator">-&gt;</span><span class="token function">hasSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>                                           <span class="token comment">// 設置邊界</span>

    <span class="token comment">// 获取选择的单元格的模型索引列表，</span>
    QModelIndexList selectedIndex <span class="token operator">=</span> theSelection<span class="token operator">-&gt;</span><span class="token function">selectedIndexes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>selectedIndex<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        QModelIndex aIndex <span class="token operator">=</span> selectedIndex<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                                       <span class="token comment">// 获取一个模型索引</span>
        QStandardItem<span class="token operator">*</span> aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">itemFromIndex</span><span class="token punctuation">(</span>aIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem <span class="token operator">-&gt;</span> <span class="token function">setTextAlignment</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>AlignRight<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="粗体" tabindex="-1"><a class="header-anchor" href="#粗体" aria-hidden="true">#</a> 粗体</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">on_actFontBold_triggered</span><span class="token punctuation">(</span>bool checked<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>theSelection<span class="token operator">-&gt;</span><span class="token function">hasSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>                                           <span class="token comment">// 設置邊界</span>

    <span class="token comment">// 获取选择的单元格的模型索引列表，</span>
    QModelIndexList selectedIndex <span class="token operator">=</span> theSelection<span class="token operator">-&gt;</span><span class="token function">selectedIndexes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>selectedIndex<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        QModelIndex aIndex <span class="token operator">=</span> selectedIndex<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                                       <span class="token comment">// 获取一个模型索引</span>
        QStandardItem<span class="token operator">*</span> aItem <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">itemFromIndex</span><span class="token punctuation">(</span>aIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        QFont font <span class="token operator">=</span> aItem<span class="token operator">-&gt;</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        font<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span>checked<span class="token punctuation">)</span><span class="token punctuation">;</span>
        aItem<span class="token operator">-&gt;</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="代理" tabindex="-1"><a class="header-anchor" href="#代理" aria-hidden="true">#</a> 代理</h3><h4 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h4><p>在构造函数上加上</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>    <span class="token comment">//自定义组件</span>
    ui<span class="token operator">-&gt;</span>tableView<span class="token operator">-&gt;</span><span class="token function">setItemDelegateForColumn</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>intSpinDelegate<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="头文件-3" tabindex="-1"><a class="header-anchor" href="#头文件-3" aria-hidden="true">#</a> 头文件：</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">QWINTSPINDELEGATE_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">QWINTSPINDELEGATE_H</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QObject&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QWidget&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QStyledItemDelegate&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QSpinBox&gt;</span></span>

class QWIntSpinDelegate <span class="token operator">:</span> public QStyledItemDelegate
<span class="token punctuation">{</span>
    Q_OBJECT
public<span class="token operator">:</span>
    <span class="token function">QWIntSpinDelegate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//自定义代理组件必须继承以下四个函数</span>
    QWidget <span class="token operator">*</span> <span class="token function">createEditor</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent<span class="token punctuation">,</span> <span class="token keyword">const</span> QStyleOptionViewItem <span class="token operator">&amp;</span>option<span class="token punctuation">,</span> <span class="token keyword">const</span> QModelIndex <span class="token operator">&amp;</span>index<span class="token punctuation">)</span> <span class="token keyword">const</span> override<span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">setEditorData</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>editor<span class="token punctuation">,</span> <span class="token keyword">const</span> QModelIndex <span class="token operator">&amp;</span>index<span class="token punctuation">)</span> <span class="token keyword">const</span> override<span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">setModelData</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>editor<span class="token punctuation">,</span> QAbstractItemModel <span class="token operator">*</span>model<span class="token punctuation">,</span> <span class="token keyword">const</span> QModelIndex <span class="token operator">&amp;</span>index<span class="token punctuation">)</span> <span class="token keyword">const</span> override<span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">updateEditorGeometry</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>editor<span class="token punctuation">,</span> <span class="token keyword">const</span> QStyleOptionViewItem <span class="token operator">&amp;</span>option<span class="token punctuation">,</span> <span class="token keyword">const</span> QModelIndex <span class="token operator">&amp;</span>index<span class="token punctuation">)</span> <span class="token keyword">const</span> override<span class="token punctuation">;</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">// QWINTSPINDELEGATE_H</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="虚函数" tabindex="-1"><a class="header-anchor" href="#虚函数" aria-hidden="true">#</a> 虚函数</h3>`,79),v=p(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>QWidget <span class="token operator">*</span>  QWIntSpinDelegate<span class="token operator">::</span><span class="token function">createEditor</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent<span class="token punctuation">,</span> <span class="token keyword">const</span> QStyleOptionViewItem <span class="token operator">&amp;</span>option<span class="token punctuation">,</span> <span class="token keyword">const</span> QModelIndex <span class="token operator">&amp;</span>index<span class="token punctuation">)</span> <span class="token keyword">const</span>
<span class="token punctuation">{</span>
    QSpinBox <span class="token operator">*</span>editor <span class="token operator">=</span> new <span class="token function">QSpinBox</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    editor<span class="token operator">-&gt;</span><span class="token function">setFrame</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
    editor<span class="token operator">-&gt;</span><span class="token function">setMinimum</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    editor<span class="token operator">-&gt;</span><span class="token function">setMaximum</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> editor<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),m=p(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> QWIntSpinDelegate<span class="token operator">::</span><span class="token function">setEditorData</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>editor<span class="token punctuation">,</span> <span class="token keyword">const</span> QModelIndex <span class="token operator">&amp;</span>index<span class="token punctuation">)</span> <span class="token keyword">const</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> value <span class="token operator">=</span> index<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">data</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>Qt<span class="token operator">::</span>EditRole<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    QSpinBox<span class="token operator">*</span> spinBox <span class="token operator">=</span> static_cast<span class="token operator">&lt;</span>QSpinBox<span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>editor<span class="token punctuation">)</span><span class="token punctuation">;</span>                         <span class="token comment">//  强制转换类型</span>
    spinBox<span class="token operator">-&gt;</span><span class="token function">setValue</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),b=p(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> QWIntSpinDelegate<span class="token operator">::</span><span class="token function">setModelData</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>editor<span class="token punctuation">,</span> QAbstractItemModel <span class="token operator">*</span>model<span class="token punctuation">,</span> <span class="token keyword">const</span> QModelIndex <span class="token operator">&amp;</span>index<span class="token punctuation">)</span> <span class="token keyword">const</span>
<span class="token punctuation">{</span>
    QSpinBox<span class="token operator">*</span> spinBox <span class="token operator">=</span> static_cast<span class="token operator">&lt;</span>QSpinBox<span class="token operator">*</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>editor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    spinBox<span class="token operator">-&gt;</span><span class="token function">interpretText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                       
    <span class="token keyword">int</span> Value <span class="token operator">=</span> spinBox<span class="token operator">-&gt;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    model<span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>Value<span class="token punctuation">,</span>Qt<span class="token operator">::</span>EditRole<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),g=p(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> QWIntSpinDelegate<span class="token operator">::</span><span class="token function">updateEditorGeometry</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>editor<span class="token punctuation">,</span> <span class="token keyword">const</span> QStyleOptionViewItem <span class="token operator">&amp;</span>option<span class="token punctuation">,</span> <span class="token keyword">const</span> QModelIndex <span class="token operator">&amp;</span>index<span class="token punctuation">)</span> <span class="token keyword">const</span>
<span class="token punctuation">{</span>
    <span class="token comment">//设置组件大小</span>
    editor<span class="token operator">-&gt;</span><span class="token function">setGeometry</span><span class="token punctuation">(</span>option<span class="token punctuation">.</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function h(f,w){const e=c("router-link"),o=c("center");return l(),u("div",null,[n("nav",d,[n("ul",null,[n("li",null,[s(e,{to:"#qfilesystemmodel"},{default:a(()=>[t("QFileSystemModel")]),_:1}),n("ul",null,[n("li",null,[s(e,{to:"#头文件"},{default:a(()=>[t("头文件")]),_:1})]),n("li",null,[s(e,{to:"#构造函数"},{default:a(()=>[t("构造函数")]),_:1})]),n("li",null,[s(e,{to:"#treeview项目信息显示"},{default:a(()=>[t("treeView项目信息显示")]),_:1})])])]),n("li",null,[s(e,{to:"#qstringlistmodel"},{default:a(()=>[t("QStringListmodel")]),_:1}),n("ul",null,[n("li",null,[s(e,{to:"#头文件-1"},{default:a(()=>[t("头文件")]),_:1})]),n("li",null,[s(e,{to:"#构造函数-1"},{default:a(()=>[t("构造函数")]),_:1})]),n("li",null,[s(e,{to:"#添加一行"},{default:a(()=>[t("添加一行")]),_:1})]),n("li",null,[s(e,{to:"#插入一行"},{default:a(()=>[t("插入一行")]),_:1})]),n("li",null,[s(e,{to:"#删除当前行"},{default:a(()=>[t("删除当前行")]),_:1})]),n("li",null,[s(e,{to:"#删除所有行"},{default:a(()=>[t("删除所有行")]),_:1})]),n("li",null,[s(e,{to:"#显示在富文本框上"},{default:a(()=>[t("显示在富文本框上")]),_:1})]),n("li",null,[s(e,{to:"#清空富文本框"},{default:a(()=>[t("清空富文本框")]),_:1})]),n("li",null,[s(e,{to:"#显示当前行信息"},{default:a(()=>[t("显示当前行信息")]),_:1})])])]),n("li",null,[s(e,{to:"#qstandarditemmodel"},{default:a(()=>[t("QStandardItemModel")]),_:1}),n("ul",null,[n("li",null,[s(e,{to:"#头文件-2"},{default:a(()=>[t("头文件")]),_:1})]),n("li",null,[s(e,{to:"#构建函数"},{default:a(()=>[t("构建函数")]),_:1})]),n("li",null,[s(e,{to:"#自定义槽函数"},{default:a(()=>[t("自定义槽函数")]),_:1})]),n("li",null,[s(e,{to:"#打开文件"},{default:a(()=>[t("打开文件")]),_:1})]),n("li",null,[s(e,{to:"#初始化单元格"},{default:a(()=>[t("初始化单元格")]),_:1})]),n("li",null,[s(e,{to:"#保存文件"},{default:a(()=>[t("保存文件")]),_:1})]),n("li",null,[s(e,{to:"#单元格控制"},{default:a(()=>[t("单元格控制")]),_:1})]),n("li",null,[s(e,{to:"#末尾添加行"},{default:a(()=>[t("末尾添加行")]),_:1})]),n("li",null,[s(e,{to:"#插入行"},{default:a(()=>[t("插入行")]),_:1})]),n("li",null,[s(e,{to:"#删除列"},{default:a(()=>[t("删除列")]),_:1})]),n("li",null,[s(e,{to:"#插入列"},{default:a(()=>[t("插入列")]),_:1})]),n("li",null,[s(e,{to:"#居左"},{default:a(()=>[t("居左")]),_:1})]),n("li",null,[s(e,{to:"#居中"},{default:a(()=>[t("居中")]),_:1})]),n("li",null,[s(e,{to:"#居右"},{default:a(()=>[t("居右")]),_:1})]),n("li",null,[s(e,{to:"#粗体"},{default:a(()=>[t("粗体")]),_:1})]),n("li",null,[s(e,{to:"#代理"},{default:a(()=>[t("代理")]),_:1})]),n("li",null,[s(e,{to:"#头文件-3"},{default:a(()=>[t("头文件：")]),_:1})]),n("li",null,[s(e,{to:"#虚函数"},{default:a(()=>[t("虚函数")]),_:1})])])])])]),k,s(o,null,{default:a(()=>[t("创建组件")]),_:1}),v,s(o,null,{default:a(()=>[t("组件获取数据")]),_:1}),m,s(o,null,{default:a(()=>[t("将代理的值更新至模型")]),_:1}),b,s(o,null,{default:a(()=>[t("设置组件大小")]),_:1}),g])}const Q=i(r,[["render",h],["__file","modelAndView.html.vue"]]);export{Q as default};
