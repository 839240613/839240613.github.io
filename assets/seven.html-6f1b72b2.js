import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as r,e as n}from"./app-e4bb05b4.js";const d={},l=n('<h2 id="绘图" tabindex="-1"><a class="header-anchor" href="#绘图" aria-hidden="true">#</a> 绘图</h2><p>QT中QPainter类是绘图的基础类，使用该类可以进行各种绘图操作，但是不可以交互</p><p>QT中的GraphicsView类是绘图的交互类，使用该类可以进行各种绘图操作，并且可以交互。</p><p>Graphics是图形。</p><p>绘图类中有三个东西，第一个是QPainter，第二个是QPaintDevice，第三个是QPaintEngine。</p><p>QPaintEngine是绘图引擎，QPainter是绘图工具，QPaintDevice是绘图设备。引擎一般不需要打交道。</p><p>绘图设备一般有，QWidget，QImage，QPixmap，QImage等。</p><h3 id="qwidget" tabindex="-1"><a class="header-anchor" href="#qwidget" aria-hidden="true">#</a> QWidget</h3><p>有一个绘画的接口函数，想在这个窗口上画图，只需要写paintEvent函数即可。</p><p>局部物理坐标(viewport) -&gt; 逻辑坐标(window)坐标</p><h3 id="qpaint-主要属性" tabindex="-1"><a class="header-anchor" href="#qpaint-主要属性" aria-hidden="true">#</a> QPaint 主要属性</h3><ul><li><ol><li>pan属性： 是一个QPan对象，用于控制线条的颜色，宽度，线型等</li></ol></li><li><ol start="2"><li>brush属性： 是一个QBrush对象，用于设置一个区域的填充特性，可以设置填充颜色，填充方式，渐变特性等，</li></ol></li><li><ol start="3"><li>font属性： 是一个QFont对象，用于设置字体，大小，加粗，斜体等特性，</li></ol></li></ul><h3 id="qpen的主要功能" tabindex="-1"><a class="header-anchor" href="#qpen的主要功能" aria-hidden="true">#</a> QPen的主要功能</h3><table><thead><tr><th style="text-align:center;">函数原型</th><th style="text-align:center;">函数功能</th></tr></thead><tbody><tr><td style="text-align:center;">setColor(QColoe&amp; color)</td><td style="text-align:center;">设置画笔颜色，线条颜色</td></tr><tr><td style="text-align:center;">setWidth(int Width)</td><td style="text-align:center;">设置线条宽度</td></tr><tr><td style="text-align:center;">setStyle(Qt::PenStyle style)</td><td style="text-align:center;">设置线条样式，参数为Qt::Penstyle枚举类型</td></tr><tr><td style="text-align:center;">setCapStyle(Qt::PenCapStyle style)</td><td style="text-align:center;">设置线条端点样式，参数为Qt::PenCapStyle枚举类型</td></tr><tr><td style="text-align:center;">setJoinStyle(Qt::PenJoinStyle style)</td><td style="text-align:center;">设置连接样式，参数为Qt::PenJoinStyle枚举类型</td></tr></tbody></table><h4 id="线条样式" tabindex="-1"><a class="header-anchor" href="#线条样式" aria-hidden="true">#</a> 线条样式</h4><table><thead><tr><th style="text-align:center;">线条样式</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">Qt::SolidLine</td><td style="text-align:center;">实线</td></tr><tr><td style="text-align:center;">Qt::DashLine</td><td style="text-align:center;">虚线</td></tr><tr><td style="text-align:center;">Qt::DotLine</td><td style="text-align:center;">点线</td></tr><tr><td style="text-align:center;">Qt::DashDotLine</td><td style="text-align:center;">点虚线</td></tr><tr><td style="text-align:center;">Qt::DashDotDotLine</td><td style="text-align:center;">点虚点线</td></tr><tr><td style="text-align:center;">Qt::CustomDashLine</td><td style="text-align:center;">自定义虚线</td></tr></tbody></table><h4 id="线条端点样式" tabindex="-1"><a class="header-anchor" href="#线条端点样式" aria-hidden="true">#</a> 线条端点样式</h4><table><thead><tr><th style="text-align:center;">线条端点样式</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">Qt::FlatCap</td><td style="text-align:center;">平头</td></tr><tr><td style="text-align:center;">Qt::SquareCap</td><td style="text-align:center;">方头 覆盖线的端点</td></tr><tr><td style="text-align:center;">Qt::RoundCap</td><td style="text-align:center;">圆头</td></tr></tbody></table><h4 id="线条连接样式" tabindex="-1"><a class="header-anchor" href="#线条连接样式" aria-hidden="true">#</a> 线条连接样式</h4><table><thead><tr><th style="text-align:center;">线条连接样式</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">Qt::MiterJoin</td><td style="text-align:center;">尖角连接</td></tr><tr><td style="text-align:center;">Qt::BevelJoin</td><td style="text-align:center;">斜接连接</td></tr><tr><td style="text-align:center;">Qt::RoundJoin</td><td style="text-align:center;">圆角连接</td></tr></tbody></table><h3 id="qbrush的主要功能" tabindex="-1"><a class="header-anchor" href="#qbrush的主要功能" aria-hidden="true">#</a> QBrush的主要功能</h3><table><thead><tr><th style="text-align:center;">函数原型</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">void setColorr(QColor &amp;color)</td><td style="text-align:center;">设置画刷颜色，实体填充时即为填充颜色</td></tr><tr><td style="text-align:center;">void setStyle(Qt::BrushStyle style)</td><td style="text-align:center;">设置画刷样式，参数为Qt::BrushStyle枚举类型</td></tr><tr><td style="text-align:center;">void setTexture(QPixmap &amp;pixmap)</td><td style="text-align:center;">设置一个QPixmap类型的图片作为画刷的图片，画刷样式自动设置为Qt::TexturePattern</td></tr><tr><td style="text-align:center;">void setTextImage(QImage &amp;image)</td><td style="text-align:center;">设置一个QImage类型的图片作为画刷的图片，画刷样式自动设置为Qt::TexturePattern</td></tr></tbody></table><h4 id="画刷样式" tabindex="-1"><a class="header-anchor" href="#画刷样式" aria-hidden="true">#</a> 画刷样式</h4><table><thead><tr><th style="text-align:center;">画刷样式</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">Qt::SolidPattern</td><td style="text-align:center;">实心填充</td></tr><tr><td style="text-align:center;">Qt::Dense1Pattern</td><td style="text-align:center;">密集1填充</td></tr><tr><td style="text-align:center;">Qt::Dense2Pattern</td><td style="text-align:center;">密集2填充</td></tr><tr><td style="text-align:center;">Qt::Dense3Pattern</td><td style="text-align:center;">密集3填充</td></tr><tr><td style="text-align:center;">Qt::Dense4Pattern</td><td style="text-align:center;">密集4填充</td></tr><tr><td style="text-align:center;">Qt::Dense5Pattern</td><td style="text-align:center;">密集5填充</td></tr><tr><td style="text-align:center;">Qt::Dense6Pattern</td><td style="text-align:center;">密集6填充</td></tr><tr><td style="text-align:center;">Qt::Dense7Pattern</td><td style="text-align:center;">密集7填充</td></tr><tr><td style="text-align:center;">Qt::HorPattern</td><td style="text-align:center;">水平填充</td></tr><tr><td style="text-align:center;">Qt::VerPattern</td><td style="text-align:center;">垂直填充</td></tr><tr><td style="text-align:center;">Qt::CrossPattern</td><td style="text-align:center;">交叉填充</td></tr><tr><td style="text-align:center;">Qt::BDiagPattern</td><td style="text-align:center;">反向斜对角填充</td></tr><tr><td style="text-align:center;">Qt::FDiagPattern</td><td style="text-align:center;">正向斜对角填充</td></tr><tr><td style="text-align:center;">Qt::DiagCrossPattern</td><td style="text-align:center;">对角交叉填充</td></tr><tr><td style="text-align:center;">Qt::LinearGradientPattern</td><td style="text-align:center;">线性渐变填充</td></tr><tr><td style="text-align:center;">Qt::RadialGradientPattern</td><td style="text-align:center;">辐射渐变填充</td></tr><tr><td style="text-align:center;">Qt::ConicalGradientPattern</td><td style="text-align:center;">锥形渐变填充</td></tr><tr><td style="text-align:center;">Qt::TexturePattern</td><td style="text-align:center;">纹理填充</td></tr></tbody></table><h3 id="渐变填充类" tabindex="-1"><a class="header-anchor" href="#渐变填充类" aria-hidden="true">#</a> 渐变填充类</h3><table><thead><tr><th style="text-align:center;">渐变填充类</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">QLinearGradient</td><td style="text-align:center;">线性渐变填充</td></tr><tr><td style="text-align:center;">QRadialGradient</td><td style="text-align:center;">辐射渐变填充</td></tr><tr><td style="text-align:center;">QConicalGradient</td><td style="text-align:center;">锥形渐变填充</td></tr></tbody></table><table><thead><tr><th style="text-align:center;">延展方式类</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">QGradient::PadSpread</td><td style="text-align:center;">用结束点的颜色填充外部区域</td></tr><tr><td style="text-align:center;">QGradient::RepeatSpread</td><td style="text-align:center;">重复使用渐变的方式填充外部区域</td></tr><tr><td style="text-align:center;">QGradient::ReflectSpread</td><td style="text-align:center;">是反射式重复使用渐变方式填充外部区域</td></tr></tbody></table><h3 id="绘制基本图形" tabindex="-1"><a class="header-anchor" href="#绘制基本图形" aria-hidden="true">#</a> 绘制基本图形</h3><table><thead><tr><th style="text-align:center;">函数</th><th style="text-align:center;">图形名称</th></tr></thead><tbody><tr><td style="text-align:center;">drawArc</td><td style="text-align:center;">画弧线</td></tr><tr><td style="text-align:center;">drawChord</td><td style="text-align:center;">画一端弦</td></tr><tr><td style="text-align:center;">darwConvexPolygon</td><td style="text-align:center;">画凸多边形</td></tr><tr><td style="text-align:center;">darwEllipse</td><td style="text-align:center;">画椭圆</td></tr><tr><td style="text-align:center;">darwImage</td><td style="text-align:center;">绘制图片</td></tr><tr><td style="text-align:center;">drawLine</td><td style="text-align:center;">画直线</td></tr><tr><td style="text-align:center;">drawLines</td><td style="text-align:center;">画许多直线</td></tr><tr><td style="text-align:center;">drawPath</td><td style="text-align:center;">自定义路线</td></tr><tr><td style="text-align:center;">drawPie</td><td style="text-align:center;">绘制扇形</td></tr><tr><td style="text-align:center;">drawPixmap</td><td style="text-align:center;">绘制Pixmap图片</td></tr><tr><td style="text-align:center;">drawPoints</td><td style="text-align:center;">画许多点</td></tr><tr><td style="text-align:center;">drawPolygon</td><td style="text-align:center;">画多边形</td></tr><tr><td style="text-align:center;">drawPolyline</td><td style="text-align:center;">画多点连接的线</td></tr><tr><td style="text-align:center;">drawRect</td><td style="text-align:center;">画矩形</td></tr><tr><td style="text-align:center;">drawRoundRect</td><td style="text-align:center;">画圆角矩形</td></tr><tr><td style="text-align:center;">drawText</td><td style="text-align:center;">绘制单行文本</td></tr><tr><td style="text-align:center;">eraseRect</td><td style="text-align:center;">擦除某个矩形区域</td></tr><tr><td style="text-align:center;">fillPath</td><td style="text-align:center;">填充绘图路径</td></tr><tr><td style="text-align:center;">fillRect</td><td style="text-align:center;">填充一个矩形</td></tr></tbody></table><h2 id="坐标变换" tabindex="-1"><a class="header-anchor" href="#坐标变换" aria-hidden="true">#</a> 坐标变换</h2><p>QPainter有关坐标系统变换操作函数</p><table><thead><tr><th style="text-align:center;">函数原型</th><th style="text-align:center;">作用</th></tr></thead><tbody><tr><td style="text-align:center;">void translate(qreal dx,qreal dy)</td><td style="text-align:center;">坐标平移一定的偏移量，坐标原点平移到新的点</td></tr><tr><td style="text-align:center;">void rotate(qreal angle)</td><td style="text-align:center;">坐标系统旋转一个角度</td></tr><tr><td style="text-align:center;">void scale(qreal sx，qreal sy)</td><td style="text-align:center;">坐标系统缩放</td></tr><tr><td style="text-align:center;">void shear(qreal sh, qreal sv)</td><td style="text-align:center;">坐标系统做扭转变换</td></tr><tr><td style="text-align:center;">状态保存与恢复</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">void save()</td><td style="text-align:center;">保存painter当前的状态，就是将当前状态压入堆栈</td></tr><tr><td style="text-align:center;">void restore()</td><td style="text-align:center;">恢复上一次的状态，就是从堆栈中弹出上次的状态</td></tr><tr><td style="text-align:center;">void resetTransform()</td><td style="text-align:center;">复位所有的坐标变换</td></tr></tbody></table><h3 id="qpaintpath的应用" tabindex="-1"><a class="header-anchor" href="#qpaintpath的应用" aria-hidden="true">#</a> QPaintPath的应用</h3><p>三种函数： 用法很想python的乌龟用法</p><p>moveto lineto closeSubpath</p><h3 id="视口和窗口" tabindex="-1"><a class="header-anchor" href="#视口和窗口" aria-hidden="true">#</a> 视口和窗口</h3><p>先规定视口然后设置窗口即可</p><p>视口是为了给定窗口的左上方点，</p><p>而窗口是为了更加方便的变换坐标系</p><h3 id="绘图叠加模式" tabindex="-1"><a class="header-anchor" href="#绘图叠加模式" aria-hidden="true">#</a> 绘图叠加模式</h3><p>QPainter::SetCompositionMode枚举类型定义了绘图叠加模式 加上这句话即可。</p><h3 id="graphics-view-绘图结构" tabindex="-1"><a class="header-anchor" href="#graphics-view-绘图结构" aria-hidden="true">#</a> Graphics View 绘图结构</h3><p>由三个部分组成，场景，视图，图形项目</p><p>坐标也分为三个，其中图形坐标为逻辑坐标，其余都为物理坐标</p><h4 id="qgraphicsview类" tabindex="-1"><a class="header-anchor" href="#qgraphicsview类" aria-hidden="true">#</a> QGraphicsView类</h4><table><thead><tr><th style="text-align:center;">函数原型</th><th style="text-align:center;">作用</th></tr></thead><tbody><tr><td style="text-align:center;">setScene()</td><td style="text-align:center;">设置关联显示的场景</td></tr><tr><td style="text-align:center;">setSceneRect()</td><td style="text-align:center;">设置场景在视图中可视的部分的矩形区域</td></tr><tr><td style="text-align:center;">外观</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">setBackgroundBrush()</td><td style="text-align:center;">设置背景刷</td></tr><tr><td style="text-align:center;">setForegroundBrush()</td><td style="text-align:center;">设置前景刷</td></tr><tr><td style="text-align:center;">setAlignment()</td><td style="text-align:center;">设置场景中的对齐方式，缺省是上下都居中</td></tr><tr><td style="text-align:center;">setRenderHints()</td><td style="text-align:center;">设置视图的绘图选项</td></tr><tr><td style="text-align:center;">交互</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">setInterative()</td><td style="text-align:center;">是否允许场景交互，如果禁止交互，则任何键盘或鼠标操作都被忽略</td></tr><tr><td style="text-align:center;">rubberBandRect()</td><td style="text-align:center;">返回选择矩形框</td></tr><tr><td style="text-align:center;">setRubberBandSelection()</td><td style="text-align:center;">选择模式，参数为枚举类型</td></tr><tr><td style="text-align:center;">itemAt()</td><td style="text-align:center;">获取视图坐标系中某个位置处的图形项</td></tr><tr><td style="text-align:center;">items()</td><td style="text-align:center;">获取场景中的所有，或者某个选择区内图形项的列表</td></tr><tr><td style="text-align:center;">坐标映射</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">mapFromScene()</td><td style="text-align:center;">将场景的一个坐标转换为视图的坐标</td></tr><tr><td style="text-align:center;">mapToScene()</td><td style="text-align:center;">将视图中的一个坐标转换为场景的坐标</td></tr></tbody></table><h4 id="qgraphicsscene类" tabindex="-1"><a class="header-anchor" href="#qgraphicsscene类" aria-hidden="true">#</a> QGraphicsScene类</h4><table><thead><tr><th style="text-align:center;">函数原型</th><th style="text-align:center;">作用</th></tr></thead><tbody><tr><td style="text-align:center;">setSceneRect()</td><td style="text-align:center;">设置场景的矩形区</td></tr><tr><td style="text-align:center;">分组</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">creatItemGroup()</td><td style="text-align:center;">创建图形项组</td></tr><tr><td style="text-align:center;">destroyItemGroup()</td><td style="text-align:center;">移除一个图形项组</td></tr><tr><td style="text-align:center;">输入焦点</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">focusItem()</td><td style="text-align:center;">返回当前获得焦点的图形项</td></tr><tr><td style="text-align:center;">clearFocus()</td><td style="text-align:center;">去除选择焦点</td></tr><tr><td style="text-align:center;">hasFocus()</td><td style="text-align:center;">视图是否有焦点</td></tr><tr><td style="text-align:center;">图形项操作</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">addItem()</td><td style="text-align:center;">添加一个已经创建的图形项</td></tr><tr><td style="text-align:center;">removeItem()</td><td style="text-align:center;">删除图形项</td></tr><tr><td style="text-align:center;">clear()</td><td style="text-align:center;">清除所有图形项</td></tr><tr><td style="text-align:center;">mouseGrabberItem()</td><td style="text-align:center;">返回鼠标抓取的图形项</td></tr><tr><td style="text-align:center;">selectItems()</td><td style="text-align:center;">返回选择的图形项列表</td></tr><tr><td style="text-align:center;">clearSelection()</td><td style="text-align:center;">清除所有选择</td></tr><tr><td style="text-align:center;">itemAt()</td><td style="text-align:center;">获取某个位置处的顶层图形项</td></tr><tr><td style="text-align:center;">items()</td><td style="text-align:center;">返回某个矩形区域，多边形等选择区域内的图形项列表</td></tr><tr><td style="text-align:center;">添加图形项</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">addEllipse()</td><td style="text-align:center;">添加一个椭圆</td></tr><tr><td style="text-align:center;">addLine()</td><td style="text-align:center;">添加一条直线</td></tr><tr><td style="text-align:center;">addPath()</td><td style="text-align:center;">添加一个绘图路径</td></tr><tr><td style="text-align:center;">addPixmap()</td><td style="text-align:center;">添加一个图片</td></tr><tr><td style="text-align:center;">addPolygon()</td><td style="text-align:center;">添加一个多边形</td></tr><tr><td style="text-align:center;">addRect()</td><td style="text-align:center;">添加一个矩形</td></tr><tr><td style="text-align:center;">addText()</td><td style="text-align:center;">添加字符串</td></tr><tr><td style="text-align:center;">addWidget()</td><td style="text-align:center;">添加界面组件</td></tr></tbody></table><h4 id="qgraphicsitem类" tabindex="-1"><a class="header-anchor" href="#qgraphicsitem类" aria-hidden="true">#</a> QGraphicsItem类</h4><table><thead><tr><th style="text-align:center;">函数原型</th><th style="text-align:center;">功能描述</th></tr></thead><tbody><tr><td style="text-align:center;">setFlag()</td><td style="text-align:center;">设置图形项的操作属性，例如可选择，可移动</td></tr><tr><td style="text-align:center;">setOpacity()</td><td style="text-align:center;">设置透明度</td></tr><tr><td style="text-align:center;">setGraphicsEffect()</td><td style="text-align:center;">设置图形效果</td></tr><tr><td style="text-align:center;">setSelected()</td><td style="text-align:center;">图形项是否被选中</td></tr><tr><td style="text-align:center;">setData()</td><td style="text-align:center;">用户自定义数据</td></tr><tr><td style="text-align:center;">坐标映射</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">mapFromItem()</td><td style="text-align:center;">将另一个图形项的一个点映射到本图形项的坐标系</td></tr><tr><td style="text-align:center;">mapFromParent()</td><td style="text-align:center;">将父项的一个点映射到本图形项的坐标系</td></tr><tr><td style="text-align:center;">mapFromScene()</td><td style="text-align:center;">将场景中的一个点映射到本图形项的坐标系</td></tr><tr><td style="text-align:center;">mapToIitem()</td><td style="text-align:center;">将本图形项的一个点映射到另一个图形项的坐标系</td></tr><tr><td style="text-align:center;">mapToParent()</td><td style="text-align:center;">将本图形项内的一个点映射到父项坐标系</td></tr><tr><td style="text-align:center;">mapToScene()</td><td style="text-align:center;">将本图形项内的一个点映射到场景坐标系</td></tr></tbody></table>',50),a=[l];function i(s,c){return e(),r("div",null,a)}const g=t(d,[["render",i],["__file","seven.html.vue"]]);export{g as default};
