const t=JSON.parse('{"key":"v-10e80e67","path":"/bookList/QT/eight.html","title":"paint","lang":"zh-CN","frontmatter":{"title":"paint","icon":"fab fa-markdown","order":8,"category":["QT"],"prev":"seven.md","next":"night.md"},"headers":[{"level":2,"title":"Chart的主要部分","slug":"chart的主要部分","link":"#chart的主要部分","children":[{"level":3,"title":"QChartView的功能","slug":"qchartview的功能","link":"#qchartview的功能","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.65,"words":194},"filePathRelative":"bookList/QT/eight.md","excerpt":"<h2> Chart的主要部分</h2>\\n<h3> QChartView的功能</h3>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:center\\">函数原型</th>\\n<th style=\\"text-align:center\\">函数功能</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:center\\">void setChart(QChart* chart)</td>\\n<td style=\\"text-align:center\\">设置一个QChart对象作为显示的列表</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">QChart* chart()</td>\\n<td style=\\"text-align:center\\">返回QChartView当前设置的QChart类对象</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">void setRubberBand(RubberBands &amp;rubberBand)</td>\\n<td style=\\"text-align:center\\">设置选择框的类型，即鼠标在视图组件上拖动悬着范围的方式，是一个QChartView::RubberBand枚举类型的组合</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\">RubberBands rubberBand()</td>\\n<td style=\\"text-align:center\\">返回设置的选择框类型</td>\\n</tr>\\n</tbody>\\n</table>"}');export{t as data};
