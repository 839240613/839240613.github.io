import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as u,c as r,a as t,d as n,w as s,b as a,e as o}from"./app-e4bb05b4.js";const d="/assets/images/WIdgetApp界面1.png",k="/assets/images/WIdgetApp界面2.png",v="/assets/images/WIdgetApp界面3.png",m="/assets/images/WIdgetApp的Action1.png",b="/assets/images/WIdgetApp的Action.png",g="/assets/images/WIdgetApp的Quit.png",f={},w={class:"table-of-contents"},I=o('<h1 id="qlistwidget、tablewidget、dockwidget、toolbutton的使用" tabindex="-1"><a class="header-anchor" href="#qlistwidget、tablewidget、dockwidget、toolbutton的使用" aria-hidden="true">#</a> QListwidget、TableWidget、DockWIdget、ToolButton的使用</h1><h2 id="项目介绍" tabindex="-1"><a class="header-anchor" href="#项目介绍" aria-hidden="true">#</a> 项目介绍</h2><ul><li>项目名称：WIdgetApp</li><li>项目介绍：WIdgetApp是一个使用QListWidget、QTableWidget、QDockWidget、QToolButton等控件的应用程序。</li><li>项目功能：该应用程序实现了对QListWidget、QTableWidget、QDockWidget、QToolButton等控件的使用。</li><li>项目运行：双击运行WIdgetApp.pro文件即可运行。</li><li>项目源码：-</li></ul><p>该项目实现了以下功能：</p><ul><li><ol><li>实现toolBox与tabWidget的联动，tabWidget的内容会随着toolBox的选中而改变。</li></ol></li><li><ol start="2"><li>实现toolBox与statuBar的联动，statuBar的内容会随着toolBox的选中而改变。</li></ol></li><li><ol start="3"><li>实现QListWidget添加项目，删除项目，修改项目，反选项目等功能。</li></ol></li><li><ol start="4"><li>实现QTableWidget添加项目，删除项目，修改项目，反选项目等功能。</li></ol></li><li><ol start="5"><li>实现QTreeWidget作为自定义目录控件。使用QFileDialog选择文件夹或图片文件制作目录，并将图片文件通过QPixmap显示在scrollArea中。</li></ol></li></ul><h2 id="制作步骤" tabindex="-1"><a class="header-anchor" href="#制作步骤" aria-hidden="true">#</a> 制作步骤</h2><h3 id="第一步制作界面" tabindex="-1"><a class="header-anchor" href="#第一步制作界面" aria-hidden="true">#</a> 第一步制作界面</h3><h4 id="listwidget的界面" tabindex="-1"><a class="header-anchor" href="#listwidget的界面" aria-hidden="true">#</a> LisTWidget的界面</h4><div style="text-align:center;"><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><h4 id="treewidget的界面" tabindex="-1"><a class="header-anchor" href="#treewidget的界面" aria-hidden="true">#</a> TreeWidget的界面</h4><div style="text-align:center;"><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><h4 id="tablewidget的界面" tabindex="-1"><a class="header-anchor" href="#tablewidget的界面" aria-hidden="true">#</a> TableWidget的界面</h4><div style="text-align:center;"><figure><img src="'+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><ul><li><p>主要难点</p><ul><li><ol><li>图标的名字是中文的就会出现问题。</li></ol></li><li><ol start="2"><li>工具栏和菜单栏和状态栏傻傻分不清</li></ol></li></ul></li></ul><h3 id="第二步制作action" tabindex="-1"><a class="header-anchor" href="#第二步制作action" aria-hidden="true">#</a> 第二步制作Action</h3><p>-Action一共有</p><hr>',17),h=t("div",{style:{"text-align":"center"}},[t("figure",null,[t("img",{src:m,alt:"",tabindex:"0",loading:"lazy"}),t("figcaption")])],-1),W=t("div",{style:{"text-align":"center"}},[t("figure",null,[t("img",{src:b,alt:"",tabindex:"0",loading:"lazy"}),t("figcaption")])],-1),_=o(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>
   <span class="token comment">/*
* 函数名称：按下列表初始化行为槽函数
* 函数类：QListWidgetItem | listWidget | QString
* 大概行径：获取界面复选框的状态，创建QListWidgetItem并加入到QListWidget中。
*/</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_actListIni_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
   QListWidgetItem <span class="token operator">*</span>aItem<span class="token punctuation">;</span>                                                           <span class="token comment">//初始化一個aItem方便後續的操作</span>
   bool chk <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>checkBox_Editable<span class="token operator">-&gt;</span><span class="token function">isChecked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token comment">//获取界面复选框的状态</span>

   ui<span class="token operator">-&gt;</span>listWidget<span class="token operator">-&gt;</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                         <span class="token comment">//清除listWidget的内容</span>

   <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>                                                       <span class="token comment">//初始化10個項目</span>
   <span class="token punctuation">{</span>
       QString str <span class="token operator">=</span> QString<span class="token operator">::</span><span class="token function">asprintf</span><span class="token punctuation">(</span><span class="token string">&quot;Item %d&quot;</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                               <span class="token comment">//添加項目 使用QString::asprintf全局函數來製作str</span>

       aItem <span class="token operator">=</span> new <span class="token function">QListWidgetItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                              <span class="token comment">//创建QListWidgetItem</span>
       aItem<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                        <span class="token comment">//设置QListWidgetItem的文本</span>
       aItem<span class="token operator">-&gt;</span><span class="token function">setCheckState</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>Checked<span class="token punctuation">)</span><span class="token punctuation">;</span>                                          <span class="token comment">//设置QListWidgetItem的复选框状态</span>

       <span class="token keyword">if</span><span class="token punctuation">(</span>chk<span class="token punctuation">)</span> aItem<span class="token operator">-&gt;</span><span class="token function">setFlags</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>ItemIsSelectable <span class="token operator">|</span> Qt<span class="token operator">::</span>ItemIsEditable<span class="token operator">|</span>          <span class="token comment">//根據界面複選框設置aTem是否可選</span>
                           Qt<span class="token operator">::</span>ItemIsUserCheckable <span class="token operator">|</span> Qt<span class="token operator">::</span>ItemIsEnabled<span class="token punctuation">)</span><span class="token punctuation">;</span>

       <span class="token keyword">else</span> aItem<span class="token operator">-&gt;</span><span class="token function">setFlags</span><span class="token punctuation">(</span> Qt<span class="token operator">::</span>ItemIsSelectable<span class="token operator">|</span>
                             Qt<span class="token operator">::</span>ItemIsUserCheckable <span class="token operator">|</span> Qt<span class="token operator">::</span>ItemIsEnabled<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//</span>

       ui<span class="token operator">-&gt;</span>listWidget<span class="token operator">-&gt;</span><span class="token function">addItem</span><span class="token punctuation">(</span>aItem<span class="token punctuation">)</span><span class="token punctuation">;</span>                                             <span class="token comment">//将aItem添加到listWidget中</span>
   <span class="token punctuation">}</span>                                                                               <span class="token comment">//循环</span>

   <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Q=o(`<ul><li>代码：</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：按下清除按钮清楚ListWidget展示的列表
 * 函数类：int,QListWidgetItem
 * 大概行径：获取当前行，即获取了一共有多少参数，按照数量删除
*/</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_actListClear_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> row <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>listWidget<span class="token operator">-&gt;</span><span class="token function">currentRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                       
    <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>

    <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&lt;</span> row<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        QListWidgetItem <span class="token operator">*</span> o <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>listWidget<span class="token operator">-&gt;</span><span class="token function">takeItem</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        i<span class="token operator">++</span><span class="token punctuation">;</span>
        delete o<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>总结： ListWidget获取项目的方式是takeItem(i)。</p>`,3),y=o(`<pre><code>- 作用：插入项
- 代码：
</code></pre><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>    
<span class="token comment">/*
 * 函数名称：按下插入行为槽函数
 * 函数类：QListWidgetItem | listWidget | QString
 * 大概行径：获取界面复选框的状态，创建QListWidgetItem插入到QListWidget的指定行位中。
*/</span>
    <span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_actListInsert_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QListWidgetItem <span class="token operator">*</span>aItem<span class="token punctuation">;</span>                              <span class="token comment">// 初始化一个QListWidgetItem</span>
    bool chk <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>checkBox_Editable<span class="token operator">-&gt;</span><span class="token function">isChecked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">// 获取界面复选框的状态</span>

        QString str <span class="token operator">=</span> QString<span class="token operator">::</span><span class="token function">asprintf</span><span class="token punctuation">(</span><span class="token string">&quot;Item new&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//使用QString::asprintf创QString</span>

        aItem <span class="token operator">=</span> new <span class="token function">QListWidgetItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment">// 创建QListWidgetItem</span>
        aItem<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>                             <span class="token comment">// 设置QListWidgetItem的文本</span>
        aItem<span class="token operator">-&gt;</span><span class="token function">setCheckState</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>Checked<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment">//  设置QListWidgetItem的复选框状态</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>chk<span class="token punctuation">)</span> aItem<span class="token operator">-&gt;</span><span class="token function">setFlags</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>ItemIsSelectable <span class="token operator">|</span> Qt<span class="token operator">::</span>ItemIsEditable<span class="token operator">|</span>   <span class="token comment">//根据文本界面复选框设置Item的权限</span>
                            Qt<span class="token operator">::</span>ItemIsUserCheckable <span class="token operator">|</span> Qt<span class="token operator">::</span>ItemIsEnabled<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">else</span> aItem<span class="token operator">-&gt;</span><span class="token function">setFlags</span><span class="token punctuation">(</span> Qt<span class="token operator">::</span>ItemIsSelectable<span class="token operator">|</span>
                              Qt<span class="token operator">::</span>ItemIsUserCheckable <span class="token operator">|</span> Qt<span class="token operator">::</span>ItemIsEnabled<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//</span>

        ui<span class="token operator">-&gt;</span>listWidget<span class="token operator">-&gt;</span><span class="token function">insertItem</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>listWidget<span class="token operator">-&gt;</span><span class="token function">currentRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>aItem<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//插入Item进入当前列</span>


   <span class="token keyword">return</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>总结： ListWidget获取项目的方式是takeItem(i)。</p>`,3),x=o(`<ul><li>作用:删除列表</li><li>代码：</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：删除ListWidget数据
 * 函数类：
 * 大概行迳：1.获取当前的指定对象
 * 2.删除指定对象
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_actListDelete_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QListWidgetItem<span class="token operator">*</span> Item <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>listWidget<span class="token operator">-&gt;</span><span class="token function">currentItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    delete Item<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),T=t("div",{style:{"text-align":"center"}},[t("figure",null,[t("img",{src:g,alt:"",tabindex:"0",loading:"lazy"}),t("figcaption")])],-1),L=o(`<ul><li>作用：选择和反选所有的项目</li><li>代码：</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：按下选择按钮全选或者不全选
 * 函数类：QListWidgetItem | int
 * 全局变量：The_SetCheckNumber
 * 大概行径：根据全局变量The_SetCheckNumber的值来判断全选还是反选。
*/</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_actSelAll_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> cnt <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>listWidget<span class="token operator">-&gt;</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>The_SetCheckNumber<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cnt <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            QListWidgetItem<span class="token operator">*</span> aItem <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>listWidget<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            aItem<span class="token operator">-&gt;</span><span class="token function">setCheckState</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>Checked<span class="token punctuation">)</span><span class="token punctuation">;</span>
            The_SetCheckNumber <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span><span class="token comment">//复选循环做准备</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> cnt <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            QListWidgetItem<span class="token operator">*</span> aItem <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>listWidget<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            aItem<span class="token operator">-&gt;</span><span class="token function">setCheckState</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>Unchecked<span class="token punctuation">)</span><span class="token punctuation">;</span>The_SetCheckNumber<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,3),S=t("hr",null,null,-1),C=o(`<ul><li>作用：TreeWidget添加文件夹</li><li>代码：</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：添加treeWidget的文件夹，
 * 函数类：int,Qstring,QtreeWidgetItem,
 * 大概行迳：找到当前结点，再创建一个结点，在当前结点下添加
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_actaddFolderItem_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QString dir <span class="token operator">=</span> QFileDialog<span class="token operator">::</span><span class="token function">getExistingDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                          <span class="token comment">//通过QFileDialog获取文件夹路径</span>

    <span class="token comment">//取文件夹的名字</span>
    <span class="token keyword">int</span> cnt <span class="token operator">=</span> dir<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                     <span class="token comment">// 获取文件夹路径的长度</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> dir<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token char">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                               <span class="token comment">// 获取最后一个&#39;/&#39;的位置</span>
    QString str <span class="token operator">=</span> dir<span class="token punctuation">.</span><span class="token function">right</span><span class="token punctuation">(</span>cnt<span class="token operator">-</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                           <span class="token comment">// 获取文件夹名字</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dir<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                                                                         <span class="token comment">// 做一个边界判断是否dir存在</span>
    <span class="token punctuation">{</span>
        QTreeWidgetItem <span class="token operator">*</span>curItem <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>treeWidget<span class="token operator">-&gt;</span><span class="token function">currentItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                               <span class="token comment">// 获取当前鼠标点击的结点 </span>
        QTreeWidgetItem <span class="token operator">*</span>Item <span class="token operator">=</span> new <span class="token function">QTreeWidgetItem</span><span class="token punctuation">(</span>MainWindow<span class="token operator">::</span>itGroupItem<span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment">// 创建一个结点，并且type为文件夹节点</span>
        Item<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span>colItem<span class="token punctuation">,</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                             <span class="token comment">// 设置结点第一列的文字</span>
        Item<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span>colItemType<span class="token punctuation">,</span><span class="token string">&quot;itGroupItem&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                               <span class="token comment">// 设置结点第二列的文字</span>
        Item<span class="token operator">-&gt;</span><span class="token function">setFlags</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>ItemIsSelectable<span class="token operator">|</span>Qt<span class="token operator">::</span>ItemIsUserCheckable                             <span class="token comment">// 设置结点的特征是否可选，是否可用户选中,是否使用,是否有倒三角</span>
                       <span class="token operator">|</span>Qt<span class="token operator">::</span>ItemIsEnabled<span class="token operator">|</span>Qt<span class="token operator">::</span>ItemIsAutoTristate<span class="token punctuation">)</span><span class="token punctuation">;</span>                              <span class="token comment">// 一个树节点特有的标志，和子类是否都选中有关系。</span>
        Item<span class="token operator">-&gt;</span><span class="token function">setCheckState</span><span class="token punctuation">(</span>colItem<span class="token punctuation">,</span>Qt<span class="token operator">::</span>Checked<span class="token punctuation">)</span><span class="token punctuation">;</span>                                               <span class="token comment">// 设置结点的在colItem列的选中状态</span>
        Item<span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span>colItem<span class="token punctuation">,</span>Qt<span class="token operator">::</span>UserRole<span class="token punctuation">,</span><span class="token function">QVariant</span><span class="token punctuation">(</span>dir<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                      <span class="token comment">// 用户自定义数据</span>
        curItem<span class="token operator">-&gt;</span><span class="token function">addChild</span><span class="token punctuation">(</span>Item<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                <span class="token comment">// 加入相关的子结点</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),q=o(`<ul><li>作用：TreeWidget添加文件</li><li>代码：</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：添加treeWidget文件
 * 函数类：int,Qstring,QtreeWidgetItem,
 * 大概行迳：找到当前结点判断当前节点是否为文件夹节点，给予一定的处理，再创建一个结点，在当前结点下添加
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_actFiles_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QStringList files <span class="token operator">=</span> QFileDialog<span class="token operator">::</span><span class="token function">getOpenFileNames</span><span class="token punctuation">(</span>this<span class="token punctuation">,</span><span class="token string">&quot;选择一个或多个文件&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Images(*.jpg)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 获取用户选择的文件并且编写了过滤器</span>

    <span class="token comment">//边界</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>files<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>                                                                       <span class="token comment">// 判断边界</span>

    QTreeWidgetItem <span class="token operator">*</span>Paritem<span class="token punctuation">,</span><span class="token operator">*</span>Item<span class="token punctuation">;</span>                                                                   <span class="token comment">// 创建两个Item为后续做判断</span>

    Item <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>treeWidget<span class="token operator">-&gt;</span><span class="token function">currentItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                             <span class="token comment">// 获取当前选中的Item</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>Item<span class="token operator">-&gt;</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> this<span class="token operator">-&gt;</span>itImageItem<span class="token punctuation">)</span> Paritem <span class="token operator">=</span> Item<span class="token operator">-&gt;</span><span class="token function">parent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                   <span class="token comment">// 判断是否节点为文件夹节点，不然就找到上一个必为文件夹节点</span>
    <span class="token keyword">else</span> Paritem <span class="token operator">=</span> Item<span class="token punctuation">;</span>

    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> files<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        QString allFilename <span class="token operator">=</span> files<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                            <span class="token comment">// 配合用户选择的多文件功能</span>
        <span class="token keyword">int</span> cnt <span class="token operator">=</span> allFilename<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                               <span class="token comment">// 寻找ListString的长度</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> allFilename<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                         <span class="token comment">// 寻找最后一个&quot;/&quot;的位置</span>
        QString aFilename <span class="token operator">=</span> allFilename<span class="token punctuation">.</span><span class="token function">right</span><span class="token punctuation">(</span>cnt<span class="token operator">-</span>a<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                               <span class="token comment">// 获取最后一个&quot;/&quot;后的字符串获得文件的名字</span>

        <span class="token comment">//添加节点</span>
        QTreeWidgetItem<span class="token operator">*</span> My_T<span class="token punctuation">;</span>                                                                        <span class="token comment">// 初始化结点</span>
        My_T <span class="token operator">=</span> new <span class="token function">QTreeWidgetItem</span><span class="token punctuation">(</span>this<span class="token operator">-&gt;</span>itImageItem<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                <span class="token comment">// 创建文件节点</span>
        My_T<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span>colItem<span class="token punctuation">,</span>aFilename<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                             <span class="token comment">// 设置colItem列的文件名</span>
        My_T<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span>colItemType<span class="token punctuation">,</span><span class="token string">&quot;itImageItem&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                     <span class="token comment">// 设置colItem列的字符串</span>
        My_T<span class="token operator">-&gt;</span><span class="token function">setFlags</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>ItemIsSelectable <span class="token operator">|</span> Qt<span class="token operator">::</span>ItemIsUserCheckable                                 <span class="token comment">// 设置结点的特征</span>
                       <span class="token operator">|</span> Qt<span class="token operator">::</span>ItemIsEnabled <span class="token operator">|</span> Qt<span class="token operator">::</span>ItemIsAutoTristate<span class="token punctuation">)</span><span class="token punctuation">;</span>
        My_T<span class="token operator">-&gt;</span><span class="token function">setCheckState</span><span class="token punctuation">(</span>colItem<span class="token punctuation">,</span>Qt<span class="token operator">::</span>Checked<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                     <span class="token comment">// 设置结点在colItem列的复选框状态</span>
        My_T<span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span>colItem<span class="token punctuation">,</span>Qt<span class="token operator">::</span>UserRole<span class="token punctuation">,</span><span class="token function">QVariant</span><span class="token punctuation">(</span>files<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                          <span class="token comment">// 设置用户节点数据</span>
        Paritem<span class="token operator">-&gt;</span><span class="token function">addChild</span><span class="token punctuation">(</span>My_T<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                      <span class="token comment">// 添加子节点</span>
    <span class="token punctuation">}</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),M=o(`<ul><li>作用：调整图片大小，自适应</li><li>大概行径：获取窗口的大小，获取图片的大小，进行一个比例的计算，然后创建一个新的QPixmap，放入新的Qpixmap中，程序内存中保有文件图片最原始的QPixmap。</li><li>代码：</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：调整图片大小，自适应
 * 函数类：int,Qstring,QtreeWidgetItem,
 * 大概行迳：比对图片和窗格的大小，并放入标签中
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_actZoomFitH_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> H <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>scrollArea<span class="token operator">-&gt;</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> W <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>scrollArea<span class="token operator">-&gt;</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> realH <span class="token operator">=</span> curPixmap<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> realW <span class="token operator">=</span> curPixmap<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    pixRatioH <span class="token operator">=</span> <span class="token keyword">float</span><span class="token punctuation">(</span>H<span class="token punctuation">)</span><span class="token operator">/</span>realH<span class="token punctuation">;</span>
    pixRatioW <span class="token operator">=</span> <span class="token keyword">float</span><span class="token punctuation">(</span>W<span class="token punctuation">)</span><span class="token operator">/</span>realW<span class="token punctuation">;</span>
    QPixmap pix <span class="token operator">=</span> curPixmap<span class="token punctuation">.</span><span class="token function">scaled</span><span class="token punctuation">(</span>realH<span class="token operator">*</span>pixRatioH<span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">,</span>realW<span class="token operator">*</span>pixRatioW<span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>CurPixmap<span class="token operator">-&gt;</span><span class="token function">setPixmap</span><span class="token punctuation">(</span>pix<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),R=o(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：调整图片大小，变成原始分辨率
 * 函数类：int,Qstring,QtreeWidgetItem,
 * 大概行迳：清除相关图片的比例记录大小，并加载缓存在内存里面的照片
 * 全局变量：
 *  QLabel *LabFileIetm; //用于状态栏的文件名显示
    QPixmap curPixmap; //当前的图片
    float pixRatio; //当前图片的缩放比例
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_actionactZoomRealSize_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    pixRatioH <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>pixRatioW <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>CurPixmap<span class="token operator">-&gt;</span><span class="token function">setPixmap</span><span class="token punctuation">(</span>curPixmap<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),B=o(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token operator">-</span> 代码：
<span class="token comment">/*
 * 函数名称：调整图片大小，放大图片
 * 函数类：int,Qstring,QtreeWidgetItem,
 * 大概行迳：改变内存中的放大缩小比例，进行一个比例和原始图片的计算，然后创建一个新的QPixmap，放入新的Qpixmap中，程序内存中保有文件图片最原始的QPixmap。
 * 全局变量：
 *  QLabel *LabFileIetm; //用于状态栏的文件名显示
    QPixmap curPixmap; //当前的图片
    float pixRatio; //当前图片的缩放比例
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_actionactZoomIn_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    pixRatioH <span class="token operator">=</span> pixRatioH<span class="token operator">*</span><span class="token number">1.2</span><span class="token punctuation">;</span>
    pixRatioW <span class="token operator">=</span> pixRatioW<span class="token operator">*</span><span class="token number">1.2</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> w <span class="token operator">=</span> pixRatioW<span class="token operator">*</span>curPixmap<span class="token punctuation">.</span><span class="token function">width</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> h <span class="token operator">=</span> pixRatioH<span class="token operator">*</span>curPixmap<span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    QPixmap pix <span class="token operator">=</span> curPixmap<span class="token punctuation">.</span><span class="token function">scaled</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>CurPixmap<span class="token operator">-&gt;</span><span class="token function">setPixmap</span><span class="token punctuation">(</span>pix<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),A=o(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：工具栏动作，改变浮动窗口浮动
 * 函数类：QLayout,QDebug
 * 大概行迳：
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_actDockFloat_triggered</span><span class="token punctuation">(</span>bool checked<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QLayout<span class="token operator">*</span> lay <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>toolBox<span class="token operator">-&gt;</span><span class="token function">widget</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">layout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment">// 获取toolBox的布局</span>
    ui<span class="token operator">-&gt;</span>dockWidget<span class="token operator">-&gt;</span><span class="token function">setFloating</span><span class="token punctuation">(</span>checked<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment">// 设置浮动窗口的浮动标志</span>
    lay<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>dockWidget<span class="token punctuation">)</span><span class="token punctuation">;</span>                                 <span class="token comment">// 添加浮动窗口到布局中</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：浮动窗口悬浮
 * 大概行迳：当浮动窗口可视性变化的时候，改变动作的显示
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_dockWidget_topLevelChanged</span><span class="token punctuation">(</span>bool topLevel<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">Q_UNUSED</span><span class="token punctuation">(</span>topLevel<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>dockWidget<span class="token operator">-&gt;</span><span class="token function">setParent</span><span class="token punctuation">(</span>nullptr<span class="token punctuation">)</span><span class="token punctuation">;</span>                              <span class="token comment">// 在toolBox上脱离</span>
    <span class="token function">on_actDockVisible_toggled</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                    <span class="token comment">// 脱离之后会自动变得不可见，需要设置为可见。</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),D=o(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：浮动窗口关闭
 * 大概行迳：当浮动窗口可视性变化的时候，改变动作的显示  即完成Dock上的X被按下时与act的同步性。
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">actDockVisible</span><span class="token punctuation">(</span>bool visible<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ui<span class="token operator">-&gt;</span>actDockVisible<span class="token operator">-&gt;</span><span class="token function">setChecked</span><span class="token punctuation">(</span>visible<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：工具栏动作，改变浮动窗口可视性
 * 函数类：int,Qstring,QtreeWidgetItem,
 * 大概行迳：清除相关相关的比例记录大小，并加载缓存在内存里面的照片
 * 全局变量：
 *  QLabel *LabFileIetm; //用于状态栏的文件名显示
    QPixmap curPixmap; //当前的图片
    float pixRatio; //当前图片的缩放比例
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_actDockVisible_toggled</span><span class="token punctuation">(</span>bool arg1<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ui<span class="token operator">-&gt;</span>dockWidget<span class="token operator">-&gt;</span><span class="token function">setVisible</span><span class="token punctuation">(</span>arg1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="工具栏和状态栏的控制" tabindex="-1"><a class="header-anchor" href="#工具栏和状态栏的控制" aria-hidden="true">#</a> 工具栏和状态栏的控制</h3><p>构造函数的创建：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">//TreeWidget的状态栏设置</span>
    LabFileItem <span class="token operator">=</span> new <span class="token function">QLabel</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                             <span class="token comment">// 初始化LabFileItem</span>
    ui<span class="token operator">-&gt;</span>statusBar<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span>LabFileItem<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                    <span class="token comment">// 状态栏添加LabFileItem</span>
    ui<span class="token operator">-&gt;</span>toolBar<span class="token operator">-&gt;</span><span class="token function">setHidden</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                <span class="token comment">// toolBar隐藏</span>
    ui<span class="token operator">-&gt;</span>toolBar_2<span class="token operator">-&gt;</span><span class="token function">setHidden</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                              <span class="token comment">// toolBar_2隐藏</span>

    <span class="token comment">//TableWidget的状态栏设置</span>
    labCellIndex <span class="token operator">=</span> new <span class="token function">QLabel</span><span class="token punctuation">(</span><span class="token string">&quot;当前单元格类型&quot;</span><span class="token punctuation">,</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>                                           <span class="token comment">// labCellIndex的文本和宽度设置</span>
    labCellIndex <span class="token operator">-&gt;</span> <span class="token function">setMinimumWidth</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    labCellType <span class="token operator">=</span> new <span class="token function">QLabel</span><span class="token punctuation">(</span><span class="token string">&quot;当前单元格坐标：&quot;</span><span class="token punctuation">,</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>                                          <span class="token comment">// labCellType的文本和宽度设置</span>
    labCellType<span class="token operator">-&gt;</span><span class="token function">setMinimumWidth</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    labStuID <span class="token operator">=</span> new <span class="token function">QLabel</span><span class="token punctuation">(</span><span class="token string">&quot;学生ID:&quot;</span><span class="token punctuation">,</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>
    labStuID<span class="token operator">-&gt;</span><span class="token function">setMinimumWidth</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                            <span class="token comment">// labStuID的文本和宽度设置</span>
    ui<span class="token operator">-&gt;</span>statusBar<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span>labCellIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                    <span class="token comment">// statusBar添加labCellIndex</span>
    ui<span class="token operator">-&gt;</span>statusBar<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span>labCellType<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                     <span class="token comment">// statusBar添加labCellType</span>
    ui<span class="token operator">-&gt;</span>statusBar<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span>labStuID<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                        <span class="token comment">// statusBar添加labCellType</span>

    <span class="token function">iniTree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                                 <span class="token comment">// 初始化Tree</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：控制工具欄的顯示與否
 * 函数类：ui-&gt;toolBar
 * 大概行迳：创建字符串，加入字符串入编辑项
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_toolBox_currentChanged</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//控制什麽界面顯示</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>
        <span class="token function">SetStatusMenu</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                      <span class="token comment">// 删除状态栏的所有消息，再根据index加入状态栏消息</span>
        ui<span class="token operator">-&gt;</span>toolBar<span class="token operator">-&gt;</span><span class="token function">setHidden</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                             <span class="token comment">// 显示第一个工具栏</span>
        ui<span class="token operator">-&gt;</span>toolBar_2<span class="token operator">-&gt;</span><span class="token function">setHidden</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                           <span class="token comment">// 隐藏第二个工具栏</span>
        ui<span class="token operator">-&gt;</span>tabWidget<span class="token operator">-&gt;</span><span class="token function">setCurrentIndex</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                     <span class="token comment">// 根据ToolBox控制TabWidget的显示</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
        ui<span class="token operator">-&gt;</span>toolBar<span class="token operator">-&gt;</span><span class="token function">setHidden</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                              <span class="token comment">// 隐藏第一个工具栏</span>
        ui<span class="token operator">-&gt;</span>toolBar_2<span class="token operator">-&gt;</span><span class="token function">setHidden</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                            <span class="token comment">// 显示第二个工具栏    </span>
        ui<span class="token operator">-&gt;</span>tabWidget<span class="token operator">-&gt;</span><span class="token function">setCurrentIndex</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                      <span class="token comment">// 根据ToolBox控制TabWidget的显示 </span>
        <span class="token function">SetStatusMenu</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                       <span class="token comment">// 删除状态栏的所有消息，在根据index加入状态栏消息</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>   <span class="token comment">//TableWidget的状态栏设置</span>

        ui<span class="token operator">-&gt;</span>toolBar<span class="token operator">-&gt;</span><span class="token function">setHidden</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                              <span class="token comment">// 隐藏第一个工具栏</span>
        ui<span class="token operator">-&gt;</span>toolBar_2<span class="token operator">-&gt;</span><span class="token function">setHidden</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                            <span class="token comment">// 隐藏第二个工具栏    </span>
        ui<span class="token operator">-&gt;</span>tabWidget<span class="token operator">-&gt;</span><span class="token function">setCurrentIndex</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                      <span class="token comment">// 根据ToolBox控制TabWidget的显示</span>
        <span class="token function">SetStatusMenu</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                       <span class="token comment">// 删除状态栏的所有消息，在根据index加入状态栏消息</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>                                                                                  <span class="token comment">// Switch的固定模式。</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">/*
 * 函数名称：控制状态栏的显示
 * 函数类：ui-&gt;StatusBar
 * 大概行迳：删除已有的标签。
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">SetStatusMenu</span><span class="token punctuation">(</span><span class="token keyword">int</span> status<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>labCellIndex<span class="token punctuation">)</span> ui<span class="token operator">-&gt;</span>statusBar<span class="token operator">-&gt;</span><span class="token function">removeWidget</span><span class="token punctuation">(</span>labCellIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>                                 <span class="token comment">// 边界，删除所有相关的标签，并且方式内存盗用</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>labCellType<span class="token punctuation">)</span> ui<span class="token operator">-&gt;</span>statusBar<span class="token operator">-&gt;</span><span class="token function">removeWidget</span><span class="token punctuation">(</span>labCellType<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>labStuID<span class="token punctuation">)</span> ui<span class="token operator">-&gt;</span>statusBar<span class="token operator">-&gt;</span><span class="token function">removeWidget</span><span class="token punctuation">(</span>labStuID<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>LabFileItem<span class="token punctuation">)</span> ui<span class="token operator">-&gt;</span>statusBar<span class="token operator">-&gt;</span><span class="token function">removeWidget</span><span class="token punctuation">(</span>LabFileItem<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">switch</span> <span class="token punctuation">(</span>status<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
        LabFileItem <span class="token operator">=</span> new <span class="token function">QLabel</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                           <span class="token comment">// 创建一个新的标签</span>
        ui<span class="token operator">-&gt;</span>statusBar<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span>LabFileItem<span class="token punctuation">)</span><span class="token punctuation">;</span>                                                  <span class="token comment">// 状态栏加入labFileItem</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
        labCellIndex <span class="token operator">=</span> new <span class="token function">QLabel</span><span class="token punctuation">(</span><span class="token string">&quot;当前单元格类型&quot;</span><span class="token punctuation">,</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>                                       <span class="token comment">//创建加入</span>
        labCellIndex <span class="token operator">-&gt;</span> <span class="token function">setMinimumWidth</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        labCellType <span class="token operator">=</span> new <span class="token function">QLabel</span><span class="token punctuation">(</span><span class="token string">&quot;当前单元格坐标：&quot;</span><span class="token punctuation">,</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>
        labCellType<span class="token operator">-&gt;</span><span class="token function">setMinimumWidth</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        labStuID <span class="token operator">=</span> new <span class="token function">QLabel</span><span class="token punctuation">(</span><span class="token string">&quot;学生ID:&quot;</span><span class="token punctuation">,</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>
        labStuID<span class="token operator">-&gt;</span><span class="token function">setMinimumWidth</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>statusBar<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span>labCellIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>statusBar<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span>labCellType<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>statusBar<span class="token operator">-&gt;</span><span class="token function">addWidget</span><span class="token punctuation">(</span>labStuID<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>出现的问题: <ul><li><ol><li>remove的同时，会把标签整个内存也删了，所以需要重新赋值。</li></ol></li><li><ol start="2"><li>关于labFileItem的显示在下文</li></ol></li></ul></li></ul><h3 id="listwidget标签与listwidget的联动" tabindex="-1"><a class="header-anchor" href="#listwidget标签与listwidget的联动" aria-hidden="true">#</a> ListWidget标签与ListWidget的联动</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：列表选择项改变之后，触发函数
 * 函数类：QString
 * 大概行迳：创建字符串，加入字符串入编辑项
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_listWidget_currentItemChanged</span><span class="token punctuation">(</span>QListWidgetItem <span class="token operator">*</span>current<span class="token punctuation">,</span> QListWidgetItem <span class="token operator">*</span>previous<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QString str<span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>current <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>previous <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            str <span class="token operator">=</span> <span class="token string">&quot;当前项:&quot;</span> <span class="token operator">+</span> current<span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">else</span> str <span class="token operator">=</span> str <span class="token operator">=</span> <span class="token string">&quot;前一项:&quot;</span> <span class="token operator">+</span>  previous<span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;当前项&quot;</span> <span class="token operator">+</span> current<span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    ui<span class="token operator">-&gt;</span>lineEdit<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treewidget状态栏里面的文字" tabindex="-1"><a class="header-anchor" href="#treewidget状态栏里面的文字" aria-hidden="true">#</a> TreeWidget状态栏里面的文字</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称:当前项目改变做出反应（React to current project changes）
 * 函数类：int,Qstring,QtreeWidgetItem,
 * 大概行迳：寻找当前的项目信息，根据当前的项目信息做出反应
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_treeWidget_currentItemChanged</span><span class="token punctuation">(</span>QTreeWidgetItem <span class="token operator">*</span>current<span class="token punctuation">,</span> QTreeWidgetItem <span class="token operator">*</span>previous<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">Q_UNUSED</span><span class="token punctuation">(</span>previous<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> var <span class="token operator">=</span> current<span class="token operator">-&gt;</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">switch</span><span class="token punctuation">(</span>var<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
    <span class="token keyword">case</span> itTopItem<span class="token operator">:</span>
        <span class="token comment">//关闭相关的动作 stop some relationship Action</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>

    <span class="token keyword">case</span> itGroupItem<span class="token operator">:</span>
        <span class="token comment">//关闭相关的动作</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token keyword">case</span> itImageItem<span class="token operator">:</span>
        <span class="token comment">//关闭相关的动作</span>
        <span class="token function">displayImage</span><span class="token punctuation">(</span>current<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="display函数" tabindex="-1"><a class="header-anchor" href="#display函数" aria-hidden="true">#</a> display函数</h3><p>通过QFileDialog获取的全部文件名称，加载Pixmap即可。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">displayImage</span><span class="token punctuation">(</span>QTreeWidgetItem <span class="token operator">*</span>current<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QString filename <span class="token operator">=</span> current<span class="token operator">-&gt;</span><span class="token function">data</span><span class="token punctuation">(</span>colItem<span class="token punctuation">,</span>Qt<span class="token operator">::</span>UserRole<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    LabFileItem<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span>
    this<span class="token operator">-&gt;</span>curPixmap<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//自动适应大小</span>
    <span class="token function">on_actZoomFitH_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tablewidget状态栏里面的文字" tabindex="-1"><a class="header-anchor" href="#tablewidget状态栏里面的文字" aria-hidden="true">#</a> TableWidget状态栏里面的文字</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：读取表格内容
 * 函数类：QTableWidgetItem*,QStringList,
 * 大概行迳：获取当前item的内容，然后放到状态栏的标签中。
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_tableWidget_currentCellChanged</span><span class="token punctuation">(</span><span class="token keyword">int</span> currentRow<span class="token punctuation">,</span> <span class="token keyword">int</span> currentColumn<span class="token punctuation">,</span> <span class="token keyword">int</span> previousRow<span class="token punctuation">,</span> <span class="token keyword">int</span> previousColumn<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">Q_UNUSED</span><span class="token punctuation">(</span>previousRow<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">Q_UNUSED</span><span class="token punctuation">(</span>previousColumn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    QTableWidgetItem<span class="token operator">*</span> item <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>currentRow<span class="token punctuation">,</span>currentColumn<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token operator">==</span><span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    labCellIndex<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span>QString<span class="token operator">::</span><span class="token function">asprintf</span><span class="token punctuation">(</span><span class="token string">&quot;当前单元格坐标：%d 行，%d 列&quot;</span><span class="token punctuation">,</span>currentRow<span class="token punctuation">,</span>currentColumn<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> cellType <span class="token operator">=</span> item<span class="token operator">-&gt;</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    labCellType<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span>QString<span class="token operator">::</span><span class="token function">asprintf</span><span class="token punctuation">(</span><span class="token string">&quot;当前单元格类型：%d&quot;</span><span class="token punctuation">,</span>cellType<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    item <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>currentRow<span class="token punctuation">,</span>MainWindow<span class="token operator">::</span>colName<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//第一列的item</span>
    <span class="token keyword">int</span> ID <span class="token operator">=</span> item<span class="token operator">-&gt;</span><span class="token function">data</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>UserRole<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    labStuID<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span>QString<span class="token operator">::</span><span class="token function">asprintf</span><span class="token punctuation">(</span><span class="token string">&quot;学生ID：%d&quot;</span><span class="token punctuation">,</span>ID<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//学生ID</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="treewidget图片的加载" tabindex="-1"><a class="header-anchor" href="#treewidget图片的加载" aria-hidden="true">#</a> TreeWidget图片的加载</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：显示图片文件（Display image file size）
 * 函数类：int,Qstring, QPixmap
 * 大概行迳：寻找当前文件的路径，加载为pixmap并调整大小放入标签中
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">displayImage</span><span class="token punctuation">(</span>QTreeWidgetItem <span class="token operator">*</span>current<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QString filename <span class="token operator">=</span> current<span class="token operator">-&gt;</span><span class="token function">data</span><span class="token punctuation">(</span>colItem<span class="token punctuation">,</span>Qt<span class="token operator">::</span>UserRole<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    LabFileItem<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span>
    this<span class="token operator">-&gt;</span>curPixmap<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//自动适应大小</span>
    <span class="token function">on_actZoomFitH_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tablewidget的按键控制" tabindex="-1"><a class="header-anchor" href="#tablewidget的按键控制" aria-hidden="true">#</a> TableWidget的按键控制</h3>`,19),F=o(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：设置表头
 * 函数类：QTableWidgetItem*,QStringList,
 * 大概行迳：取好QTableWidgetItem，用QStringList来设置好每个列数，再循环控制好每个表头的参数。
 * 全局变量：
 *  QLabel *LabFileIetm; //用于状态栏的文件名显示
    QPixmap curPixmap; //当前的图片
    float pixRatio; //当前图片的缩放比例
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_Button_SetHeader_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QTableWidgetItem<span class="token operator">*</span> headerItem<span class="token punctuation">;</span>
    QStringList headerText<span class="token punctuation">;</span>
    headerText<span class="token operator">&lt;&lt;</span><span class="token string">&quot;姓名&quot;</span><span class="token operator">&lt;&lt;</span><span class="token string">&quot;性别&quot;</span><span class="token operator">&lt;&lt;</span><span class="token string">&quot;出生日期&quot;</span><span class="token operator">&lt;&lt;</span><span class="token string">&quot;民族&quot;</span><span class="token operator">&lt;&lt;</span><span class="token string">&quot;是否为党员&quot;</span><span class="token operator">&lt;&lt;</span><span class="token string">&quot;分数&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">//ui-&gt;tableWidget-&gt;setHorizontalHeaderLabels(headerText); //这个是直接上。</span>
    <span class="token comment">//一行就位</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">setColumnCount</span><span class="token punctuation">(</span>headerText<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        headerItem <span class="token operator">=</span> new <span class="token function">QTableWidgetItem</span><span class="token punctuation">(</span>headerText<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        QFont font <span class="token operator">=</span> headerItem<span class="token operator">-&gt;</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        font<span class="token punctuation">.</span><span class="token function">setBold</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置粗体</span>
        font<span class="token punctuation">.</span><span class="token function">setPointSize</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置字体大小</span>
        headerItem<span class="token operator">-&gt;</span><span class="token function">setTextColor</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>red<span class="token punctuation">)</span><span class="token punctuation">;</span>
        headerItem<span class="token operator">-&gt;</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">setHorizontalHeaderItem</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>headerItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),P=o(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：初始化表格
 * 函数类：QTableWidgetItem*,QStringList,
 * 大概行迳：创建一个Item，然后根据类型和QString进行设置，最后添加进Table中。
 * */</span>
<span class="token comment">//type到底是什么东西。</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">createItemsARow</span><span class="token punctuation">(</span><span class="token keyword">int</span> rowNo<span class="token punctuation">,</span> QString Name<span class="token punctuation">,</span> QString Sex<span class="token punctuation">,</span> QDate birth<span class="token punctuation">,</span> QString Nation<span class="token punctuation">,</span> bool isPM<span class="token punctuation">,</span> <span class="token keyword">int</span> score<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QTableWidgetItem<span class="token operator">*</span> item<span class="token punctuation">;</span>
    QString str<span class="token punctuation">;</span>
    uint StudID<span class="token operator">=</span><span class="token number">201602000</span><span class="token punctuation">;</span> <span class="token comment">//学号基数</span>
    <span class="token comment">// 姓名</span>
    item <span class="token operator">=</span> new <span class="token function">QTableWidgetItem</span><span class="token punctuation">(</span>Name<span class="token punctuation">,</span>MainWindow<span class="token operator">::</span>ctName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    item<span class="token operator">-&gt;</span><span class="token function">setTextAlignment</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>AlignHCenter <span class="token operator">|</span> Qt<span class="token operator">::</span>AlignVCenter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    StudID <span class="token operator">+=</span>rowNo<span class="token punctuation">;</span> <span class="token comment">//学号=基数+行数</span>
    item<span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>UserRole<span class="token punctuation">,</span><span class="token function">QVariant</span><span class="token punctuation">(</span>StudID<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置studID为data  //设置用户自定义数字。</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">setItem</span><span class="token punctuation">(</span>rowNo<span class="token punctuation">,</span>MainWindow<span class="token operator">::</span>colName<span class="token punctuation">,</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 性别</span>
    item <span class="token operator">=</span> new <span class="token function">QTableWidgetItem</span><span class="token punctuation">(</span>Sex<span class="token punctuation">,</span>MainWindow<span class="token operator">::</span>ctSex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    item<span class="token operator">-&gt;</span><span class="token function">setTextAlignment</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>AlignHCenter <span class="token operator">|</span> Qt<span class="token operator">::</span>AlignVCenter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">setItem</span><span class="token punctuation">(</span>rowNo<span class="token punctuation">,</span>MainWindow<span class="token operator">::</span>colSex<span class="token punctuation">,</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//出生日期</span>
    str <span class="token operator">=</span> birth<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    item <span class="token operator">=</span> new <span class="token function">QTableWidgetItem</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span>MainWindow<span class="token operator">::</span>ctBirth<span class="token punctuation">)</span><span class="token punctuation">;</span>
    item<span class="token operator">-&gt;</span><span class="token function">setTextAlignment</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>AlignHCenter <span class="token operator">|</span> Qt<span class="token operator">::</span>AlignVCenter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">setItem</span><span class="token punctuation">(</span>rowNo<span class="token punctuation">,</span>MainWindow<span class="token operator">::</span>colBirth<span class="token punctuation">,</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//民族</span>
    item <span class="token operator">=</span> new <span class="token function">QTableWidgetItem</span><span class="token punctuation">(</span>Nation<span class="token punctuation">,</span>MainWindow<span class="token operator">::</span>ctNation<span class="token punctuation">)</span><span class="token punctuation">;</span>
    item<span class="token operator">-&gt;</span><span class="token function">setTextAlignment</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>AlignHCenter <span class="token operator">|</span> Qt<span class="token operator">::</span>AlignVCenter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">setItem</span><span class="token punctuation">(</span>rowNo<span class="token punctuation">,</span>MainWindow<span class="token operator">::</span>colNation<span class="token punctuation">,</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//是否党员</span>
    item <span class="token operator">=</span> new <span class="token function">QTableWidgetItem</span><span class="token punctuation">(</span><span class="token string">&quot;党员&quot;</span><span class="token punctuation">,</span>MainWindow<span class="token operator">::</span>ctPartyM<span class="token punctuation">)</span><span class="token punctuation">;</span>
    item<span class="token operator">-&gt;</span><span class="token function">setTextAlignment</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>AlignHCenter <span class="token operator">|</span> Qt<span class="token operator">::</span>AlignVCenter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>isPM<span class="token punctuation">)</span> item<span class="token operator">-&gt;</span><span class="token function">setCheckState</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>Checked<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//自动生成一个可选框。</span>
    <span class="token keyword">else</span> item<span class="token operator">-&gt;</span><span class="token function">setCheckState</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>Unchecked<span class="token punctuation">)</span><span class="token punctuation">;</span>
    item<span class="token operator">-&gt;</span><span class="token function">setBackgroundColor</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>yellow<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">setItem</span><span class="token punctuation">(</span>rowNo<span class="token punctuation">,</span>MainWindow<span class="token operator">::</span>colPartyM<span class="token punctuation">,</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//分数</span>
    str<span class="token punctuation">.</span><span class="token function">setNum</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span><span class="token punctuation">;</span>
    item <span class="token operator">=</span> new <span class="token function">QTableWidgetItem</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span>MainWindow<span class="token operator">::</span>ctScore<span class="token punctuation">)</span><span class="token punctuation">;</span>
    item<span class="token operator">-&gt;</span><span class="token function">setTextAlignment</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>AlignHCenter <span class="token operator">|</span> Qt<span class="token operator">::</span>AlignVCenter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">setItem</span><span class="token punctuation">(</span>rowNo<span class="token punctuation">,</span>MainWindow<span class="token operator">::</span>colScore<span class="token punctuation">,</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),z=o(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>
<span class="token comment">/*
 * 函数名称：插入行数
 * 函数类：QTableWidgetItem*,QStringList,
 * 大概行迳：获取当前行，创建目前所在的行，对行进行位置填入。
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_Button_InsertRow_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> curRow <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">currentRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">insertRow</span><span class="token punctuation">(</span>curRow<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">createItemsARow</span><span class="token punctuation">(</span>curRow<span class="token punctuation">,</span><span class="token string">&quot;新学生&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span>QDate<span class="token operator">::</span><span class="token function">fromString</span><span class="token punctuation">(</span><span class="token string">&quot;1990-1-1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;yyyy-M-d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;苗族&quot;</span><span class="token punctuation">,</span>true<span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//进行重新排序</span>
    QStringList nameList<span class="token punctuation">;</span>
    QString name<span class="token punctuation">;</span>
    <span class="token keyword">int</span> Row <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>Row<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        nameList <span class="token operator">+=</span> name<span class="token punctuation">.</span><span class="token function">setNum</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">setVerticalHeaderLabels</span><span class="token punctuation">(</span>nameList<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 针对插入行数出现的问题进行了内部库函数封装的解决。</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),N=o(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：删除当前行
 * 函数类：QTableWidgetItem*,QStringList,
 * 大概行迳：获取当前行，删除当前行
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_Button_delCurrentRow_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> curRow <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">currentRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">removeRow</span><span class="token punctuation">(</span>curRow<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//进行重新排序</span>
    QStringList nameList<span class="token punctuation">;</span>
    QString name<span class="token punctuation">;</span>
    <span class="token keyword">int</span> Row <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>Row<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        nameList <span class="token operator">+=</span> name<span class="token punctuation">.</span><span class="token function">setNum</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">setVerticalHeaderLabels</span><span class="token punctuation">(</span>nameList<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 针对插入行数出现的问题进行了内部库函数封装的解决。</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),H=o(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>
<span class="token comment">/*
 * 函数名称：自动调整行高
 * 大概行迳：了解TableWIdget内部封装的函数
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_Button_AutoRowHight_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">resizeRowsToContents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/*
 * 函数名称：自动调整行高
 * 大概行迳：了解TableWIdget内部封装的函数
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_Button_AutoColumnWidth_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">resizeColumnsToContents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),V=o(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>
<span class="token comment">/*
 * 函数名称：插入行数
 * 函数类：QTableWidgetItem*,QStringList,
 * 大概行迳：获取当前行，创建目前所在的行，对行进行位置填入。
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_Button_InsertRow_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> curRow <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">currentRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">insertRow</span><span class="token punctuation">(</span>curRow<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">createItemsARow</span><span class="token punctuation">(</span>curRow<span class="token punctuation">,</span><span class="token string">&quot;新学生&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span>QDate<span class="token operator">::</span><span class="token function">fromString</span><span class="token punctuation">(</span><span class="token string">&quot;1990-1-1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;yyyy-M-d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;苗族&quot;</span><span class="token punctuation">,</span>true<span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//进行重新排序</span>
    QStringList nameList<span class="token punctuation">;</span>
    QString name<span class="token punctuation">;</span>
    <span class="token keyword">int</span> Row <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>Row<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        nameList <span class="token operator">+=</span> name<span class="token punctuation">.</span><span class="token function">setNum</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">setVerticalHeaderLabels</span><span class="token punctuation">(</span>nameList<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 针对插入行数出现的问题进行了内部库函数封装的解决。</span>
<span class="token punctuation">}</span>

<span class="token comment">/*
 * 函数名称：删除当前行
 * 函数类：QTableWidgetItem*,QStringList,
 * 大概行迳：获取当前行，删除当前行
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_Button_delCurrentRow_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> curRow <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">currentRow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">removeRow</span><span class="token punctuation">(</span>curRow<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//进行重新排序</span>
    QStringList nameList<span class="token punctuation">;</span>
    QString name<span class="token punctuation">;</span>
    <span class="token keyword">int</span> Row <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>Row<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        nameList <span class="token operator">+=</span> name<span class="token punctuation">.</span><span class="token function">setNum</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">setVerticalHeaderLabels</span><span class="token punctuation">(</span>nameList<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 针对插入行数出现的问题进行了内部库函数封装的解决。</span>
<span class="token punctuation">}</span>





<span class="token comment">/*
 * 函数名称：设置行数
 * 大概行迳：获取spinBox的数据，然后设置TableWIdget的行数。
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_Button_SetRowNumber_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> Row <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>spinBox_RowNumber<span class="token operator">-&gt;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">setRowCount</span><span class="token punctuation">(</span>Row<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>










</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),E=o(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：可选编辑表格
 * 大概行迳：查看Checked，设置EditTriggers
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_checkBox_clicked</span><span class="token punctuation">(</span>bool checked<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>checked<span class="token punctuation">)</span> ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">setEditTriggers</span><span class="token punctuation">(</span>QAbstractItemView<span class="token operator">::</span>DoubleClicked<span class="token operator">|</span>QAbstractItemView<span class="token operator">::</span>SelectedClicked<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">setEditTriggers</span><span class="token punctuation">(</span>QAbstractItemView<span class="token operator">::</span>NoEditTriggers<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),U=o(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：表格显示头部
 * 大概行迳：查看Checked，设置Visible。
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_checkBox_3_clicked</span><span class="token punctuation">(</span>bool checked<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">horizontalHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">setVisible</span><span class="token punctuation">(</span>checked<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">/*
 * 函数名称：表格显示头部
 * 大概行迳：查看Checked，设置Visible。
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_checkBox_4_clicked</span><span class="token punctuation">(</span>bool checked<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
     ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">verticalHeader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">setVisible</span><span class="token punctuation">(</span>checked<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Z=o(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：表格间隔交换底色
 * 大概行迳：查看Checked，设置Visible。
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_checkBox_2_clicked</span><span class="token punctuation">(</span>bool checked<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">setAlternatingRowColors</span><span class="token punctuation">(</span>checked<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),j=o(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：选择控制模式
 * 大概行迳：调用库函数控制
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_radioButton_2_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">setSelectionBehavior</span><span class="token punctuation">(</span>QAbstractItemView<span class="token operator">::</span>SelectRows<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/*
 * 函数名称：选择控制模式
 * 大概行迳：调用库函数控制
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_radioButton_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">setSelectionBehavior</span><span class="token punctuation">(</span>QAbstractItemView<span class="token operator">::</span>SelectItems<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),G=o(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/*
 * 函数名称：遍历表格读取数据
 * 函数类：QTableWidgetItem*,QStringList,
 * 大概行迳：清空富文本，
 * */</span>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_pushButton_8_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QString str<span class="token punctuation">;</span>
    QTableWidgetItem <span class="token operator">*</span>cellItem<span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>plainTextEdit<span class="token operator">-&gt;</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        str <span class="token operator">=</span> QString<span class="token operator">::</span><span class="token function">asprintf</span><span class="token punctuation">(</span><span class="token string">&quot;第%d行: &quot;</span><span class="token punctuation">,</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            cellItem <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">==</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>  <span class="token comment">//删除党员的一行文字。去掉这句话即可知道存在的意义。</span>
            str <span class="token operator">=</span> str<span class="token operator">+</span>cellItem<span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;  &quot;</span><span class="token punctuation">;</span> <span class="token comment">//字符串连接</span>
        <span class="token punctuation">}</span>
        cellItem<span class="token operator">=</span>ui<span class="token operator">-&gt;</span>tableWidget<span class="token operator">-&gt;</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>colPartyM<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>cellItem<span class="token operator">-&gt;</span><span class="token function">checkState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>Qt<span class="token operator">::</span>Checked<span class="token punctuation">)</span> str<span class="token operator">=</span>str<span class="token operator">+</span><span class="token string">&quot;党员&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> str<span class="token operator">=</span>str<span class="token operator">+</span><span class="token string">&quot;群众&quot;</span><span class="token punctuation">;</span>

        ui<span class="token operator">-&gt;</span>plainTextEdit<span class="token operator">-&gt;</span><span class="token function">appendPlainText</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function O(X,J){const c=i("router-link"),e=i("font"),p=i("center");return u(),r("div",null,[t("nav",w,[t("ul",null,[t("li",null,[n(c,{to:"#项目介绍"},{default:s(()=>[a("项目介绍")]),_:1})]),t("li",null,[n(c,{to:"#制作步骤"},{default:s(()=>[a("制作步骤")]),_:1}),t("ul",null,[t("li",null,[n(c,{to:"#第一步制作界面"},{default:s(()=>[a("第一步制作界面")]),_:1})]),t("li",null,[n(c,{to:"#第二步制作action"},{default:s(()=>[a("第二步制作Action")]),_:1})]),t("li",null,[n(c,{to:"#工具栏和状态栏的控制"},{default:s(()=>[a("工具栏和状态栏的控制")]),_:1})]),t("li",null,[n(c,{to:"#listwidget标签与listwidget的联动"},{default:s(()=>[a("ListWidget标签与ListWidget的联动")]),_:1})]),t("li",null,[n(c,{to:"#treewidget状态栏里面的文字"},{default:s(()=>[a("TreeWidget状态栏里面的文字")]),_:1})]),t("li",null,[n(c,{to:"#display函数"},{default:s(()=>[a("display函数")]),_:1})]),t("li",null,[n(c,{to:"#tablewidget状态栏里面的文字"},{default:s(()=>[a("TableWidget状态栏里面的文字")]),_:1})]),t("li",null,[n(c,{to:"#treewidget图片的加载"},{default:s(()=>[a("TreeWidget图片的加载")]),_:1})]),t("li",null,[n(c,{to:"#tablewidget的按键控制"},{default:s(()=>[a("TableWidget的按键控制")]),_:1})])])])])]),I,n(p,null,{default:s(()=>[n(e,{size:"5"},{default:s(()=>[a(" ListWidget界面 ")]),_:1})]),_:1}),h,W,n(p,null,{default:s(()=>[n(e,{size:"4"},{default:s(()=>[a(" 1.actListIni ")]),_:1})]),_:1}),a(" - 作用：初始化ListWidget - 代码： "),_,n(p,null,{default:s(()=>[n(e,{size:"4"},{default:s(()=>[a(" 2. actListClear ")]),_:1})]),_:1}),a(" - 作用：清除listWidget的内容 "),Q,n(e,{size:"6"},{default:s(()=>[a(" 3. actListInsert ")]),_:1}),y,n(p,null,{default:s(()=>[n(e,{size:"6"},{default:s(()=>[a(" 4. actListDelete ")]),_:1})]),_:1}),x,n(p,null,{default:s(()=>[n(e,{size:"6"},{default:s(()=>[a(" 5. actQuit ")]),_:1})]),_:1}),T,n(e,{size:"6"},{default:s(()=>[a(" 6. actSelAll ")]),_:1}),L,n(p,null,{default:s(()=>[n(e,{size:"12"},{default:s(()=>[a(" TreeWidget界面 ")]),_:1})]),_:1}),S,n(p,null,{default:s(()=>[n(e,{size:"6"},{default:s(()=>[a(" 7. actaddFolderItem ")]),_:1})]),_:1}),C,n(p,null,{default:s(()=>[n(e,{size:"6"},{default:s(()=>[a(" 8. actFiles ")]),_:1})]),_:1}),q,n(p,null,{default:s(()=>[n(e,{size:"6"},{default:s(()=>[a(" 9. actZoomFitH ")]),_:1})]),_:1}),M,n(p,null,{default:s(()=>[n(e,{size:"6"},{default:s(()=>[a(" 10. actionactZoomRealSize")]),_:1})]),_:1}),a(" - 代码： "),R,n(p,null,{default:s(()=>[n(e,{size:"6"},{default:s(()=>[a(" 11. actionactZoomIn")]),_:1})]),_:1}),B,n(p,null,{default:s(()=>[n(e,{size:"6"},{default:s(()=>[a(" 12. actDockFloat")]),_:1})]),_:1}),A,n(p,null,{default:s(()=>[n(e,{size:"6"},{default:s(()=>[a(" 13. dockWidget_visibilityChanged")]),_:1})]),_:1}),D,n(p,null,{default:s(()=>[n(e,{size:"5"},{default:s(()=>[a(" 1. 设置默认的表头")]),_:1})]),_:1}),F,n(p,null,{default:s(()=>[n(e,{size:"5"},{default:s(()=>[a(" 2. 创建表格单元加入的函数")]),_:1})]),_:1}),P,n(p,null,{default:s(()=>[n(e,{size:"5"},{default:s(()=>[a(" 3. 插入行数")]),_:1})]),_:1}),z,n(p,null,{default:s(()=>[n(e,{size:"5"},{default:s(()=>[a(" 4. 删除行数")]),_:1})]),_:1}),N,n(p,null,{default:s(()=>[n(e,{size:"5"},{default:s(()=>[a(" 5. 自动调整行高和列宽")]),_:1})]),_:1}),H,n(p,null,{default:s(()=>[n(e,{size:"5"},{default:s(()=>[a(" 6. 设置行数")]),_:1})]),_:1}),V,n(p,null,{default:s(()=>[n(e,{size:"5"},{default:s(()=>[a(" 7. 多选框可控制表格")]),_:1})]),_:1}),E,n(p,null,{default:s(()=>[n(e,{size:"5"},{default:s(()=>[a(" 8. 水平和垂直表头显示与否")]),_:1})]),_:1}),U,n(p,null,{default:s(()=>[n(e,{size:"5"},{default:s(()=>[a(" 9. 表格间隔交换底色")]),_:1})]),_:1}),Z,n(p,null,{default:s(()=>[n(e,{size:"5"},{default:s(()=>[a(" 10. 特有的控制模式，单元控制或者行控制")]),_:1})]),_:1}),j,n(p,null,{default:s(()=>[n(e,{size:"5"},{default:s(()=>[a(" 11. 遍历表格读取数据，加入富文本中")]),_:1})]),_:1}),G])}const $=l(f,[["render",O],["__file","WIdget.html.vue"]]);export{$ as default};
