import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as l,a as n,d as s,w as e,b as a,e as u}from"./app-e4bb05b4.js";const r="/assets/images/TimerApp.png",d="/assets/images/Timer按键代码.png",k="/assets/images/按键设置Timer.png",m="/assets/images/Timer声明.png",v="/assets/images/Timer加入头文件.png",g="/assets/images/Timer构建函数的添加.png",f={},b={class:"table-of-contents"},_=u('<h2 id="定时器与日历app" tabindex="-1"><a class="header-anchor" href="#定时器与日历app" aria-hidden="true">#</a> 定时器与日历app</h2><h3 id="制作步骤" tabindex="-1"><a class="header-anchor" href="#制作步骤" aria-hidden="true">#</a> 制作步骤</h3><h4 id="_1-摆好界面" tabindex="-1"><a class="header-anchor" href="#_1-摆好界面" aria-hidden="true">#</a> 1. 摆好界面</h4><div style="text-align:center;"><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><ul><li>QprogressBar上方的数字是LCD灯。</li></ul><h4 id="_2-读取当前日期时间按钮代码" tabindex="-1"><a class="header-anchor" href="#_2-读取当前日期时间按钮代码" aria-hidden="true">#</a> 2. 读取当前日期时间按钮代码</h4><div style="text-align:center;"><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><p>QDateTime的类是QT中专门用于展示日期时间的类。</p><p>使用方法如上图所示，改变UI中的东西需要改变控件的属性，改变的方法之一就是控件中的set开头的函数。</p><p>还可以改进显示的displayformat，代码如下</p><p>ui-&gt;《控件名字》-&gt;setdisplayformat(&quot;yyyy-MM-dd hh:mm:ss&quot;);</p><h4 id="_3-根据时间类和qstring类的转换-实现好设置功能。" tabindex="-1"><a class="header-anchor" href="#_3-根据时间类和qstring类的转换-实现好设置功能。" aria-hidden="true">#</a> 3. 根据时间类和QString类的转换，实现好设置功能。</h4><div style="text-align:center;"><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><h4 id="_4-做好定时器板块" tabindex="-1"><a class="header-anchor" href="#_4-做好定时器板块" aria-hidden="true">#</a> 4.做好定时器板块</h4><p>第一步 做好声明：</p><div style="text-align:center;"><figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><p>第二步 加入头文件：</p><div style="text-align:center;"><figure><img src="'+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><p>第三步 构建函数的添加</p><div style="text-align:center;"><figure><img src="'+g+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><p>第四步 添加槽函数</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_Timer_TimeOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//获取当前时间</span>
    QTime curT <span class="token operator">=</span> QTime<span class="token operator">::</span><span class="token function">currentTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//显示时间</span>
    ui<span class="token operator">-&gt;</span>lcdNumber<span class="token operator">-&gt;</span><span class="token function">display</span><span class="token punctuation">(</span>curT<span class="token punctuation">.</span><span class="token function">hour</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>lcdNumber_2<span class="token operator">-&gt;</span><span class="token function">display</span><span class="token punctuation">(</span>curT<span class="token punctuation">.</span><span class="token function">minute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>lcdNumber_3<span class="token operator">-&gt;</span><span class="token function">display</span><span class="token punctuation">(</span>curT<span class="token punctuation">.</span><span class="token function">second</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//进度条进步</span>
    <span class="token keyword">int</span> va <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>progressBar<span class="token operator">-&gt;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    va<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>va<span class="token operator">&gt;</span><span class="token number">100</span><span class="token punctuation">)</span> va <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    ui<span class="token operator">-&gt;</span>progressBar<span class="token operator">-&gt;</span><span class="token function">setValue</span><span class="token punctuation">(</span>va<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_pushButton_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    fTimer<span class="token operator">-&gt;</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fTimeCounter<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>pushButton<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>pushButton_2<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_pushButton_2_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    fTimer<span class="token operator">-&gt;</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> tmMsec <span class="token operator">=</span> fTimeCounter<span class="token punctuation">.</span><span class="token function">elapsed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> ms <span class="token operator">=</span> tmMsec<span class="token operator">%</span><span class="token number">1000</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> sec <span class="token operator">=</span> tmMsec<span class="token operator">/</span><span class="token number">1000</span><span class="token punctuation">;</span>
    QString str <span class="token operator">=</span> QString<span class="token operator">::</span><span class="token function">asprintf</span><span class="token punctuation">(</span><span class="token string">&quot;流逝时间：%d 秒，%d 毫秒&quot;</span><span class="token punctuation">,</span>sec<span class="token punctuation">,</span>ms<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>FixedTime<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>pushButton<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>pushButton_2<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>项目完成</p><hr><ul><li>项目总结:</li></ul><ol><li><p>自己构建的指针，第一步是加入头函数，第二步是建立，第三步是在构建函数上弄一个实体，第四步是在构建函数上connect，第五步才是编写槽函数。甚至还有第六步构建信号。</p></li><li><p>QTime可以获取当前时间，并且可以记录流逝时间。</p></li></ol><ul><li>遇到的典型问题：</li></ul>`,27),h={href:"https://blog.csdn.net/weixin_38901152/article/details/130409783",target:"_blank",rel:"noopener noreferrer"},y=n("p",null,"其实就是没有在.h文件添加头函数。",-1);function x(T,w){const t=p("router-link"),o=p("ExternalLinkIcon");return c(),l("div",null,[n("nav",b,[n("ul",null,[n("li",null,[s(t,{to:"#定时器与日历app"},{default:e(()=>[a("定时器与日历app")]),_:1}),n("ul",null,[n("li",null,[s(t,{to:"#制作步骤"},{default:e(()=>[a("制作步骤")]),_:1})])])])])]),_,n("ol",null,[n("li",null,[n("a",h,[a("不完全类型分配"),s(o)])])]),y])}const M=i(f,[["render",x],["__file","Timer.html.vue"]]);export{M as default};
