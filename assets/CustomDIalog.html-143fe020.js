import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-e4bb05b4.js";const p={},e=t(`<h2 id="qwdialogsize" tabindex="-1"><a class="header-anchor" href="#qwdialogsize" aria-hidden="true">#</a> QWDialogSize</h2><h3 id="h�l�" tabindex="-1"><a class="header-anchor" href="#h�l�" aria-hidden="true">#</a> .h�ļ�</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">QWDIALOGSIZE_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">QWDIALOGSIZE_H</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QDialog&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QMessageBox&gt;</span></span>

namespace Ui <span class="token punctuation">{</span>
class QWDialogSize<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

class QWDialogSize <span class="token operator">:</span> public QDialog
<span class="token punctuation">{</span>
    Q_OBJECT

public<span class="token operator">:</span>
    explicit <span class="token function">QWDialogSize</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent <span class="token operator">=</span> nullptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">~</span><span class="token function">QWDialogSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//</span>
    <span class="token keyword">int</span> <span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                     <span class="token comment">// ���ضԻ������������</span>
    <span class="token keyword">int</span> <span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                  <span class="token comment">// ���ضԻ������������</span>

    <span class="token keyword">void</span> <span class="token function">setRowCOlumn</span><span class="token punctuation">(</span><span class="token keyword">int</span> row<span class="token punctuation">,</span><span class="token keyword">int</span> column<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment">// ��ʼ�Ի���������SpinBox��ֵ</span>

private<span class="token operator">:</span>
    Ui<span class="token operator">::</span>QWDialogSize <span class="token operator">*</span>ui<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">// QWDIALOGSIZE_H</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cpp�l�" tabindex="-1"><a class="header-anchor" href="#cpp�l�" aria-hidden="true">#</a> .cpp�ļ�</h3><p>������c #include &quot;qwdialogsize.h&quot; #include &quot;ui_qwdialogsize.h&quot;</p><p>QWDialogSize::QWDialogSize(QWidget *parent) : QDialog(parent), ui(new Ui::QWDialogSize) { ui-&gt;setupUi(this); }</p><p>QWDialogSize::~QWDialogSize() { QMessageBox::information(this,&quot;��ʾ&quot;,&quot;�����б��������Ի���ɾ��&quot;); // �رնԻ���ʱ��������ʾ�Ի��� delete ui; }</p><p>int QWDialogSize::rowCount() { return ui-&gt;spinBoxRow-&gt;value(); // ��ȡui��spinBox������ }</p><p>int QWDialogSize::columnCount() { return ui-&gt;spinBoxColumn-&gt;value(); // ��ȡui��spinBox������ }</p><p>void QWDialogSize::setRowCOlumn(int row, int column) { ui-&gt;spinBoxRow-&gt;setValue(row); // ����ui��spinBox������ ui-&gt;spinBoxColumn-&gt;setValue(column); // ����ui��spinBox������ }</p><p>������</p><h3 id="�������������" tabindex="-1"><a class="header-anchor" href="#�������������" aria-hidden="true">#</a> �������������</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">// �Զ���Ի���</span>
<span class="token comment">/*
 * ���ֵ����⣬����7�е�ʱ����ʾģ�����ݻᱨ������Ϊ���Զ���ȡ��7��Ȼ���ȡ�ڴ�ռ�
 *
 * */</span>
<span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">on_actSetSize_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>   <span class="token comment">//ģ̬�Ի���</span>
    QWDialogSize <span class="token operator">*</span>dlgTableSize <span class="token operator">=</span> new <span class="token function">QWDialogSize</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>                                            <span class="token comment">// ����ģ̬�Ի���</span>
    Qt<span class="token operator">::</span>WindowFlags flags <span class="token operator">=</span> dlgTableSize<span class="token operator">-&gt;</span><span class="token function">windowFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                            <span class="token comment">// ��ȡ�Ի��������</span>
    dlgTableSize<span class="token operator">-&gt;</span><span class="token function">setWindowFlags</span><span class="token punctuation">(</span>flags <span class="token operator">|</span> Qt<span class="token operator">::</span>MSWindowsFixedSizeDialogHint<span class="token punctuation">)</span><span class="token punctuation">;</span>                         <span class="token comment">// ���öԻ����С</span>
    dlgTableSize<span class="token operator">-&gt;</span><span class="token function">setRowCOlumn</span><span class="token punctuation">(</span>theModel<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>theModel<span class="token operator">-&gt;</span><span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token comment">// ����model������</span>
    <span class="token keyword">int</span> ret <span class="token operator">=</span> dlgTableSize<span class="token operator">-&gt;</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//��ģ̬��ʽ��ʾ�Ի���</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">==</span> QDialog<span class="token operator">::</span>Accepted<span class="token punctuation">)</span>                                                                    <span class="token comment">// �ж϶Ի���ķ���ֵ</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> cols <span class="token operator">=</span> dlgTableSize<span class="token operator">-&gt;</span><span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        theModel<span class="token operator">-&gt;</span><span class="token function">setColumnCount</span><span class="token punctuation">(</span>cols<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> rows <span class="token operator">=</span> dlgTableSize<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        theModel<span class="token operator">-&gt;</span><span class="token function">setRowCount</span><span class="token punctuation">(</span>rows<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    delete dlgTableSize<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="qwdialogheader" tabindex="-1"><a class="header-anchor" href="#qwdialogheader" aria-hidden="true">#</a> QWDialogheader</h2><h3 id="h�l�-1" tabindex="-1"><a class="header-anchor" href="#h�l�-1" aria-hidden="true">#</a> .h�ļ�</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">QWDIALOGHEADERS_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">QWDIALOGHEADERS_H</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QDialog&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QStringListModel&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;QMessageBox&gt;</span></span>

namespace Ui <span class="token punctuation">{</span>
class QWDialogHeaders<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

class QWDialogHeaders <span class="token operator">:</span> public QDialog
<span class="token punctuation">{</span>
    Q_OBJECT

public<span class="token operator">:</span>
    explicit <span class="token function">QWDialogHeaders</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent <span class="token operator">=</span> nullptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">~</span><span class="token function">QWDialogHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token function">setHeaderList</span><span class="token punctuation">(</span>QStringList<span class="token operator">&amp;</span> headers<span class="token punctuation">)</span><span class="token punctuation">;</span>
    QStringList <span class="token function">headerList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

private<span class="token operator">:</span>
    Ui<span class="token operator">::</span>QWDialogHeaders <span class="token operator">*</span>ui<span class="token punctuation">;</span>

    QStringListModel <span class="token operator">*</span>model<span class="token punctuation">;</span>                                                            <span class="token comment">// ����һ��stringListmodelΪ��ֱ�Ӻ������ڵ�model�Աȡ�</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">// QWDIALOGHEADERS_H</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cpp�l�-1" tabindex="-1"><a class="header-anchor" href="#cpp�l�-1" aria-hidden="true">#</a> .cpp�ļ�</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;qwdialogheaders.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;ui_qwdialogheaders.h&quot;</span></span>

QWDialogHeaders<span class="token operator">::</span><span class="token function">QWDialogHeaders</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent<span class="token punctuation">)</span> <span class="token operator">:</span>
    <span class="token function">QDialog</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">ui</span><span class="token punctuation">(</span>new Ui<span class="token operator">::</span>QWDialogHeaders<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ui<span class="token operator">-&gt;</span><span class="token function">setupUi</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>

    model <span class="token operator">=</span> new QStringListModel<span class="token punctuation">;</span>                                           <span class="token comment">// Ҳ����һ��model��Ϊ�˺�ʵ�ʵ�View���׽��бȽϡ�</span>
    ui<span class="token operator">-&gt;</span>listView<span class="token operator">-&gt;</span><span class="token function">setModel</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

QWDialogHeaders<span class="token operator">::</span><span class="token operator">~</span><span class="token function">QWDialogHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QMessageBox<span class="token operator">::</span><span class="token function">information</span><span class="token punctuation">(</span>this<span class="token punctuation">,</span><span class="token string">&quot;��ʾ&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;���ñ�ͷ����Ի���&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    delete ui<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> QWDialogHeaders<span class="token operator">::</span><span class="token function">setHeaderList</span><span class="token punctuation">(</span>QStringList<span class="token operator">&amp;</span> headers<span class="token punctuation">)</span>                   <span class="token comment">// C++�������ձ�ĳ���ڣ�</span>
<span class="token punctuation">{</span>
    model<span class="token operator">-&gt;</span><span class="token function">setStringList</span><span class="token punctuation">(</span>headers<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>

QStringList QWDialogHeaders<span class="token operator">::</span><span class="token function">headerList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> model<span class="token operator">-&gt;</span><span class="token function">stringList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="�����ڵ�����" tabindex="-1"><a class="header-anchor" href="#�����ڵ�����" aria-hidden="true">#</a> �����ڵ�����</h3><p>������ģ̬���ڣ�ֻ����һ�Σ�֮����ڴ��ж����иô��ڡ�</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>
<span class="token comment">// ���ñ�ͷ��û��ɾ��������</span>
<span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">on_act_Setheader_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>dlgSetHeaders <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> dlgSetHeaders <span class="token operator">=</span> new <span class="token function">QWDialogHeaders</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//�Ƿ񴴽�������һ�δ���֮�󶼻����ڴ�������š�</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>dlgSetHeaders<span class="token operator">-&gt;</span><span class="token function">headerList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> theModel<span class="token operator">-&gt;</span><span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//�����ͷ�����仯�����³�ʼ��</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>theModel<span class="token operator">-&gt;</span><span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            QStringList strList<span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>theModel<span class="token operator">-&gt;</span><span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                strList<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>theModel<span class="token operator">-&gt;</span><span class="token function">headerData</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>Qt<span class="token operator">::</span>Horizontal<span class="token punctuation">,</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//��ȡViewheader�İ취��</span>
                dlgSetHeaders<span class="token operator">-&gt;</span><span class="token function">setHeaderList</span><span class="token punctuation">(</span>strList<span class="token punctuation">)</span><span class="token punctuation">;</span>                                              <span class="token comment">//����model��</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">int</span> ret <span class="token operator">=</span> dlgSetHeaders<span class="token operator">-&gt;</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>ret <span class="token operator">==</span> QDialog<span class="token operator">::</span>Accepted<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        QStringList strList <span class="token operator">=</span> dlgSetHeaders<span class="token operator">-&gt;</span><span class="token function">headerList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        theModel<span class="token operator">-&gt;</span><span class="token function">setHorizontalHeaderLabels</span><span class="token punctuation">(</span>strList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="qwdialoglocate" tabindex="-1"><a class="header-anchor" href="#qwdialoglocate" aria-hidden="true">#</a> QWDialogLocate</h2><p>��ģ�鴰��һ�����õ�����������û���źźͲ۵Ĳ��롣</p><p>��������Ϊ����Ҫ��ȡ�����ںͶԷ����ڵ�ָ��Ƚ��鷳��</p><p>�����Qt���źźͲۻ��ƱȽϷ��㡣</p><h3 id="h�l�-2" tabindex="-1"><a class="header-anchor" href="#h�l�-2" aria-hidden="true">#</a> .h�ļ�</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">ifndef</span> <span class="token expression">QWDIALOGLOCATE_H</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">QWDIALOGLOCATE_H</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;QDialog&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;qstanditemmodelexample.h&gt;</span></span>

<span class="token comment">// ��ģ̬������Ҫ���ں�������֮����Խ������ƣ����͵����������ֱ༭�������&quot;����/�滻&quot;�Ի���</span>
namespace Ui <span class="token punctuation">{</span>
class QWDialogLocate<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

class QWDialogLocate <span class="token operator">:</span> public QDialog
<span class="token punctuation">{</span>
    Q_OBJECT

public<span class="token operator">:</span>
    explicit <span class="token function">QWDialogLocate</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent <span class="token operator">=</span> nullptr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">~</span><span class="token function">QWDialogLocate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">setSpinRange</span><span class="token punctuation">(</span><span class="token keyword">int</span> rowCount<span class="token punctuation">,</span><span class="token keyword">int</span> colCount<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//�������ֵ</span>
    <span class="token keyword">void</span> <span class="token function">setSpinValue</span><span class="token punctuation">(</span><span class="token keyword">int</span> rowNo<span class="token punctuation">,</span><span class="token keyword">int</span> colNo<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//���ó�ʼֵ</span>
    
    <span class="token keyword">void</span> <span class="token function">closeEvent</span><span class="token punctuation">(</span>QCloseEvent <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

private slots<span class="token operator">:</span>
    <span class="token keyword">void</span> <span class="token function">on_btnOK_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

private<span class="token operator">:</span>
    Ui<span class="token operator">::</span>QWDialogLocate <span class="token operator">*</span>ui<span class="token punctuation">;</span>


<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">endif</span> <span class="token comment">// QWDIALOGLOCATE_H</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cpp�l�-2" tabindex="-1"><a class="header-anchor" href="#cpp�l�-2" aria-hidden="true">#</a> .cpp�ļ�</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;qwdialoglocate.h&quot;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&quot;ui_qwdialoglocate.h&quot;</span></span>

QWDialogLocate<span class="token operator">::</span><span class="token function">QWDialogLocate</span><span class="token punctuation">(</span>QWidget <span class="token operator">*</span>parent<span class="token punctuation">)</span> <span class="token operator">:</span>
    <span class="token function">QDialog</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">ui</span><span class="token punctuation">(</span>new Ui<span class="token operator">::</span>QWDialogLocate<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ui<span class="token operator">-&gt;</span><span class="token function">setupUi</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

QWDialogLocate<span class="token operator">::</span><span class="token operator">~</span><span class="token function">QWDialogLocate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    delete ui<span class="token punctuation">;</span>
<span class="token punctuation">}</span>



<span class="token keyword">void</span> QWDialogLocate<span class="token operator">::</span><span class="token function">on_btnOK_clicked</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//��λ����Ԫ�񣬲������ַ���</span>
    <span class="token keyword">int</span> row <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>spinBox<span class="token operator">-&gt;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                <span class="token comment">// ��ȡ�к�</span>
    <span class="token keyword">int</span> col <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>spinBox_2<span class="token operator">-&gt;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                              <span class="token comment">// ��ȡ�к�</span>

    QStandItemModelExample<span class="token operator">*</span> parWind <span class="token operator">=</span> <span class="token punctuation">(</span>QStandItemModelExample<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">parentWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">// ��ȡ������</span>
    parWind<span class="token operator">-&gt;</span><span class="token function">setACellText</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span>col<span class="token punctuation">,</span>ui<span class="token operator">-&gt;</span>lineEdit<span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                           <span class="token comment">// ���������ں���</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>checkBox<span class="token operator">-&gt;</span><span class="token function">isChecked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> ui<span class="token operator">-&gt;</span>spinBox<span class="token operator">-&gt;</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>ui<span class="token operator">-&gt;</span>spinBox<span class="token operator">-&gt;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>checkBox_2<span class="token operator">-&gt;</span><span class="token function">isChecked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> ui<span class="token operator">-&gt;</span>spinBox_2<span class="token operator">-&gt;</span><span class="token function">setValue</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>ui<span class="token operator">-&gt;</span>spinBox_2<span class="token operator">-&gt;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> QWDialogLocate<span class="token operator">::</span><span class="token function">setSpinValue</span><span class="token punctuation">(</span><span class="token keyword">int</span> rowNo<span class="token punctuation">,</span><span class="token keyword">int</span> colNo<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ui<span class="token operator">-&gt;</span>spinBox<span class="token operator">-&gt;</span><span class="token function">setValue</span><span class="token punctuation">(</span>rowNo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>spinBox_2<span class="token operator">-&gt;</span><span class="token function">setValue</span><span class="token punctuation">(</span>colNo<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> QWDialogLocate<span class="token operator">::</span><span class="token function">setSpinRange</span><span class="token punctuation">(</span><span class="token keyword">int</span> rowCount<span class="token punctuation">,</span> <span class="token keyword">int</span> colCount<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ui<span class="token operator">-&gt;</span>spinBox<span class="token operator">-&gt;</span><span class="token function">setRange</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>rowCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ui<span class="token operator">-&gt;</span>spinBox_2<span class="token operator">-&gt;</span><span class="token function">setRange</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>colCount<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> QWDialogLocate<span class="token operator">::</span><span class="token function">closeEvent</span><span class="token punctuation">(</span>QCloseEvent <span class="token operator">*</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QStandItemModelExample<span class="token operator">*</span> parWind <span class="token operator">=</span> <span class="token punctuation">(</span>QStandItemModelExample<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">parentWidget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token comment">// ��ȡ��ָ��</span>
    parWind<span class="token operator">-&gt;</span><span class="token function">setActLocateEnable</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    parWind<span class="token operator">-&gt;</span><span class="token function">setDlgLocateNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                                    <span class="token comment">// ���ڸ�</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="���l�������" tabindex="-1"><a class="header-anchor" href="#���l�������" aria-hidden="true">#</a> ���ļ�������</h3><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>
<span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">on_actTab_Locate_triggered</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">//����stayOnTop�ĶԻ��򣬶Ի���ر�ʱ�Զ�ɾ��</span>
    ui<span class="token operator">-&gt;</span>actTab_Locate<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>false<span class="token punctuation">)</span><span class="token punctuation">;</span>
    dlgLocate <span class="token operator">=</span> new <span class="token function">QWDialogLocate</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>
    dlgLocate<span class="token operator">-&gt;</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>Qt<span class="token operator">::</span>WA_DeleteOnClose<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//�Ի���ɾ����ʱ���Զ�ɾ��  //Attribute ����</span>
    Qt<span class="token operator">::</span>WindowFlags flags <span class="token operator">=</span> dlgLocate<span class="token operator">-&gt;</span><span class="token function">windowFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//��ȡ����flags</span>
    dlgLocate<span class="token operator">-&gt;</span><span class="token function">setWindowFlags</span><span class="token punctuation">(</span>flags <span class="token operator">|</span> Qt<span class="token operator">::</span>WindowStaysOnTopHint<span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token comment">// ���ô��ڸ���λ��</span>
    dlgLocate<span class="token operator">-&gt;</span><span class="token function">setSpinRange</span><span class="token punctuation">(</span>theModel<span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>theModel<span class="token operator">-&gt;</span><span class="token function">columnCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    QModelIndex curIndex <span class="token operator">=</span> theSelection<span class="token operator">-&gt;</span><span class="token function">currentIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>curIndex<span class="token punctuation">.</span><span class="token function">isValid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> dlgLocate<span class="token operator">-&gt;</span><span class="token function">setSpinValue</span><span class="token punctuation">(</span>curIndex<span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>curIndex<span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    dlgLocate<span class="token operator">-&gt;</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">// ���ڸ���ģ��</span>
<span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">setACellText</span><span class="token punctuation">(</span><span class="token keyword">int</span> row<span class="token punctuation">,</span><span class="token keyword">int</span> column<span class="token punctuation">,</span>QString text<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QModelIndex index <span class="token operator">=</span> theModel<span class="token operator">-&gt;</span><span class="token function">index</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span>column<span class="token punctuation">)</span><span class="token punctuation">;</span>
    theSelection<span class="token operator">-&gt;</span><span class="token function">clearSelection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    theSelection<span class="token operator">-&gt;</span><span class="token function">setCurrentIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>QItemSelectionModel<span class="token operator">::</span>Select<span class="token punctuation">)</span><span class="token punctuation">;</span>
    theModel<span class="token operator">-&gt;</span><span class="token function">setData</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>text<span class="token punctuation">,</span>Qt<span class="token operator">::</span>DisplayRole<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">setActLocateEnable</span><span class="token punctuation">(</span>bool enable<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ui<span class="token operator">-&gt;</span>actTab_Locate<span class="token operator">-&gt;</span><span class="token function">setEnabled</span><span class="token punctuation">(</span>enable<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">setDlgLocateNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    dlgLocate<span class="token operator">=</span><span class="token constant">NULL</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">closeEvent</span><span class="token punctuation">(</span>QCloseEvent<span class="token operator">*</span> event<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QMessageBox<span class="token operator">::</span>StandardButton result <span class="token operator">=</span> QMessageBox<span class="token operator">::</span><span class="token function">question</span><span class="token punctuation">(</span>this<span class="token punctuation">,</span><span class="token string">&quot;ȷ��&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;ȷ��Ҫ�˳���������&quot;</span><span class="token punctuation">,</span>QMessageBox<span class="token operator">::</span>Yes<span class="token operator">|</span>QMessageBox<span class="token operator">::</span>No<span class="token operator">|</span>QMessageBox<span class="token operator">::</span>Cancel<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>result <span class="token operator">==</span> QMessageBox<span class="token operator">::</span>Yes<span class="token punctuation">)</span> event<span class="token operator">-&gt;</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> event<span class="token operator">-&gt;</span><span class="token function">ignore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> QStandItemModelExample<span class="token operator">::</span><span class="token function">on_tableView_pressed</span><span class="token punctuation">(</span><span class="token keyword">const</span> QModelIndex <span class="token operator">&amp;</span>index<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>dlgLocate<span class="token operator">!=</span><span class="token constant">NULL</span><span class="token punctuation">)</span> dlgLocate<span class="token operator">-&gt;</span><span class="token function">setSpinValue</span><span class="token punctuation">(</span>index<span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>index<span class="token punctuation">.</span><span class="token function">column</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,31),o=[e];function c(i,l){return s(),a("div",null,o)}const d=n(p,[["render",c],["__file","CustomDIalog.html.vue"]]);export{d as default};
