import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o,c as d,a as t,b as n,d as a,w as i,e}from"./app-e4bb05b4.js";const p={},u=e('<h3 id="控件" tabindex="-1"><a class="header-anchor" href="#控件" aria-hidden="true">#</a> 控件</h3><h4 id="qspinbox" tabindex="-1"><a class="header-anchor" href="#qspinbox" aria-hidden="true">#</a> QSpinBox</h4><table><thead><tr><th style="text-align:center;">属性名称</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">prefix</td><td style="text-align:center;">数字显示的前缀，</td></tr><tr><td style="text-align:center;">suffix</td><td style="text-align:center;">数字显示的后缀</td></tr><tr><td style="text-align:center;">minimun</td><td style="text-align:center;">数值范围的最小值</td></tr><tr><td style="text-align:center;">maximun</td><td style="text-align:center;">数值范围的最大值</td></tr><tr><td style="text-align:center;">singlestep</td><td style="text-align:center;">点击右侧上下调整按钮时的但不改变值，如设置为1，或0.1</td></tr><tr><td style="text-align:center;">value</td><td style="text-align:center;">当前显示的值</td></tr><tr><td style="text-align:center;">displaylntegerBase</td><td style="text-align:center;">显示的进制数</td></tr><tr><td style="text-align:center;">decimals</td><td style="text-align:center;">显示小数位数</td></tr></tbody></table><h4 id="qsliders" tabindex="-1"><a class="header-anchor" href="#qsliders" aria-hidden="true">#</a> QSliders</h4><table><thead><tr><th style="text-align:center;">属性名称</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">minimax或maximum</td><td style="text-align:center;">设置输入范围的最大值和最小值</td></tr><tr><td style="text-align:center;">singleStep</td><td style="text-align:center;">按下左右的时候，进度条的增长大小。</td></tr><tr><td style="text-align:center;">pageStep</td><td style="text-align:center;">鼠标按下的时候，滑块移动的大小。</td></tr><tr><td style="text-align:center;">value和sliderPosition</td><td style="text-align:center;">数值范围的最大值</td></tr><tr><td style="text-align:center;">orientation</td><td style="text-align:center;">设置水平或者垂直的取值。</td></tr><tr><td style="text-align:center;">tickposition</td><td style="text-align:center;">QSlide特有的，显示标尺的刻度位置</td></tr><tr><td style="text-align:center;">tickinterval</td><td style="text-align:center;">标尺刻度的间隔值</td></tr></tbody></table><h4 id="qdial" tabindex="-1"><a class="header-anchor" href="#qdial" aria-hidden="true">#</a> QDial</h4><table><thead><tr><th style="text-align:center;">属性名称</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">notchesVisible</td><td style="text-align:center;">表盘的小刻度是否可见</td></tr><tr><td style="text-align:center;">notchesTarge</td><td style="text-align:center;">表盘刻度间的间隔像素值</td></tr></tbody></table><h4 id="qabstractspinbox" tabindex="-1"><a class="header-anchor" href="#qabstractspinbox" aria-hidden="true">#</a> QAbstractSpinBox</h4><table><thead><tr><th style="text-align:center;">属性名称</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">accelearted</td><td style="text-align:center;">按住按键的时间越长，微调狂增加或者减少的速度越慢</td></tr><tr><td style="text-align:center;">CorrectionMode</td><td style="text-align:center;">编辑完成时，微调框用于更正中间值的模式</td></tr><tr><td style="text-align:center;">Alignment</td><td style="text-align:center;">对齐方式，非法标志组合不会执行任何操作</td></tr><tr><td style="text-align:center;">frame</td><td style="text-align:center;">微调框是否使用框架绘制自身</td></tr><tr><td style="text-align:center;">KeyboardTracking</td><td style="text-align:center;">键盘跟踪</td></tr><tr><td style="text-align:center;">showGroupSeparator</td><td style="text-align:center;">千位运算符，组分割符号</td></tr><tr><td style="text-align:center;">specialValue Text</td><td style="text-align:center;">最小值的时候显示这个文本而不是数值</td></tr><tr><td style="text-align:center;">wrapping</td><td style="text-align:center;">是否循环</td></tr></tbody></table>',9),g={href:"https://blog.csdn.net/kenfan1647/article/details/122395188",target:"_blank",rel:"noopener noreferrer"},k=e(`<h4 id="qprogressbar" tabindex="-1"><a class="header-anchor" href="#qprogressbar" aria-hidden="true">#</a> QProgressBar</h4><table><thead><tr><th style="text-align:center;">属性名称</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">minimum和maximum</td><td style="text-align:center;">最小值和最大值</td></tr><tr><td style="text-align:center;">value</td><td style="text-align:center;">当前值</td></tr><tr><td style="text-align:center;">textVisible</td><td style="text-align:center;">是否显示文字</td></tr><tr><td style="text-align:center;">orientation</td><td style="text-align:center;">可以设置为水平或垂直方向</td></tr><tr><td style="text-align:center;">format</td><td style="text-align:center;">显示文字的格式,%p%为显示百分比，%v为显示当前值，%m为显示总步数。</td></tr></tbody></table><h4 id="qlcdnumber" tabindex="-1"><a class="header-anchor" href="#qlcdnumber" aria-hidden="true">#</a> QLCDNumber</h4><table><thead><tr><th style="text-align:center;">属性名称</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">digitCount</td><td style="text-align:center;">显示的数的位数，如果是小数，小数点也算一个数位。</td></tr><tr><td style="text-align:center;">samllDecimalPoint</td><td style="text-align:center;">是否有小数点，显示小数</td></tr><tr><td style="text-align:center;">mode</td><td style="text-align:center;">数的显示进制，可以用setDecMode(),setBinMode()，setOctMode()，setHexMode()设置为常用的进制数</td></tr><tr><td style="text-align:center;">value</td><td style="text-align:center;">返回显示值，浮点数</td></tr><tr><td style="text-align:center;">intValue</td><td style="text-align:center;">返回显示的整数值</td></tr></tbody></table><h4 id="时间与日期的相关类" tabindex="-1"><a class="header-anchor" href="#时间与日期的相关类" aria-hidden="true">#</a> 时间与日期的相关类</h4><table><thead><tr><th style="text-align:center;">名称</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">QTime</td><td style="text-align:center;">表示时间。</td></tr><tr><td style="text-align:center;">QDate</td><td style="text-align:center;">表示日期。</td></tr><tr><td style="text-align:center;">QDateTime</td><td style="text-align:center;">表示时间日期。</td></tr><tr><td style="text-align:center;">QTimeEdit</td><td style="text-align:center;">编辑和现实时间的组件。</td></tr><tr><td style="text-align:center;">QDateEdit</td><td style="text-align:center;">编辑和显示日期时间的控件。</td></tr><tr><td style="text-align:center;">QDateTimeEdit</td><td style="text-align:center;">编辑和现实日期时间的组件。</td></tr><tr><td style="text-align:center;">QCalendar</td><td style="text-align:center;">一个用日历形式选择日期的组件。</td></tr></tbody></table><h4 id="qdatetimeedit" tabindex="-1"><a class="header-anchor" href="#qdatetimeedit" aria-hidden="true">#</a> QDateTimeEdit</h4><table><thead><tr><th style="text-align:center;">属性名称</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">currentSection</td><td style="text-align:center;">当前输入光标的位置</td></tr><tr><td style="text-align:center;">currentSectionIndex</td><td style="text-align:center;">当前输入光标位置的序号段</td></tr><tr><td style="text-align:center;">calendarPopup</td><td style="text-align:center;">是否允许弹出一个日历选择框</td></tr><tr><td style="text-align:center;">displayFormat</td><td style="text-align:center;">显示格式。</td></tr></tbody></table><h4 id="设置时间的format代码" tabindex="-1"><a class="header-anchor" href="#设置时间的format代码" aria-hidden="true">#</a> 设置时间的Format代码</h4><table><thead><tr><th style="text-align:center;">字符</th><th style="text-align:center;">意义</th></tr></thead><tbody><tr><td style="text-align:center;">d</td><td style="text-align:center;">天，不补零显示，1-31</td></tr><tr><td style="text-align:center;">dd</td><td style="text-align:center;">天，补零显示，01-31</td></tr><tr><td style="text-align:center;">M</td><td style="text-align:center;">月，不补零显示，1-12</td></tr><tr><td style="text-align:center;">MM</td><td style="text-align:center;">月，补零显示，01-12</td></tr><tr><td style="text-align:center;">yy</td><td style="text-align:center;">年，两位显示，00-99</td></tr><tr><td style="text-align:center;">yyyy</td><td style="text-align:center;">年，4位数字显示，如2016</td></tr><tr><td style="text-align:center;">h</td><td style="text-align:center;">小时，不补零显示，0-23或1-12</td></tr><tr><td style="text-align:center;">hh</td><td style="text-align:center;">小时，补零2位显示，00-23或01-12(如果显示AM/PM)</td></tr><tr><td style="text-align:center;">H</td><td style="text-align:center;">小时，不补零，0-23</td></tr><tr><td style="text-align:center;">HH</td><td style="text-align:center;">小时，补零显示，00-59</td></tr><tr><td style="text-align:center;">m</td><td style="text-align:center;">分钟，不补零，0-59</td></tr><tr><td style="text-align:center;">mm</td><td style="text-align:center;">分钟，补零显示，00-59</td></tr><tr><td style="text-align:center;">z</td><td style="text-align:center;">豪秒，不补零，0-999</td></tr><tr><td style="text-align:center;">zzz</td><td style="text-align:center;">毫秒，补零显示，000-999</td></tr><tr><td style="text-align:center;">AP或A</td><td style="text-align:center;">使用AM/pm显示</td></tr><tr><td style="text-align:center;">ap或a</td><td style="text-align:center;">使用am/pm显示</td></tr></tbody></table><h4 id="时间类与字符串类的转换" tabindex="-1"><a class="header-anchor" href="#时间类与字符串类的转换" aria-hidden="true">#</a> 时间类与字符串类的转换</h4><ul><li>QTime转变为QString Qtime time;</li></ul><p>QString strTime = time.toString(&quot;hh:mm:ss&quot;);</p><ul><li>Qstring转变为QTime</li></ul><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>按下按钮槽：
<span class="token punctuation">{</span>
  <span class="token comment">// 获取字符串</span>
    QString str <span class="token operator">=</span> ui<span class="token operator">-&gt;</span>lineEdit_SetTime<span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 整理字符串</span>
    str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">trimmed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//如果字符串存在，使用tostring变换类</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>str<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        QDateTime datetime <span class="token operator">=</span> QDateTime<span class="token operator">::</span><span class="token function">fromString</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span><span class="token string">&quot;yyyy-MM-dd hh:mm:zzz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        ui<span class="token operator">-&gt;</span>dateTimeEdit_show<span class="token operator">-&gt;</span><span class="token function">setDateTime</span><span class="token punctuation">(</span>datetime<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>fromstring函数是要str严格按照以上的方式输入，而不是设置QTime的输出。</p><h4 id="qtimer定时器类的使用" tabindex="-1"><a class="header-anchor" href="#qtimer定时器类的使用" aria-hidden="true">#</a> QTimer定时器类的使用</h4><p>定时器类主要的参数就是interval（时间间隔）。</p><p>自己构建的指针，第一步是加入头函数，第二步是建立，第三步是在构建函数上弄一个实体，第四步是在构建函数上connect，第五步才是编写槽函数。甚至还有第六步构建信号。</p>`,19),x=e(`<h4 id="qcombobox和qplaintextedit" tabindex="-1"><a class="header-anchor" href="#qcombobox和qplaintextedit" aria-hidden="true">#</a> QComboBox和QPlainTextEdit</h4><p>QComboBox中添加列表项</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>QString strList；
strList <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;item1&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;item2&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;item3&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;item4&quot;</span> <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;item5&quot;</span>；<span class="token comment">// 添加列表项</span>
ui<span class="token operator">-&gt;</span>comboBox<span class="token operator">-&gt;</span><span class="token function">addItems</span><span class="token punctuation">(</span>strList<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>QComboBox有三个current属性。Index、Text、Data。</p><p>QPlainTextEdit取文本</p><p>有一个数据类型叫做 QTextDocument</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>按键按下：<span class="token punctuation">{</span><span class="token punctuation">}</span>
QTextDocument<span class="token operator">*</span> doc <span class="token operator">=</span> ui <span class="token operator">-&gt;</span> plainTextEdit<span class="token operator">-&gt;</span><span class="token function">document</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> cnt <span class="token operator">=</span> doc <span class="token operator">-&gt;</span><span class="token function">blockCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>cnt<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        QTextBlock textLine <span class="token operator">=</span> doc<span class="token operator">-&gt;</span><span class="token function">findBlockByNumber</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        QString str <span class="token operator">=</span> textLine<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ui<span class="token operator">-&gt;</span>comboBox_2<span class="token operator">-&gt;</span><span class="token function">addItem</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="qlistwidget和qtoolbutton" tabindex="-1"><a class="header-anchor" href="#qlistwidget和qtoolbutton" aria-hidden="true">#</a> QListWidget和QToolButton</h4><p>QT中用于处理项(item)的组件有两类，第一类是Item Views，包括QListView、QTreeView、QTableView等；第二类是List Widgets，包括QListWidget、QListWidget、QTableWidget等</p><p>Item Views是基于模型/视图结构即(Model-View)结构，这两个东西关联实现数据的显示和编辑。</p><p>Item Widgets是直接将数据存储在每一个项里。</p><ul><li>Item中项目的flag属性</li></ul><table><thead><tr><th style="text-align:center;">名称</th><th style="text-align:center;">功能</th></tr></thead><tbody><tr><td style="text-align:center;">Selectable</td><td style="text-align:center;">项是否可以被选择</td></tr><tr><td style="text-align:center;">Editable</td><td style="text-align:center;">项是否可以被编辑</td></tr><tr><td style="text-align:center;">DragEnable</td><td style="text-align:center;">项是否可以被拖拽</td></tr><tr><td style="text-align:center;">DropEnable</td><td style="text-align:center;">项是否可以接受被拖放的项</td></tr><tr><td style="text-align:center;">UserCheckable</td><td style="text-align:center;">项是否可以被复选</td></tr><tr><td style="text-align:center;">Enable</td><td style="text-align:center;">项是否使能</td></tr><tr><td style="text-align:center;">Tristate</td><td style="text-align:center;">是否允许Check的第三种形态</td></tr></tbody></table>`,13),h=e(`<h4 id="qpushbutton的区别" tabindex="-1"><a class="header-anchor" href="#qpushbutton的区别" aria-hidden="true">#</a> QPushButton的区别</h4><p>在dialog中的东西，按键只有一个default。</p><h4 id="qlistwidget的current-itemchanged-有比较强大的功能。" tabindex="-1"><a class="header-anchor" href="#qlistwidget的current-itemchanged-有比较强大的功能。" aria-hidden="true">#</a> QListWidget的current_ItemChanged()有比较强大的功能。</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_listWidget_currentItemChanged</span><span class="token punctuation">(</span>QListWidgetItem <span class="token operator">*</span>current<span class="token punctuation">,</span> QListWidgetItem <span class="token operator">*</span>previous<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    QString str<span class="token punctuation">;</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>current <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>previous <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            str <span class="token operator">=</span> <span class="token string">&quot;当前项:&quot;</span> <span class="token operator">+</span> current<span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">else</span> str <span class="token operator">=</span> str <span class="token operator">=</span> <span class="token string">&quot;前一项:&quot;</span> <span class="token operator">+</span>  previous<span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;当前项&quot;</span> <span class="token operator">+</span> current<span class="token operator">-&gt;</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    ui<span class="token operator">-&gt;</span>lineEdit<span class="token operator">-&gt;</span><span class="token function">setText</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>并且前一个并不是顺序的前一个而是，自己按键的前一个。</p><h4 id="qtoolbutton与下拉式按键" tabindex="-1"><a class="header-anchor" href="#qtoolbutton与下拉式按键" aria-hidden="true">#</a> QToolButton与下拉式按键</h4><p>定制化菜单是需要ListWidget有这个信号发出，没有这个信号不会进入那个函数。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>
<span class="token keyword">void</span> MainWindow<span class="token operator">::</span><span class="token function">on_listWidget_customContextMenuRequested</span><span class="token punctuation">(</span><span class="token keyword">const</span> QPoint <span class="token operator">&amp;</span>pos<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">Q_UNUSED</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
    QMenu<span class="token operator">*</span> m <span class="token operator">=</span> new <span class="token function">QMenu</span><span class="token punctuation">(</span>this<span class="token punctuation">)</span><span class="token punctuation">;</span>
    m<span class="token operator">-&gt;</span><span class="token function">addAction</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>actListIni<span class="token punctuation">)</span><span class="token punctuation">;</span>
    m<span class="token operator">-&gt;</span><span class="token function">addAction</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>actListInsert<span class="token punctuation">)</span><span class="token punctuation">;</span>
    m<span class="token operator">-&gt;</span><span class="token function">addSeparator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    m<span class="token operator">-&gt;</span><span class="token function">addAction</span><span class="token punctuation">(</span>ui<span class="token operator">-&gt;</span>actListClear<span class="token punctuation">)</span><span class="token punctuation">;</span>

    m<span class="token operator">-&gt;</span><span class="token function">exec</span><span class="token punctuation">(</span>QCursor<span class="token operator">::</span><span class="token function">pos</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//ListWidget右键菜单循环卡住。</span>
    delete m<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="qfiledialog的使用" tabindex="-1"><a class="header-anchor" href="#qfiledialog的使用" aria-hidden="true">#</a> QFileDialog的使用</h4><p>QStringList files = QFileDialog::getOpenFileNames(this,&quot;选择一个或多个文件&quot;,&quot;&quot;,&quot;Images(*.jpg)&quot;); // 获取用户选择的文件并且编写了过滤器</p><p><em><strong>乱起八糟</strong></em></p><h3 id="dockwidget你的操作" tabindex="-1"><a class="header-anchor" href="#dockwidget你的操作" aria-hidden="true">#</a> Dockwidget你的操作</h3><ul><li>1.父类清空，在清空才可以删除对象，清除父类也可以消除某类里面的排列。</li></ul><h3 id="action的问题" tabindex="-1"><a class="header-anchor" href="#action的问题" aria-hidden="true">#</a> Action的问题</h3><ul><li>1.可选必须设置，才可以有两种状态，toogle才可以使用。</li></ul><h3 id="qsizepolicy属性" tabindex="-1"><a class="header-anchor" href="#qsizepolicy属性" aria-hidden="true">#</a> QsizePolicy属性</h3><ul><li>1.伸展因子，会根据窗口伸展的大小，来分配相应的空间。</li></ul><h3 id="关于状态栏清空" tabindex="-1"><a class="header-anchor" href="#关于状态栏清空" aria-hidden="true">#</a> 关于状态栏清空</h3><ul><li>1.remove的函数会同时帮你删除实体，所以需要重新new。</li></ul>`,19);function m(y,b){const r=l("ExternalLinkIcon"),s=l("RouterLink");return o(),d("div",null,[u,t("p",null,[n("稍微详细一点 "),t("a",g,[n("QAbstractSpinBox"),a(r)])]),k,t("p",null,[a(s,{to:"/project/QT/Timer.html#_4-%E5%81%9A%E5%A5%BD%E5%AE%9A%E6%97%B6%E5%99%A8%E6%9D%BF%E5%9D%97"},{default:i(()=>[n("跳转项目")]),_:1})]),x,t("p",null,[a(s,{to:"/project/QT/Timer.html#qlistwidget%E5%92%8C%E7%9A%84tablewidget%E4%B8%8Etoolbuton%E7%9A%84%E4%BD%BF%E7%94%A8"},{default:i(()=>[n("跳转项目")]),_:1})]),h])}const Q=c(p,[["render",m],["__file","five.html.vue"]]);export{Q as default};
