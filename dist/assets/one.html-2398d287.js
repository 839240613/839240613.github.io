import{_ as u}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as d,c as h,a as s,b as a,d as t,w as n,e as l}from"./app-82a511c8.js";const g="/assets/images/位运算.png",k="/assets/images/三种奇次数的寻找.png",b="/assets/images/四种奇次数.png",y={},_={id:"_1-算法评估",tabindex:"-1"},v=s("a",{class:"header-anchor",href:"#_1-算法评估","aria-hidden":"true"},"#",-1),w=s("p",null,"一个操作如果和样本的数据量没有关系，每次都是固定时间完成的操作，叫做常数操作。",-1),x=s("p",null,"一般来说，评价一个算法的好坏，先看时间复杂度，然后再分析常数操作所需要的时间。",-1),f={id:"算法时间评估模型",tabindex:"-1"},E=s("a",{class:"header-anchor",href:"#算法时间评估模型","aria-hidden":"true"},"#",-1),M=s("ul",null,[s("li",null,[s("ol",null,[s("li",null,"每个元素最多会被访问多少次")])]),s("li",null,[s("ol",{start:"2"},[s("li",null,"循环中的时间复杂度找到循环中量的变化，与做事情的次数")])]),s("li",null,[s("ol",{start:"3"},[s("li",null,"MASTER公式")])])],-1),B={id:"递归模型",tabindex:"-1"},A=s("a",{class:"header-anchor",href:"#递归模型","aria-hidden":"true"},"#",-1),N=l('<ul><li><ol><li>放苹果模型,不断把一件事情变成简单的事情，最后在简单的事情上进行累加。</li></ol></li><li><ol start="2"><li>汉诺塔模型，不断做一件事情。</li></ol></li><li><ol start="3"><li>二叉树的各种递归。三种</li></ol><ul><li><p>（找公共结点）利用后序遍历向上返回信息的特性，从上方获取下面的数据。</p></li><li><p>（序列化） 利用遍历，在打印的位置新建string，并在最后返回stirng。储存性的递归。</p></li><li><p>（折纸） 利用单纯的递归，模仿了二叉树的中序遍历，利用，i，N，bool三个参数完成。</p></li></ul></li></ul>',1),L={id:"_2-位运算",tabindex:"-1"},C=s("a",{class:"header-anchor",href:"#_2-位运算","aria-hidden":"true"},"#",-1),F={id:"_2-1-异或的性质",tabindex:"-1"},z=s("a",{class:"header-anchor",href:"#_2-1-异或的性质","aria-hidden":"true"},"#",-1),R=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mn",null,"0"),s("mo",null,"∧"),s("mi",null,"N"),s("mo",null,"="),s("mi",null,"N")]),s("annotation",{encoding:"application/x-tex"}," 0\\wedge N=N ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])])])])],-1),V=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"N"),s("mo",null,"∧"),s("mi",null,"N"),s("mo",null,"="),s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"}," N\\wedge N= 0 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])])])],-1),q=s("p",null,"由上述两个式子，得知异或满足交换律和结合律，用没有脑子的话说就是：",-1),Z=s("ul",null,[s("li",null,[s("ol",null,[s("li",null,[a("可以换位置,即 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"N"),s("mo",null,"∧"),s("mn",null,"0"),s("mo",null,"="),s("mn",null,"0"),s("mo",null,"∧"),s("mi",null,"N"),s("mo",null,"="),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"N\\wedge 0= 0\\wedge N = 1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),a(" 。")])])]),s("li",null,[s("ol",{start:"2"},[s("li",null,[a("括号可以乱括起来,即 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"N"),s("mo",null,"∧"),s("mrow",null,[s("mo",{fence:"true"},"("),s("mn",null,"0"),s("mo",null,"∧"),s("mi",null,"N"),s("mo",{fence:"true"},")")]),s("mo",null,"="),s("mrow",null,[s("mo",{fence:"true"},"("),s("mi",null,"N"),s("mo",null,"∧"),s("mn",null,"0"),s("mo",{fence:"true"},")")]),s("mo",null,"∧"),s("mi",null,"N"),s("mo",null,"="),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"N\\wedge \\left ( 0\\wedge N \\right ) = \\left ( N\\wedge 0 \\right ) \\wedge N = 1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},"("),s("span",{class:"mord"},"0"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mclose delimcenter",style:{top:"0em"}},")")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"0"),s("span",{class:"mclose delimcenter",style:{top:"0em"}},")")]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),a(" 。")])])])],-1),U=l(`<p>有一种异或的说法就是不进位相加，半加器和全加器就有异或运算的参与。</p><p><strong>代码</strong>：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token comment">//样本  </span>
<span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token operator">/</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//计算数组的长度</span>
<span class="token keyword">int</span> err<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//用来存储异或的结果</span>

<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		err<span class="token operator">^=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">//计算所有数一起异或后的异或值</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>err则为问题的答案。</p>`,4),D={id:"_2-2-用法",tabindex:"-1"},j=s("a",{class:"header-anchor",href:"#_2-2-用法","aria-hidden":"true"},"#",-1),H=s("ul",null,[s("li",null,[s("ol",null,[s("li",null,"问一种奇次数的数，其余都是偶次数的数，求奇次数的数。")])])],-1),O=s("p",null,"例子：",-1),Q=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"f"),s("mrow",null,[s("mo",{fence:"true"},"("),s("mn",null,"1"),s("mo",{separator:"true"},","),s("mn",null,"1"),s("mo",{separator:"true"},","),s("mn",null,"2"),s("mo",{separator:"true"},","),s("mn",null,"2"),s("mo",{separator:"true"},","),s("mn",null,"3"),s("mo",{fence:"true"},")")]),s("mo",null,"⇒"),s("mn",null,"3")]),s("annotation",{encoding:"application/x-tex"}," f\\left ( 1,1,2,2,3 \\right ) \\Rightarrow 3 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},"("),s("span",{class:"mord"},"1"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mclose delimcenter",style:{top:"0em"}},")")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"⇒"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3")])])])])],-1),T=s("p",null,"经过异或的性质就可以知道，把所有的数都异或，就可以得出3。",-1),Y=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mrow",null,[s("mo",{fence:"true"},"("),s("mn",null,"1"),s("mo",null,"∧"),s("mn",null,"1"),s("mo",{fence:"true"},")")]),s("mo",null,"∧"),s("mrow",null,[s("mo",{fence:"true"},"("),s("mn",null,"2"),s("mo",null,"∧"),s("mn",null,"2"),s("mo",{fence:"true"},")")]),s("mo",null,"∧"),s("mn",null,"3"),s("mo",null,"="),s("mn",null,"0"),s("mo",null,"∧"),s("mn",null,"0"),s("mo",null,"∧"),s("mn",null,"3"),s("mo",null,"="),s("mn",null,"0"),s("mo",null,"∧"),s("mn",null,"3"),s("mo",null,"="),s("mn",null,"3")]),s("annotation",{encoding:"application/x-tex"}," \\left ( 1\\wedge1 \\right )\\wedge\\left ( 2\\wedge 2 \\right ) \\wedge 3 = 0 \\wedge 0 \\wedge 3 = 0 \\wedge3 = 3 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},"("),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mclose delimcenter",style:{top:"0em"}},")")]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},"("),s("span",{class:"mord"},"2"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mclose delimcenter",style:{top:"0em"}},")")]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3")])])])])],-1),S=s("ul",null,[s("li",null,[s("ol",{start:"2"},[s("li",null,"问两种奇次数的数，其余都是偶次数的数，求奇次数的数。")])])],-1),K=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"f"),s("mrow",null,[s("mo",{fence:"true"},"("),s("mn",null,"1"),s("mo",{separator:"true"},","),s("mn",null,"1"),s("mo",{separator:"true"},","),s("mn",null,"2"),s("mo",{separator:"true"},","),s("mn",null,"2"),s("mo",{separator:"true"},","),s("mn",null,"3"),s("mo",{separator:"true"},","),s("mn",null,"4"),s("mo",{fence:"true"},")")]),s("mo",null,"⇒"),s("mn",null,"3"),s("mo",{separator:"true"},","),s("mn",null,"4")]),s("annotation",{encoding:"application/x-tex"}," f\\left ( 1,1,2,2,3,4 \\right ) \\Rightarrow 3,4 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},"("),s("span",{class:"mord"},"1"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"4"),s("span",{class:"mclose delimcenter",style:{top:"0em"}},")")]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"⇒"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8389em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"4")])])])])],-1),P=s("p",null,"根据1，我们有从一堆数中找到一种奇次数的方法。",-1),W=s("p",null,[s("strong",null,"思维模式：")],-1),X=s("img",{src:g},null,-1),I=s("p",null,[s("strong",null,"分类的具体方法：")],-1),J=s("p",null,[a("所有的数异或后得出："),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"A"),s("mo",null,"∧"),s("mi",null,"B")]),s("annotation",{encoding:"application/x-tex"},"A \\wedge B")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal"},"A"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05017em"}},"B")])])])],-1),G=s("p",null,[a("A和B是两个不同的数，异或之后，为1的位，说明两个数在这一位不同，比如"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mn",null,"3"),s("mo",null,"∧"),s("mn",null,"4")]),s("annotation",{encoding:"application/x-tex"},"3 \\wedge 4")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"4")])])]),a("如下所示：")],-1),$=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mn",null,"00000011"),s("mo",null,"∧"),s("mn",null,"000000100"),s("mo",null,"="),s("mn",null,"00000111"),s("mo",{stretchy:"false"},"("),s("mtext",null,"公式"),s("mn",null,"1"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"}," 00000011 \\wedge 000000100 = 00000111 (公式1) ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"00000011"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"000000100"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},"00000111"),s("span",{class:"mopen"},"("),s("span",{class:"mord cjk_fallback"},"公式"),s("span",{class:"mord"},"1"),s("span",{class:"mclose"},")")])])])])],-1),ss=s("p",null,"根据上述等号右边的位，可以随便把所有的数分为两组，一组是该位有1，另一组则是该位无1。",-1),as=s("p",null,[s("strong",null,"如果样本为1,1,2,2,3,4则可进行如下分类:")],-1),ns=s("p",null,[a("为1： 1，1，3 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"⇒")]),s("annotation",{encoding:"application/x-tex"},"\\Rightarrow")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.3669em"}}),s("span",{class:"mrel"},"⇒")])])]),a(" 异或得： 3")],-1),ts=s("p",null,[a("为0： 2，2，4 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"⇒")]),s("annotation",{encoding:"application/x-tex"},"\\Rightarrow")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.3669em"}}),s("span",{class:"mrel"},"⇒")])])]),a(" 异或得： 4")],-1),es=s("p",null,[a("为1： 2，2，3 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"⇒")]),s("annotation",{encoding:"application/x-tex"},"\\Rightarrow")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.3669em"}}),s("span",{class:"mrel"},"⇒")])])]),a(" 异或得： 3")],-1),ls=s("p",null,[a("为0： 1，1，4 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"⇒")]),s("annotation",{encoding:"application/x-tex"},"\\Rightarrow")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.3669em"}}),s("span",{class:"mrel"},"⇒")])])]),a(" 异或得： 4")],-1),ps=s("p",null,[a("为1：4 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"⇒")]),s("annotation",{encoding:"application/x-tex"},"\\Rightarrow")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.3669em"}}),s("span",{class:"mrel"},"⇒")])])]),a(" 异或得： 4")],-1),cs=s("p",null,[a("为0：1，1，2，2，3 "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",null,"⇒")]),s("annotation",{encoding:"application/x-tex"},"\\Rightarrow")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.3669em"}}),s("span",{class:"mrel"},"⇒")])])]),a(" 异或得： 3")],-1),os=s("h4",{id:"根据公式1和分组为0所得的数进行一次异或-可以得到另外一个分组的奇次项数字。",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#根据公式1和分组为0所得的数进行一次异或-可以得到另外一个分组的奇次项数字。","aria-hidden":"true"},"#"),a(" 根据公式1和分组为0所得的数进行一次异或，可以得到另外一个分组的奇次项数字。")],-1),is=s("p",null,"即：",-1),rs=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mtext",null,"公式"),s("mn",null,"1"),s("mo",null,"∧"),s("mtext",null,"分组后为"),s("mn",null,"0"),s("mo",null,"="),s("mn",null,"3"),s("mo",null,"∧"),s("mn",null,"4"),s("mo",null,"∧"),s("mn",null,"3"),s("mi",null,"o"),s("mi",null,"r"),s("mn",null,"4"),s("mo",null,"="),s("mn",null,"4"),s("mi",null,"o"),s("mi",null,"r"),s("mn",null,"3")]),s("annotation",{encoding:"application/x-tex"}," 公式1 \\wedge 分组后为0 = 3\\wedge 4 \\wedge 3or4 = 4or3 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord cjk_fallback"},"公式"),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord cjk_fallback"},"分组后为"),s("span",{class:"mord"},"0"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"4"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∧"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"or"),s("span",{class:"mord"},"4"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"4"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"or"),s("span",{class:"mord"},"3")])])])])],-1),ms=l(`<p>这里必须要为分组0，不是的话程序会出错，这是关于异或运算的一些细节。<a href="#%E4%B8%8A%E6%96%87%E6%9C%89%E8%AF%B4%E5%88%B0%E4%B8%80%E4%B8%AA%E9%97%AE%E9%A2%98%E6%98%AF-%E5%8F%B7%E5%B7%A6%E8%BE%B9%E6%9C%80%E5%A5%BD%E6%98%AF0%E8%B7%B3%E8%BD%AC">想先了解这个</a></p><p><strong>代码</strong>：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token operator">*</span> arr<span class="token punctuation">,</span><span class="token keyword">int</span> len<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">int</span> err <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> err_sort <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		err<span class="token operator">^=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//获取a^b</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">int</span> sortnumber <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">~</span>err<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> err<span class="token punctuation">;</span> <span class="token comment">//获取最右边的1</span>
	
	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token comment">//进行数组的分类</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token punctuation">(</span>sortnumber <span class="token operator">&amp;</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">//根据分组为0进行分类。因为是位运算，</span>
    <span class="token punctuation">{</span> <span class="token comment">//你想根据分组为1分类可以，但是==号的右边很可能不是1。</span>
			err_sort <span class="token operator">^=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//获取分类后的异或数</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	err <span class="token operator">^=</span> err_sort<span class="token punctuation">;</span> <span class="token comment">//获取另一个异或数</span>
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;err=%d , err_sort=%d&quot;</span><span class="token punctuation">,</span>err<span class="token punctuation">,</span>err_sort<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span><span class="token punctuation">;</span>

 <span class="token punctuation">}</span> 


<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">}</span><span class="token punctuation">;</span> 
	<span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token operator">/</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
	<span class="token function">find</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span> 
	
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span> 


<span class="token operator">-</span> <span class="token number">3.</span> 最快速的交换

<span class="token operator">*</span><span class="token operator">*</span>代码<span class="token operator">*</span><span class="token operator">*</span>：

\`\`\`c
<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

a <span class="token operator">=</span> a<span class="token operator">^</span>b<span class="token punctuation">;</span> <span class="token comment">//结果为 a^b</span>
b <span class="token operator">=</span> a<span class="token operator">^</span>b<span class="token punctuation">;</span> <span class="token comment">//结果为 a^b^b = a</span>
a <span class="token operator">=</span> a<span class="token operator">^</span>b<span class="token punctuation">;</span> <span class="token comment">//结果为 a^b^a = b</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>致命缺陷</strong>：</p><p>如果两个地址相同的数进行异或交换，会出现乱码。</p><p>怎么会有人用地址相同的两个数进行交换呢？傻吧。</p><p>会的，因为所有的算法都趋向与给你一个框架，然后代码自己跑</p><p>他在一个框架中乱跑，会不会出现地址相同的两个数进行交换，就是你的框架问题了。</p>`,8),us={id:"_2-3-重点or触点",tabindex:"-1"},ds=s("a",{class:"header-anchor",href:"#_2-3-重点or触点","aria-hidden":"true"},"#",-1),hs=s("p",null,"初步了解了交换算法可以实现的其他方案，明白在电子的世界，优缺点都是相对的。",-1),gs=s("p",null,"获得了根据位可以进行分类的工具。",-1),ks=s("p",null,"思想是最重要的，根据可以对两种奇次数进行分类，就可以进行多种奇次数进行分类。",-1),bs={id:"_2-4-补充-位运算",tabindex:"-1"},ys=s("a",{class:"header-anchor",href:"#_2-4-补充-位运算","aria-hidden":"true"},"#",-1),_s=l(`<h4 id="上文有说到一个问题是-号左边最好是0-寻找上文" tabindex="-1"><a class="header-anchor" href="#上文有说到一个问题是-号左边最好是0-寻找上文" aria-hidden="true">#</a> 上文有说到一个问题是==号左边最好是0 <a href="#%E6%A0%B9%E6%8D%AE%E5%85%AC%E5%BC%8F1%E5%92%8C%E5%88%86%E7%BB%84%E4%B8%BA0%E6%89%80%E5%BE%97%E7%9A%84%E6%95%B0%E8%BF%9B%E8%A1%8C%E4%B8%80%E6%AC%A1%E5%BC%82%E6%88%96-%E5%8F%AF%E4%BB%A5%E5%BE%97%E5%88%B0%E5%8F%A6%E5%A4%96%E4%B8%80%E4%B8%AA%E5%88%86%E7%BB%84%E7%9A%84%E5%A5%87%E6%AC%A1%E9%A1%B9%E6%95%B0%E5%AD%97%E3%80%82">寻找上文</a></h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code>	<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">0</span>b00000100<span class="token punctuation">;</span>
	<span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token number">0</span>b00001000<span class="token punctuation">;</span> 
	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;\\r\\n%d&quot;</span><span class="token punctuation">,</span>a<span class="token operator">^</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述代码的输出结果是12。</p><p>也就是说，如果分组中有8，分组的位是第三位，</p><p>那么这两个数进行异或运算是12，并不是1，</p><p>它属于1的分组，但是异或运算的结果并不是1。</p><p>而处于0的分组异或运算绝对是0。</p>`,7),vs={id:"_2-5-做一个三种奇次数寻找的思路。",tabindex:"-1"},ws=s("a",{class:"header-anchor",href:"#_2-5-做一个三种奇次数寻找的思路。","aria-hidden":"true"},"#",-1),xs=l('<p><strong>样本为1,1,2,2,3,4,5</strong></p><div style="text-align:center;"><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><p>走到第二步大概就已经解决问题了。这个模型已经到了解决一个一种奇数次和两种奇数次的模型。</p><p>那么四种就显而易见有可能有问题。</p><p>因为模型可能变成这样的分组，一种奇数次和三种奇数次的模型或者两种奇数次和两种奇数次的模型</p><p>会变成哪种模型这是非常不确定的，很可能需要再进行分类。</p><p><strong>样本为1,1,2,2,3,4,5,6尝试一下</strong></p><div style="text-align:center;"><figure><img src="'+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></div><p>在第三步的最右边，在1,3分组的情况下会得出一个0，可以在这个0上做一个分类。</p>',9),fs=s("p",null,"这样应该就可以了。",-1),Es=s("p",null,"五次以上的我就不探讨了，xmind的图建议右键打开看。以后我尽量想办法用矢量图。",-1),Ms={id:"_2-6-牛逼puls的位运算仓库",tabindex:"-1"},Bs=s("a",{class:"header-anchor",href:"#_2-6-牛逼puls的位运算仓库","aria-hidden":"true"},"#",-1),As=l(`<p>记录一些我自己觉得牛逼哄哄的位运算得到一些结果的代码。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token operator">-</span> <span class="token number">1.</span> <span class="token keyword">int</span> mid <span class="token operator">=</span> L<span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>R<span class="token operator">-</span>L<span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 防止<span class="token keyword">int</span> mid溢出。
 <span class="token comment">//因为运算符的优先顺序，括号是必须的。</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function Ns(Ls,Cs){const e=o("font"),i=o("center"),r=o("Tabs"),m=o("FlowChart");return d(),h("div",null,[s("h2",_,[v,a(),t(e,{color:"red"},{default:n(()=>[a("#")]),_:1}),a("1. 算法评估")]),w,x,s("h2",f,[E,a(),t(e,{color:"red"},{default:n(()=>[a("#")]),_:1}),a(" 算法时间评估模型")]),M,s("h2",B,[A,a(),t(e,{color:"red"},{default:n(()=>[a("#")]),_:1}),a(" 递归模型")]),N,s("h2",L,[C,a(),t(e,{color:"red"},{default:n(()=>[a("#")]),_:1}),a("2. 位运算")]),s("h3",F,[z,a(" 2.1   "),t(e,{color:"red"},{default:n(()=>[a("|")]),_:1}),a("异或的性质")]),R,V,q,Z,U,s("h3",D,[j,a(" 2.2   "),t(e,{color:"red"},{default:n(()=>[a("|")]),_:1}),a("用法")]),H,O,Q,T,Y,S,K,P,W,t(i,null,{default:n(()=>[X]),_:1}),I,J,G,$,ss,as,t(r,{id:"188",data:[{id:"A"},{id:"B"},{id:"C"}],"tab-id":"fruit"},{title0:n(({value:p,isActive:c})=>[a("按第一位分")]),title1:n(({value:p,isActive:c})=>[a("按第二位分")]),title2:n(({value:p,isActive:c})=>[a("按第三位分")]),tab0:n(({value:p,isActive:c})=>[ns,ts]),tab1:n(({value:p,isActive:c})=>[es,ls]),tab2:n(({value:p,isActive:c})=>[ps,cs]),_:1}),os,is,rs,ms,s("h3",us,[ds,a(" 2.3   "),t(e,{color:"red"},{default:n(()=>[a("|")]),_:1}),a(" 重点or触点")]),hs,gs,ks,s("h3",bs,[ys,a(" 2.4   "),t(e,{color:"red"},{default:n(()=>[a("|")]),_:1}),a(" 补充，位运算")]),_s,s("h3",vs,[ws,a(" 2.5   "),t(e,{color:"red"},{default:n(()=>[a("|")]),_:1}),a(" 做一个三种奇次数寻找的思路。")]),xs,t(m,{id:"flowchart-311",code:"eJxLzs9LsbUDkZklmfl5VgrPZqx/OmHZszmdBvZcBUX5yanFxbZ2+QWpRYkQ+afrd4Ikn89qedq/7MmOhue7W5629b7YP/vFwp7nU1Y82dH5fHnv06Xtz6ZueLZm4bMVC5/O6+ZKtbVLzUuxUni+e/KzufO5uED2aVSmFmvq2kHt0LVLhYjm5QMFU7kAUi9LFQ==",preset:"vue"}),fs,Es,s("h3",Ms,[Bs,a(" 2.6   "),t(e,{color:"red"},{default:n(()=>[a("|")]),_:1}),a(" 牛逼puls的位运算仓库")]),As])}const Rs=u(y,[["render",Ns],["__file","one.html.vue"]]);export{Rs as default};
